

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 07 17:02:59 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF18323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.30
    42                           ; Generated 15/09/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16LF18323 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0097                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  018C                     	;# 
   135  018E                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020E                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  028C                     	;# 
   180  028E                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0295                     	;# 
   188  0296                     	;# 
   189  0297                     	;# 
   190  0298                     	;# 
   191  030C                     	;# 
   192  030E                     	;# 
   193  038C                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0397                     	;# 
   199  0398                     	;# 
   200  0399                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0498                     	;# 
   207  0498                     	;# 
   208  0499                     	;# 
   209  049A                     	;# 
   210  049B                     	;# 
   211  049B                     	;# 
   212  049C                     	;# 
   213  049D                     	;# 
   214  049E                     	;# 
   215  049F                     	;# 
   216  0617                     	;# 
   217  0618                     	;# 
   218  0619                     	;# 
   219  0619                     	;# 
   220  061A                     	;# 
   221  061B                     	;# 
   222  061C                     	;# 
   223  061C                     	;# 
   224  0691                     	;# 
   225  0692                     	;# 
   226  0693                     	;# 
   227  0694                     	;# 
   228  0695                     	;# 
   229  0696                     	;# 
   230  0697                     	;# 
   231  0698                     	;# 
   232  0699                     	;# 
   233  0891                     	;# 
   234  0891                     	;# 
   235  0891                     	;# 
   236  0891                     	;# 
   237  0891                     	;# 
   238  0891                     	;# 
   239  0892                     	;# 
   240  0892                     	;# 
   241  0892                     	;# 
   242  0893                     	;# 
   243  0893                     	;# 
   244  0893                     	;# 
   245  0893                     	;# 
   246  0893                     	;# 
   247  0893                     	;# 
   248  0894                     	;# 
   249  0894                     	;# 
   250  0894                     	;# 
   251  0895                     	;# 
   252  0895                     	;# 
   253  0895                     	;# 
   254  0896                     	;# 
   255  0896                     	;# 
   256  0896                     	;# 
   257  089B                     	;# 
   258  0911                     	;# 
   259  0912                     	;# 
   260  0913                     	;# 
   261  0914                     	;# 
   262  0915                     	;# 
   263  0916                     	;# 
   264  0918                     	;# 
   265  0919                     	;# 
   266  091A                     	;# 
   267  091B                     	;# 
   268  091C                     	;# 
   269  091D                     	;# 
   270  091E                     	;# 
   271  091F                     	;# 
   272  0E0F                     	;# 
   273  0E10                     	;# 
   274  0E11                     	;# 
   275  0E12                     	;# 
   276  0E13                     	;# 
   277  0E14                     	;# 
   278  0E15                     	;# 
   279  0E18                     	;# 
   280  0E1A                     	;# 
   281  0E1B                     	;# 
   282  0E1C                     	;# 
   283  0E20                     	;# 
   284  0E21                     	;# 
   285  0E22                     	;# 
   286  0E24                     	;# 
   287  0E25                     	;# 
   288  0E28                     	;# 
   289  0E29                     	;# 
   290  0E2A                     	;# 
   291  0E2B                     	;# 
   292  0E90                     	;# 
   293  0E91                     	;# 
   294  0E92                     	;# 
   295  0E94                     	;# 
   296  0E95                     	;# 
   297  0EA0                     	;# 
   298  0EA1                     	;# 
   299  0EA2                     	;# 
   300  0EA3                     	;# 
   301  0EA4                     	;# 
   302  0EA5                     	;# 
   303  0F0F                     	;# 
   304  0F10                     	;# 
   305  0F11                     	;# 
   306  0F12                     	;# 
   307  0F13                     	;# 
   308  0F14                     	;# 
   309  0F15                     	;# 
   310  0F16                     	;# 
   311  0F17                     	;# 
   312  0F18                     	;# 
   313  0F19                     	;# 
   314  0F1A                     	;# 
   315  0F1B                     	;# 
   316  0F1C                     	;# 
   317  0F1D                     	;# 
   318  0F1E                     	;# 
   319  0F1F                     	;# 
   320  0F20                     	;# 
   321  0F21                     	;# 
   322  0F22                     	;# 
   323  0F23                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000E                     	;# 
   349  0010                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0014                     	;# 
   354  0015                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  001D                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  008C                     	;# 
   369  008E                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0097                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010E                     	;# 
   384  0111                     	;# 
   385  0112                     	;# 
   386  0113                     	;# 
   387  0114                     	;# 
   388  0115                     	;# 
   389  0116                     	;# 
   390  0117                     	;# 
   391  0118                     	;# 
   392  0119                     	;# 
   393  018C                     	;# 
   394  018E                     	;# 
   395  0199                     	;# 
   396  0199                     	;# 
   397  0199                     	;# 
   398  019A                     	;# 
   399  019A                     	;# 
   400  019A                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019C                     	;# 
   407  019C                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019D                     	;# 
   411  019D                     	;# 
   412  019E                     	;# 
   413  019E                     	;# 
   414  019E                     	;# 
   415  019F                     	;# 
   416  019F                     	;# 
   417  019F                     	;# 
   418  019F                     	;# 
   419  019F                     	;# 
   420  020C                     	;# 
   421  020E                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0216                     	;# 
   435  0216                     	;# 
   436  0217                     	;# 
   437  0217                     	;# 
   438  028C                     	;# 
   439  028E                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0297                     	;# 
   449  0298                     	;# 
   450  030C                     	;# 
   451  030E                     	;# 
   452  038C                     	;# 
   453  038E                     	;# 
   454  0391                     	;# 
   455  0392                     	;# 
   456  0393                     	;# 
   457  0397                     	;# 
   458  0398                     	;# 
   459  0399                     	;# 
   460  039A                     	;# 
   461  039C                     	;# 
   462  039D                     	;# 
   463  039E                     	;# 
   464  039F                     	;# 
   465  0498                     	;# 
   466  0498                     	;# 
   467  0499                     	;# 
   468  049A                     	;# 
   469  049B                     	;# 
   470  049B                     	;# 
   471  049C                     	;# 
   472  049D                     	;# 
   473  049E                     	;# 
   474  049F                     	;# 
   475  0617                     	;# 
   476  0618                     	;# 
   477  0619                     	;# 
   478  0619                     	;# 
   479  061A                     	;# 
   480  061B                     	;# 
   481  061C                     	;# 
   482  061C                     	;# 
   483  0691                     	;# 
   484  0692                     	;# 
   485  0693                     	;# 
   486  0694                     	;# 
   487  0695                     	;# 
   488  0696                     	;# 
   489  0697                     	;# 
   490  0698                     	;# 
   491  0699                     	;# 
   492  0891                     	;# 
   493  0891                     	;# 
   494  0891                     	;# 
   495  0891                     	;# 
   496  0891                     	;# 
   497  0891                     	;# 
   498  0892                     	;# 
   499  0892                     	;# 
   500  0892                     	;# 
   501  0893                     	;# 
   502  0893                     	;# 
   503  0893                     	;# 
   504  0893                     	;# 
   505  0893                     	;# 
   506  0893                     	;# 
   507  0894                     	;# 
   508  0894                     	;# 
   509  0894                     	;# 
   510  0895                     	;# 
   511  0895                     	;# 
   512  0895                     	;# 
   513  0896                     	;# 
   514  0896                     	;# 
   515  0896                     	;# 
   516  089B                     	;# 
   517  0911                     	;# 
   518  0912                     	;# 
   519  0913                     	;# 
   520  0914                     	;# 
   521  0915                     	;# 
   522  0916                     	;# 
   523  0918                     	;# 
   524  0919                     	;# 
   525  091A                     	;# 
   526  091B                     	;# 
   527  091C                     	;# 
   528  091D                     	;# 
   529  091E                     	;# 
   530  091F                     	;# 
   531  0E0F                     	;# 
   532  0E10                     	;# 
   533  0E11                     	;# 
   534  0E12                     	;# 
   535  0E13                     	;# 
   536  0E14                     	;# 
   537  0E15                     	;# 
   538  0E18                     	;# 
   539  0E1A                     	;# 
   540  0E1B                     	;# 
   541  0E1C                     	;# 
   542  0E20                     	;# 
   543  0E21                     	;# 
   544  0E22                     	;# 
   545  0E24                     	;# 
   546  0E25                     	;# 
   547  0E28                     	;# 
   548  0E29                     	;# 
   549  0E2A                     	;# 
   550  0E2B                     	;# 
   551  0E90                     	;# 
   552  0E91                     	;# 
   553  0E92                     	;# 
   554  0E94                     	;# 
   555  0E95                     	;# 
   556  0EA0                     	;# 
   557  0EA1                     	;# 
   558  0EA2                     	;# 
   559  0EA3                     	;# 
   560  0EA4                     	;# 
   561  0EA5                     	;# 
   562  0F0F                     	;# 
   563  0F10                     	;# 
   564  0F11                     	;# 
   565  0F12                     	;# 
   566  0F13                     	;# 
   567  0F14                     	;# 
   568  0F15                     	;# 
   569  0F16                     	;# 
   570  0F17                     	;# 
   571  0F18                     	;# 
   572  0F19                     	;# 
   573  0F1A                     	;# 
   574  0F1B                     	;# 
   575  0F1C                     	;# 
   576  0F1D                     	;# 
   577  0F1E                     	;# 
   578  0F1F                     	;# 
   579  0F20                     	;# 
   580  0F21                     	;# 
   581  0F22                     	;# 
   582  0F23                     	;# 
   583  0FE4                     	;# 
   584  0FE5                     	;# 
   585  0FE6                     	;# 
   586  0FE7                     	;# 
   587  0FE8                     	;# 
   588  0FE9                     	;# 
   589  0FEA                     	;# 
   590  0FEB                     	;# 
   591  0FED                     	;# 
   592  0FEE                     	;# 
   593  0FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000E                     	;# 
   608  0010                     	;# 
   609  0011                     	;# 
   610  0012                     	;# 
   611  0013                     	;# 
   612  0014                     	;# 
   613  0015                     	;# 
   614  0015                     	;# 
   615  0016                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  0019                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  001D                     	;# 
   625  001E                     	;# 
   626  001F                     	;# 
   627  008C                     	;# 
   628  008E                     	;# 
   629  0090                     	;# 
   630  0091                     	;# 
   631  0092                     	;# 
   632  0093                     	;# 
   633  0094                     	;# 
   634  0097                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  009F                     	;# 
   641  010C                     	;# 
   642  010E                     	;# 
   643  0111                     	;# 
   644  0112                     	;# 
   645  0113                     	;# 
   646  0114                     	;# 
   647  0115                     	;# 
   648  0116                     	;# 
   649  0117                     	;# 
   650  0118                     	;# 
   651  0119                     	;# 
   652  018C                     	;# 
   653  018E                     	;# 
   654  0199                     	;# 
   655  0199                     	;# 
   656  0199                     	;# 
   657  019A                     	;# 
   658  019A                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019C                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019D                     	;# 
   670  019D                     	;# 
   671  019E                     	;# 
   672  019E                     	;# 
   673  019E                     	;# 
   674  019F                     	;# 
   675  019F                     	;# 
   676  019F                     	;# 
   677  019F                     	;# 
   678  019F                     	;# 
   679  020C                     	;# 
   680  020E                     	;# 
   681  0211                     	;# 
   682  0211                     	;# 
   683  0212                     	;# 
   684  0212                     	;# 
   685  0213                     	;# 
   686  0213                     	;# 
   687  0214                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  028C                     	;# 
   698  028E                     	;# 
   699  0291                     	;# 
   700  0291                     	;# 
   701  0292                     	;# 
   702  0293                     	;# 
   703  0294                     	;# 
   704  0295                     	;# 
   705  0295                     	;# 
   706  0296                     	;# 
   707  0297                     	;# 
   708  0298                     	;# 
   709  030C                     	;# 
   710  030E                     	;# 
   711  038C                     	;# 
   712  038E                     	;# 
   713  0391                     	;# 
   714  0392                     	;# 
   715  0393                     	;# 
   716  0397                     	;# 
   717  0398                     	;# 
   718  0399                     	;# 
   719  039A                     	;# 
   720  039C                     	;# 
   721  039D                     	;# 
   722  039E                     	;# 
   723  039F                     	;# 
   724  0498                     	;# 
   725  0498                     	;# 
   726  0499                     	;# 
   727  049A                     	;# 
   728  049B                     	;# 
   729  049B                     	;# 
   730  049C                     	;# 
   731  049D                     	;# 
   732  049E                     	;# 
   733  049F                     	;# 
   734  0617                     	;# 
   735  0618                     	;# 
   736  0619                     	;# 
   737  0619                     	;# 
   738  061A                     	;# 
   739  061B                     	;# 
   740  061C                     	;# 
   741  061C                     	;# 
   742  0691                     	;# 
   743  0692                     	;# 
   744  0693                     	;# 
   745  0694                     	;# 
   746  0695                     	;# 
   747  0696                     	;# 
   748  0697                     	;# 
   749  0698                     	;# 
   750  0699                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0891                     	;# 
   755  0891                     	;# 
   756  0891                     	;# 
   757  0892                     	;# 
   758  0892                     	;# 
   759  0892                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0893                     	;# 
   764  0893                     	;# 
   765  0893                     	;# 
   766  0894                     	;# 
   767  0894                     	;# 
   768  0894                     	;# 
   769  0895                     	;# 
   770  0895                     	;# 
   771  0895                     	;# 
   772  0896                     	;# 
   773  0896                     	;# 
   774  0896                     	;# 
   775  089B                     	;# 
   776  0911                     	;# 
   777  0912                     	;# 
   778  0913                     	;# 
   779  0914                     	;# 
   780  0915                     	;# 
   781  0916                     	;# 
   782  0918                     	;# 
   783  0919                     	;# 
   784  091A                     	;# 
   785  091B                     	;# 
   786  091C                     	;# 
   787  091D                     	;# 
   788  091E                     	;# 
   789  091F                     	;# 
   790  0E0F                     	;# 
   791  0E10                     	;# 
   792  0E11                     	;# 
   793  0E12                     	;# 
   794  0E13                     	;# 
   795  0E14                     	;# 
   796  0E15                     	;# 
   797  0E18                     	;# 
   798  0E1A                     	;# 
   799  0E1B                     	;# 
   800  0E1C                     	;# 
   801  0E20                     	;# 
   802  0E21                     	;# 
   803  0E22                     	;# 
   804  0E24                     	;# 
   805  0E25                     	;# 
   806  0E28                     	;# 
   807  0E29                     	;# 
   808  0E2A                     	;# 
   809  0E2B                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0EA0                     	;# 
   816  0EA1                     	;# 
   817  0EA2                     	;# 
   818  0EA3                     	;# 
   819  0EA4                     	;# 
   820  0EA5                     	;# 
   821  0F0F                     	;# 
   822  0F10                     	;# 
   823  0F11                     	;# 
   824  0F12                     	;# 
   825  0F13                     	;# 
   826  0F14                     	;# 
   827  0F15                     	;# 
   828  0F16                     	;# 
   829  0F17                     	;# 
   830  0F18                     	;# 
   831  0F19                     	;# 
   832  0F1A                     	;# 
   833  0F1B                     	;# 
   834  0F1C                     	;# 
   835  0F1D                     	;# 
   836  0F1E                     	;# 
   837  0F1F                     	;# 
   838  0F20                     	;# 
   839  0F21                     	;# 
   840  0F22                     	;# 
   841  0F23                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE9                     	;# 
   848  0FEA                     	;# 
   849  0FEB                     	;# 
   850  0FED                     	;# 
   851  0FEE                     	;# 
   852  0FEF                     	;# 
   853  0000                     	;# 
   854  0001                     	;# 
   855  0002                     	;# 
   856  0003                     	;# 
   857  0004                     	;# 
   858  0005                     	;# 
   859  0006                     	;# 
   860  0007                     	;# 
   861  0008                     	;# 
   862  0009                     	;# 
   863  000A                     	;# 
   864  000B                     	;# 
   865  000C                     	;# 
   866  000E                     	;# 
   867  0010                     	;# 
   868  0011                     	;# 
   869  0012                     	;# 
   870  0013                     	;# 
   871  0014                     	;# 
   872  0015                     	;# 
   873  0015                     	;# 
   874  0016                     	;# 
   875  0016                     	;# 
   876  0017                     	;# 
   877  0018                     	;# 
   878  0019                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  001D                     	;# 
   884  001E                     	;# 
   885  001F                     	;# 
   886  008C                     	;# 
   887  008E                     	;# 
   888  0090                     	;# 
   889  0091                     	;# 
   890  0092                     	;# 
   891  0093                     	;# 
   892  0094                     	;# 
   893  0097                     	;# 
   894  009B                     	;# 
   895  009B                     	;# 
   896  009C                     	;# 
   897  009D                     	;# 
   898  009E                     	;# 
   899  009F                     	;# 
   900  010C                     	;# 
   901  010E                     	;# 
   902  0111                     	;# 
   903  0112                     	;# 
   904  0113                     	;# 
   905  0114                     	;# 
   906  0115                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  0118                     	;# 
   910  0119                     	;# 
   911  018C                     	;# 
   912  018E                     	;# 
   913  0199                     	;# 
   914  0199                     	;# 
   915  0199                     	;# 
   916  019A                     	;# 
   917  019A                     	;# 
   918  019A                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019B                     	;# 
   924  019C                     	;# 
   925  019C                     	;# 
   926  019C                     	;# 
   927  019D                     	;# 
   928  019D                     	;# 
   929  019D                     	;# 
   930  019E                     	;# 
   931  019E                     	;# 
   932  019E                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  019F                     	;# 
   937  019F                     	;# 
   938  020C                     	;# 
   939  020E                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  028C                     	;# 
   957  028E                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0294                     	;# 
   963  0295                     	;# 
   964  0295                     	;# 
   965  0296                     	;# 
   966  0297                     	;# 
   967  0298                     	;# 
   968  030C                     	;# 
   969  030E                     	;# 
   970  038C                     	;# 
   971  038E                     	;# 
   972  0391                     	;# 
   973  0392                     	;# 
   974  0393                     	;# 
   975  0397                     	;# 
   976  0398                     	;# 
   977  0399                     	;# 
   978  039A                     	;# 
   979  039C                     	;# 
   980  039D                     	;# 
   981  039E                     	;# 
   982  039F                     	;# 
   983  0498                     	;# 
   984  0498                     	;# 
   985  0499                     	;# 
   986  049A                     	;# 
   987  049B                     	;# 
   988  049B                     	;# 
   989  049C                     	;# 
   990  049D                     	;# 
   991  049E                     	;# 
   992  049F                     	;# 
   993  0617                     	;# 
   994  0618                     	;# 
   995  0619                     	;# 
   996  0619                     	;# 
   997  061A                     	;# 
   998  061B                     	;# 
   999  061C                     	;# 
  1000  061C                     	;# 
  1001  0691                     	;# 
  1002  0692                     	;# 
  1003  0693                     	;# 
  1004  0694                     	;# 
  1005  0695                     	;# 
  1006  0696                     	;# 
  1007  0697                     	;# 
  1008  0698                     	;# 
  1009  0699                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0892                     	;# 
  1017  0892                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0894                     	;# 
  1026  0894                     	;# 
  1027  0894                     	;# 
  1028  0895                     	;# 
  1029  0895                     	;# 
  1030  0895                     	;# 
  1031  0896                     	;# 
  1032  0896                     	;# 
  1033  0896                     	;# 
  1034  089B                     	;# 
  1035  0911                     	;# 
  1036  0912                     	;# 
  1037  0913                     	;# 
  1038  0914                     	;# 
  1039  0915                     	;# 
  1040  0916                     	;# 
  1041  0918                     	;# 
  1042  0919                     	;# 
  1043  091A                     	;# 
  1044  091B                     	;# 
  1045  091C                     	;# 
  1046  091D                     	;# 
  1047  091E                     	;# 
  1048  091F                     	;# 
  1049  0E0F                     	;# 
  1050  0E10                     	;# 
  1051  0E11                     	;# 
  1052  0E12                     	;# 
  1053  0E13                     	;# 
  1054  0E14                     	;# 
  1055  0E15                     	;# 
  1056  0E18                     	;# 
  1057  0E1A                     	;# 
  1058  0E1B                     	;# 
  1059  0E1C                     	;# 
  1060  0E20                     	;# 
  1061  0E21                     	;# 
  1062  0E22                     	;# 
  1063  0E24                     	;# 
  1064  0E25                     	;# 
  1065  0E28                     	;# 
  1066  0E29                     	;# 
  1067  0E2A                     	;# 
  1068  0E2B                     	;# 
  1069  0E90                     	;# 
  1070  0E91                     	;# 
  1071  0E92                     	;# 
  1072  0E94                     	;# 
  1073  0E95                     	;# 
  1074  0EA0                     	;# 
  1075  0EA1                     	;# 
  1076  0EA2                     	;# 
  1077  0EA3                     	;# 
  1078  0EA4                     	;# 
  1079  0EA5                     	;# 
  1080  0F0F                     	;# 
  1081  0F10                     	;# 
  1082  0F11                     	;# 
  1083  0F12                     	;# 
  1084  0F13                     	;# 
  1085  0F14                     	;# 
  1086  0F15                     	;# 
  1087  0F16                     	;# 
  1088  0F17                     	;# 
  1089  0F18                     	;# 
  1090  0F19                     	;# 
  1091  0F1A                     	;# 
  1092  0F1B                     	;# 
  1093  0F1C                     	;# 
  1094  0F1D                     	;# 
  1095  0F1E                     	;# 
  1096  0F1F                     	;# 
  1097  0F20                     	;# 
  1098  0F21                     	;# 
  1099  0F22                     	;# 
  1100  0F23                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000E                     	;# 
  1126  0010                     	;# 
  1127  0011                     	;# 
  1128  0012                     	;# 
  1129  0013                     	;# 
  1130  0014                     	;# 
  1131  0015                     	;# 
  1132  0015                     	;# 
  1133  0016                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  008C                     	;# 
  1146  008E                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0094                     	;# 
  1152  0097                     	;# 
  1153  009B                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  010C                     	;# 
  1160  010E                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0113                     	;# 
  1164  0114                     	;# 
  1165  0115                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  0118                     	;# 
  1169  0119                     	;# 
  1170  018C                     	;# 
  1171  018E                     	;# 
  1172  0199                     	;# 
  1173  0199                     	;# 
  1174  0199                     	;# 
  1175  019A                     	;# 
  1176  019A                     	;# 
  1177  019A                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  019C                     	;# 
  1185  019C                     	;# 
  1186  019D                     	;# 
  1187  019D                     	;# 
  1188  019D                     	;# 
  1189  019E                     	;# 
  1190  019E                     	;# 
  1191  019E                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  019F                     	;# 
  1196  019F                     	;# 
  1197  020C                     	;# 
  1198  020E                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0214                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0215                     	;# 
  1211  0216                     	;# 
  1212  0216                     	;# 
  1213  0217                     	;# 
  1214  0217                     	;# 
  1215  028C                     	;# 
  1216  028E                     	;# 
  1217  0291                     	;# 
  1218  0291                     	;# 
  1219  0292                     	;# 
  1220  0293                     	;# 
  1221  0294                     	;# 
  1222  0295                     	;# 
  1223  0295                     	;# 
  1224  0296                     	;# 
  1225  0297                     	;# 
  1226  0298                     	;# 
  1227  030C                     	;# 
  1228  030E                     	;# 
  1229  038C                     	;# 
  1230  038E                     	;# 
  1231  0391                     	;# 
  1232  0392                     	;# 
  1233  0393                     	;# 
  1234  0397                     	;# 
  1235  0398                     	;# 
  1236  0399                     	;# 
  1237  039A                     	;# 
  1238  039C                     	;# 
  1239  039D                     	;# 
  1240  039E                     	;# 
  1241  039F                     	;# 
  1242  0498                     	;# 
  1243  0498                     	;# 
  1244  0499                     	;# 
  1245  049A                     	;# 
  1246  049B                     	;# 
  1247  049B                     	;# 
  1248  049C                     	;# 
  1249  049D                     	;# 
  1250  049E                     	;# 
  1251  049F                     	;# 
  1252  0617                     	;# 
  1253  0618                     	;# 
  1254  0619                     	;# 
  1255  0619                     	;# 
  1256  061A                     	;# 
  1257  061B                     	;# 
  1258  061C                     	;# 
  1259  061C                     	;# 
  1260  0691                     	;# 
  1261  0692                     	;# 
  1262  0693                     	;# 
  1263  0694                     	;# 
  1264  0695                     	;# 
  1265  0696                     	;# 
  1266  0697                     	;# 
  1267  0698                     	;# 
  1268  0699                     	;# 
  1269  0891                     	;# 
  1270  0891                     	;# 
  1271  0891                     	;# 
  1272  0891                     	;# 
  1273  0891                     	;# 
  1274  0891                     	;# 
  1275  0892                     	;# 
  1276  0892                     	;# 
  1277  0892                     	;# 
  1278  0893                     	;# 
  1279  0893                     	;# 
  1280  0893                     	;# 
  1281  0893                     	;# 
  1282  0893                     	;# 
  1283  0893                     	;# 
  1284  0894                     	;# 
  1285  0894                     	;# 
  1286  0894                     	;# 
  1287  0895                     	;# 
  1288  0895                     	;# 
  1289  0895                     	;# 
  1290  0896                     	;# 
  1291  0896                     	;# 
  1292  0896                     	;# 
  1293  089B                     	;# 
  1294  0911                     	;# 
  1295  0912                     	;# 
  1296  0913                     	;# 
  1297  0914                     	;# 
  1298  0915                     	;# 
  1299  0916                     	;# 
  1300  0918                     	;# 
  1301  0919                     	;# 
  1302  091A                     	;# 
  1303  091B                     	;# 
  1304  091C                     	;# 
  1305  091D                     	;# 
  1306  091E                     	;# 
  1307  091F                     	;# 
  1308  0E0F                     	;# 
  1309  0E10                     	;# 
  1310  0E11                     	;# 
  1311  0E12                     	;# 
  1312  0E13                     	;# 
  1313  0E14                     	;# 
  1314  0E15                     	;# 
  1315  0E18                     	;# 
  1316  0E1A                     	;# 
  1317  0E1B                     	;# 
  1318  0E1C                     	;# 
  1319  0E20                     	;# 
  1320  0E21                     	;# 
  1321  0E22                     	;# 
  1322  0E24                     	;# 
  1323  0E25                     	;# 
  1324  0E28                     	;# 
  1325  0E29                     	;# 
  1326  0E2A                     	;# 
  1327  0E2B                     	;# 
  1328  0E90                     	;# 
  1329  0E91                     	;# 
  1330  0E92                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0EA0                     	;# 
  1334  0EA1                     	;# 
  1335  0EA2                     	;# 
  1336  0EA3                     	;# 
  1337  0EA4                     	;# 
  1338  0EA5                     	;# 
  1339  0F0F                     	;# 
  1340  0F10                     	;# 
  1341  0F11                     	;# 
  1342  0F12                     	;# 
  1343  0F13                     	;# 
  1344  0F14                     	;# 
  1345  0F15                     	;# 
  1346  0F16                     	;# 
  1347  0F17                     	;# 
  1348  0F18                     	;# 
  1349  0F19                     	;# 
  1350  0F1A                     	;# 
  1351  0F1B                     	;# 
  1352  0F1C                     	;# 
  1353  0F1D                     	;# 
  1354  0F1E                     	;# 
  1355  0F1F                     	;# 
  1356  0F20                     	;# 
  1357  0F21                     	;# 
  1358  0F22                     	;# 
  1359  0F23                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000E                     	;# 
  1385  0010                     	;# 
  1386  0011                     	;# 
  1387  0012                     	;# 
  1388  0013                     	;# 
  1389  0014                     	;# 
  1390  0015                     	;# 
  1391  0015                     	;# 
  1392  0016                     	;# 
  1393  0016                     	;# 
  1394  0017                     	;# 
  1395  0018                     	;# 
  1396  0019                     	;# 
  1397  0019                     	;# 
  1398  001A                     	;# 
  1399  001B                     	;# 
  1400  001C                     	;# 
  1401  001D                     	;# 
  1402  001E                     	;# 
  1403  001F                     	;# 
  1404  008C                     	;# 
  1405  008E                     	;# 
  1406  0090                     	;# 
  1407  0091                     	;# 
  1408  0092                     	;# 
  1409  0093                     	;# 
  1410  0094                     	;# 
  1411  0097                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  009F                     	;# 
  1418  010C                     	;# 
  1419  010E                     	;# 
  1420  0111                     	;# 
  1421  0112                     	;# 
  1422  0113                     	;# 
  1423  0114                     	;# 
  1424  0115                     	;# 
  1425  0116                     	;# 
  1426  0117                     	;# 
  1427  0118                     	;# 
  1428  0119                     	;# 
  1429  018C                     	;# 
  1430  018E                     	;# 
  1431  0199                     	;# 
  1432  0199                     	;# 
  1433  0199                     	;# 
  1434  019A                     	;# 
  1435  019A                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019D                     	;# 
  1447  019D                     	;# 
  1448  019E                     	;# 
  1449  019E                     	;# 
  1450  019E                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  019F                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020E                     	;# 
  1458  0211                     	;# 
  1459  0211                     	;# 
  1460  0212                     	;# 
  1461  0212                     	;# 
  1462  0213                     	;# 
  1463  0213                     	;# 
  1464  0214                     	;# 
  1465  0214                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0216                     	;# 
  1471  0216                     	;# 
  1472  0217                     	;# 
  1473  0217                     	;# 
  1474  028C                     	;# 
  1475  028E                     	;# 
  1476  0291                     	;# 
  1477  0291                     	;# 
  1478  0292                     	;# 
  1479  0293                     	;# 
  1480  0294                     	;# 
  1481  0295                     	;# 
  1482  0295                     	;# 
  1483  0296                     	;# 
  1484  0297                     	;# 
  1485  0298                     	;# 
  1486  030C                     	;# 
  1487  030E                     	;# 
  1488  038C                     	;# 
  1489  038E                     	;# 
  1490  0391                     	;# 
  1491  0392                     	;# 
  1492  0393                     	;# 
  1493  0397                     	;# 
  1494  0398                     	;# 
  1495  0399                     	;# 
  1496  039A                     	;# 
  1497  039C                     	;# 
  1498  039D                     	;# 
  1499  039E                     	;# 
  1500  039F                     	;# 
  1501  0498                     	;# 
  1502  0498                     	;# 
  1503  0499                     	;# 
  1504  049A                     	;# 
  1505  049B                     	;# 
  1506  049B                     	;# 
  1507  049C                     	;# 
  1508  049D                     	;# 
  1509  049E                     	;# 
  1510  049F                     	;# 
  1511  0617                     	;# 
  1512  0618                     	;# 
  1513  0619                     	;# 
  1514  0619                     	;# 
  1515  061A                     	;# 
  1516  061B                     	;# 
  1517  061C                     	;# 
  1518  061C                     	;# 
  1519  0691                     	;# 
  1520  0692                     	;# 
  1521  0693                     	;# 
  1522  0694                     	;# 
  1523  0695                     	;# 
  1524  0696                     	;# 
  1525  0697                     	;# 
  1526  0698                     	;# 
  1527  0699                     	;# 
  1528  0891                     	;# 
  1529  0891                     	;# 
  1530  0891                     	;# 
  1531  0891                     	;# 
  1532  0891                     	;# 
  1533  0891                     	;# 
  1534  0892                     	;# 
  1535  0892                     	;# 
  1536  0892                     	;# 
  1537  0893                     	;# 
  1538  0893                     	;# 
  1539  0893                     	;# 
  1540  0893                     	;# 
  1541  0893                     	;# 
  1542  0893                     	;# 
  1543  0894                     	;# 
  1544  0894                     	;# 
  1545  0894                     	;# 
  1546  0895                     	;# 
  1547  0895                     	;# 
  1548  0895                     	;# 
  1549  0896                     	;# 
  1550  0896                     	;# 
  1551  0896                     	;# 
  1552  089B                     	;# 
  1553  0911                     	;# 
  1554  0912                     	;# 
  1555  0913                     	;# 
  1556  0914                     	;# 
  1557  0915                     	;# 
  1558  0916                     	;# 
  1559  0918                     	;# 
  1560  0919                     	;# 
  1561  091A                     	;# 
  1562  091B                     	;# 
  1563  091C                     	;# 
  1564  091D                     	;# 
  1565  091E                     	;# 
  1566  091F                     	;# 
  1567  0E0F                     	;# 
  1568  0E10                     	;# 
  1569  0E11                     	;# 
  1570  0E12                     	;# 
  1571  0E13                     	;# 
  1572  0E14                     	;# 
  1573  0E15                     	;# 
  1574  0E18                     	;# 
  1575  0E1A                     	;# 
  1576  0E1B                     	;# 
  1577  0E1C                     	;# 
  1578  0E20                     	;# 
  1579  0E21                     	;# 
  1580  0E22                     	;# 
  1581  0E24                     	;# 
  1582  0E25                     	;# 
  1583  0E28                     	;# 
  1584  0E29                     	;# 
  1585  0E2A                     	;# 
  1586  0E2B                     	;# 
  1587  0E90                     	;# 
  1588  0E91                     	;# 
  1589  0E92                     	;# 
  1590  0E94                     	;# 
  1591  0E95                     	;# 
  1592  0EA0                     	;# 
  1593  0EA1                     	;# 
  1594  0EA2                     	;# 
  1595  0EA3                     	;# 
  1596  0EA4                     	;# 
  1597  0EA5                     	;# 
  1598  0F0F                     	;# 
  1599  0F10                     	;# 
  1600  0F11                     	;# 
  1601  0F12                     	;# 
  1602  0F13                     	;# 
  1603  0F14                     	;# 
  1604  0F15                     	;# 
  1605  0F16                     	;# 
  1606  0F17                     	;# 
  1607  0F18                     	;# 
  1608  0F19                     	;# 
  1609  0F1A                     	;# 
  1610  0F1B                     	;# 
  1611  0F1C                     	;# 
  1612  0F1D                     	;# 
  1613  0F1E                     	;# 
  1614  0F1F                     	;# 
  1615  0F20                     	;# 
  1616  0F21                     	;# 
  1617  0F22                     	;# 
  1618  0F23                     	;# 
  1619  0FE4                     	;# 
  1620  0FE5                     	;# 
  1621  0FE6                     	;# 
  1622  0FE7                     	;# 
  1623  0FE8                     	;# 
  1624  0FE9                     	;# 
  1625  0FEA                     	;# 
  1626  0FEB                     	;# 
  1627  0FED                     	;# 
  1628  0FEE                     	;# 
  1629  0FEF                     	;# 
  1630  0000                     	;# 
  1631  0001                     	;# 
  1632  0002                     	;# 
  1633  0003                     	;# 
  1634  0004                     	;# 
  1635  0005                     	;# 
  1636  0006                     	;# 
  1637  0007                     	;# 
  1638  0008                     	;# 
  1639  0009                     	;# 
  1640  000A                     	;# 
  1641  000B                     	;# 
  1642  000C                     	;# 
  1643  000E                     	;# 
  1644  0010                     	;# 
  1645  0011                     	;# 
  1646  0012                     	;# 
  1647  0013                     	;# 
  1648  0014                     	;# 
  1649  0015                     	;# 
  1650  0015                     	;# 
  1651  0016                     	;# 
  1652  0016                     	;# 
  1653  0017                     	;# 
  1654  0018                     	;# 
  1655  0019                     	;# 
  1656  0019                     	;# 
  1657  001A                     	;# 
  1658  001B                     	;# 
  1659  001C                     	;# 
  1660  001D                     	;# 
  1661  001E                     	;# 
  1662  001F                     	;# 
  1663  008C                     	;# 
  1664  008E                     	;# 
  1665  0090                     	;# 
  1666  0091                     	;# 
  1667  0092                     	;# 
  1668  0093                     	;# 
  1669  0094                     	;# 
  1670  0097                     	;# 
  1671  009B                     	;# 
  1672  009B                     	;# 
  1673  009C                     	;# 
  1674  009D                     	;# 
  1675  009E                     	;# 
  1676  009F                     	;# 
  1677  010C                     	;# 
  1678  010E                     	;# 
  1679  0111                     	;# 
  1680  0112                     	;# 
  1681  0113                     	;# 
  1682  0114                     	;# 
  1683  0115                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  0118                     	;# 
  1687  0119                     	;# 
  1688  018C                     	;# 
  1689  018E                     	;# 
  1690  0199                     	;# 
  1691  0199                     	;# 
  1692  0199                     	;# 
  1693  019A                     	;# 
  1694  019A                     	;# 
  1695  019A                     	;# 
  1696  019B                     	;# 
  1697  019B                     	;# 
  1698  019B                     	;# 
  1699  019B                     	;# 
  1700  019B                     	;# 
  1701  019C                     	;# 
  1702  019C                     	;# 
  1703  019C                     	;# 
  1704  019D                     	;# 
  1705  019D                     	;# 
  1706  019D                     	;# 
  1707  019E                     	;# 
  1708  019E                     	;# 
  1709  019E                     	;# 
  1710  019F                     	;# 
  1711  019F                     	;# 
  1712  019F                     	;# 
  1713  019F                     	;# 
  1714  019F                     	;# 
  1715  020C                     	;# 
  1716  020E                     	;# 
  1717  0211                     	;# 
  1718  0211                     	;# 
  1719  0212                     	;# 
  1720  0212                     	;# 
  1721  0213                     	;# 
  1722  0213                     	;# 
  1723  0214                     	;# 
  1724  0214                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0215                     	;# 
  1728  0215                     	;# 
  1729  0216                     	;# 
  1730  0216                     	;# 
  1731  0217                     	;# 
  1732  0217                     	;# 
  1733  028C                     	;# 
  1734  028E                     	;# 
  1735  0291                     	;# 
  1736  0291                     	;# 
  1737  0292                     	;# 
  1738  0293                     	;# 
  1739  0294                     	;# 
  1740  0295                     	;# 
  1741  0295                     	;# 
  1742  0296                     	;# 
  1743  0297                     	;# 
  1744  0298                     	;# 
  1745  030C                     	;# 
  1746  030E                     	;# 
  1747  038C                     	;# 
  1748  038E                     	;# 
  1749  0391                     	;# 
  1750  0392                     	;# 
  1751  0393                     	;# 
  1752  0397                     	;# 
  1753  0398                     	;# 
  1754  0399                     	;# 
  1755  039A                     	;# 
  1756  039C                     	;# 
  1757  039D                     	;# 
  1758  039E                     	;# 
  1759  039F                     	;# 
  1760  0498                     	;# 
  1761  0498                     	;# 
  1762  0499                     	;# 
  1763  049A                     	;# 
  1764  049B                     	;# 
  1765  049B                     	;# 
  1766  049C                     	;# 
  1767  049D                     	;# 
  1768  049E                     	;# 
  1769  049F                     	;# 
  1770  0617                     	;# 
  1771  0618                     	;# 
  1772  0619                     	;# 
  1773  0619                     	;# 
  1774  061A                     	;# 
  1775  061B                     	;# 
  1776  061C                     	;# 
  1777  061C                     	;# 
  1778  0691                     	;# 
  1779  0692                     	;# 
  1780  0693                     	;# 
  1781  0694                     	;# 
  1782  0695                     	;# 
  1783  0696                     	;# 
  1784  0697                     	;# 
  1785  0698                     	;# 
  1786  0699                     	;# 
  1787  0891                     	;# 
  1788  0891                     	;# 
  1789  0891                     	;# 
  1790  0891                     	;# 
  1791  0891                     	;# 
  1792  0891                     	;# 
  1793  0892                     	;# 
  1794  0892                     	;# 
  1795  0892                     	;# 
  1796  0893                     	;# 
  1797  0893                     	;# 
  1798  0893                     	;# 
  1799  0893                     	;# 
  1800  0893                     	;# 
  1801  0893                     	;# 
  1802  0894                     	;# 
  1803  0894                     	;# 
  1804  0894                     	;# 
  1805  0895                     	;# 
  1806  0895                     	;# 
  1807  0895                     	;# 
  1808  0896                     	;# 
  1809  0896                     	;# 
  1810  0896                     	;# 
  1811  089B                     	;# 
  1812  0911                     	;# 
  1813  0912                     	;# 
  1814  0913                     	;# 
  1815  0914                     	;# 
  1816  0915                     	;# 
  1817  0916                     	;# 
  1818  0918                     	;# 
  1819  0919                     	;# 
  1820  091A                     	;# 
  1821  091B                     	;# 
  1822  091C                     	;# 
  1823  091D                     	;# 
  1824  091E                     	;# 
  1825  091F                     	;# 
  1826  0E0F                     	;# 
  1827  0E10                     	;# 
  1828  0E11                     	;# 
  1829  0E12                     	;# 
  1830  0E13                     	;# 
  1831  0E14                     	;# 
  1832  0E15                     	;# 
  1833  0E18                     	;# 
  1834  0E1A                     	;# 
  1835  0E1B                     	;# 
  1836  0E1C                     	;# 
  1837  0E20                     	;# 
  1838  0E21                     	;# 
  1839  0E22                     	;# 
  1840  0E24                     	;# 
  1841  0E25                     	;# 
  1842  0E28                     	;# 
  1843  0E29                     	;# 
  1844  0E2A                     	;# 
  1845  0E2B                     	;# 
  1846  0E90                     	;# 
  1847  0E91                     	;# 
  1848  0E92                     	;# 
  1849  0E94                     	;# 
  1850  0E95                     	;# 
  1851  0EA0                     	;# 
  1852  0EA1                     	;# 
  1853  0EA2                     	;# 
  1854  0EA3                     	;# 
  1855  0EA4                     	;# 
  1856  0EA5                     	;# 
  1857  0F0F                     	;# 
  1858  0F10                     	;# 
  1859  0F11                     	;# 
  1860  0F12                     	;# 
  1861  0F13                     	;# 
  1862  0F14                     	;# 
  1863  0F15                     	;# 
  1864  0F16                     	;# 
  1865  0F17                     	;# 
  1866  0F18                     	;# 
  1867  0F19                     	;# 
  1868  0F1A                     	;# 
  1869  0F1B                     	;# 
  1870  0F1C                     	;# 
  1871  0F1D                     	;# 
  1872  0F1E                     	;# 
  1873  0F1F                     	;# 
  1874  0F20                     	;# 
  1875  0F21                     	;# 
  1876  0F22                     	;# 
  1877  0F23                     	;# 
  1878  0FE4                     	;# 
  1879  0FE5                     	;# 
  1880  0FE6                     	;# 
  1881  0FE7                     	;# 
  1882  0FE8                     	;# 
  1883  0FE9                     	;# 
  1884  0FEA                     	;# 
  1885  0FEB                     	;# 
  1886  0FED                     	;# 
  1887  0FEE                     	;# 
  1888  0FEF                     	;# 
  1889  0000                     	;# 
  1890  0001                     	;# 
  1891  0002                     	;# 
  1892  0003                     	;# 
  1893  0004                     	;# 
  1894  0005                     	;# 
  1895  0006                     	;# 
  1896  0007                     	;# 
  1897  0008                     	;# 
  1898  0009                     	;# 
  1899  000A                     	;# 
  1900  000B                     	;# 
  1901  000C                     	;# 
  1902  000E                     	;# 
  1903  0010                     	;# 
  1904  0011                     	;# 
  1905  0012                     	;# 
  1906  0013                     	;# 
  1907  0014                     	;# 
  1908  0015                     	;# 
  1909  0015                     	;# 
  1910  0016                     	;# 
  1911  0016                     	;# 
  1912  0017                     	;# 
  1913  0018                     	;# 
  1914  0019                     	;# 
  1915  0019                     	;# 
  1916  001A                     	;# 
  1917  001B                     	;# 
  1918  001C                     	;# 
  1919  001D                     	;# 
  1920  001E                     	;# 
  1921  001F                     	;# 
  1922  008C                     	;# 
  1923  008E                     	;# 
  1924  0090                     	;# 
  1925  0091                     	;# 
  1926  0092                     	;# 
  1927  0093                     	;# 
  1928  0094                     	;# 
  1929  0097                     	;# 
  1930  009B                     	;# 
  1931  009B                     	;# 
  1932  009C                     	;# 
  1933  009D                     	;# 
  1934  009E                     	;# 
  1935  009F                     	;# 
  1936  010C                     	;# 
  1937  010E                     	;# 
  1938  0111                     	;# 
  1939  0112                     	;# 
  1940  0113                     	;# 
  1941  0114                     	;# 
  1942  0115                     	;# 
  1943  0116                     	;# 
  1944  0117                     	;# 
  1945  0118                     	;# 
  1946  0119                     	;# 
  1947  018C                     	;# 
  1948  018E                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020E                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0216                     	;# 
  1989  0216                     	;# 
  1990  0217                     	;# 
  1991  0217                     	;# 
  1992  028C                     	;# 
  1993  028E                     	;# 
  1994  0291                     	;# 
  1995  0291                     	;# 
  1996  0292                     	;# 
  1997  0293                     	;# 
  1998  0294                     	;# 
  1999  0295                     	;# 
  2000  0295                     	;# 
  2001  0296                     	;# 
  2002  0297                     	;# 
  2003  0298                     	;# 
  2004  030C                     	;# 
  2005  030E                     	;# 
  2006  038C                     	;# 
  2007  038E                     	;# 
  2008  0391                     	;# 
  2009  0392                     	;# 
  2010  0393                     	;# 
  2011  0397                     	;# 
  2012  0398                     	;# 
  2013  0399                     	;# 
  2014  039A                     	;# 
  2015  039C                     	;# 
  2016  039D                     	;# 
  2017  039E                     	;# 
  2018  039F                     	;# 
  2019  0498                     	;# 
  2020  0498                     	;# 
  2021  0499                     	;# 
  2022  049A                     	;# 
  2023  049B                     	;# 
  2024  049B                     	;# 
  2025  049C                     	;# 
  2026  049D                     	;# 
  2027  049E                     	;# 
  2028  049F                     	;# 
  2029  0617                     	;# 
  2030  0618                     	;# 
  2031  0619                     	;# 
  2032  0619                     	;# 
  2033  061A                     	;# 
  2034  061B                     	;# 
  2035  061C                     	;# 
  2036  061C                     	;# 
  2037  0691                     	;# 
  2038  0692                     	;# 
  2039  0693                     	;# 
  2040  0694                     	;# 
  2041  0695                     	;# 
  2042  0696                     	;# 
  2043  0697                     	;# 
  2044  0698                     	;# 
  2045  0699                     	;# 
  2046  0891                     	;# 
  2047  0891                     	;# 
  2048  0891                     	;# 
  2049  0891                     	;# 
  2050  0891                     	;# 
  2051  0891                     	;# 
  2052  0892                     	;# 
  2053  0892                     	;# 
  2054  0892                     	;# 
  2055  0893                     	;# 
  2056  0893                     	;# 
  2057  0893                     	;# 
  2058  0893                     	;# 
  2059  0893                     	;# 
  2060  0893                     	;# 
  2061  0894                     	;# 
  2062  0894                     	;# 
  2063  0894                     	;# 
  2064  0895                     	;# 
  2065  0895                     	;# 
  2066  0895                     	;# 
  2067  0896                     	;# 
  2068  0896                     	;# 
  2069  0896                     	;# 
  2070  089B                     	;# 
  2071  0911                     	;# 
  2072  0912                     	;# 
  2073  0913                     	;# 
  2074  0914                     	;# 
  2075  0915                     	;# 
  2076  0916                     	;# 
  2077  0918                     	;# 
  2078  0919                     	;# 
  2079  091A                     	;# 
  2080  091B                     	;# 
  2081  091C                     	;# 
  2082  091D                     	;# 
  2083  091E                     	;# 
  2084  091F                     	;# 
  2085  0E0F                     	;# 
  2086  0E10                     	;# 
  2087  0E11                     	;# 
  2088  0E12                     	;# 
  2089  0E13                     	;# 
  2090  0E14                     	;# 
  2091  0E15                     	;# 
  2092  0E18                     	;# 
  2093  0E1A                     	;# 
  2094  0E1B                     	;# 
  2095  0E1C                     	;# 
  2096  0E20                     	;# 
  2097  0E21                     	;# 
  2098  0E22                     	;# 
  2099  0E24                     	;# 
  2100  0E25                     	;# 
  2101  0E28                     	;# 
  2102  0E29                     	;# 
  2103  0E2A                     	;# 
  2104  0E2B                     	;# 
  2105  0E90                     	;# 
  2106  0E91                     	;# 
  2107  0E92                     	;# 
  2108  0E94                     	;# 
  2109  0E95                     	;# 
  2110  0EA0                     	;# 
  2111  0EA1                     	;# 
  2112  0EA2                     	;# 
  2113  0EA3                     	;# 
  2114  0EA4                     	;# 
  2115  0EA5                     	;# 
  2116  0F0F                     	;# 
  2117  0F10                     	;# 
  2118  0F11                     	;# 
  2119  0F12                     	;# 
  2120  0F13                     	;# 
  2121  0F14                     	;# 
  2122  0F15                     	;# 
  2123  0F16                     	;# 
  2124  0F17                     	;# 
  2125  0F18                     	;# 
  2126  0F19                     	;# 
  2127  0F1A                     	;# 
  2128  0F1B                     	;# 
  2129  0F1C                     	;# 
  2130  0F1D                     	;# 
  2131  0F1E                     	;# 
  2132  0F1F                     	;# 
  2133  0F20                     	;# 
  2134  0F21                     	;# 
  2135  0F22                     	;# 
  2136  0F23                     	;# 
  2137  0FE4                     	;# 
  2138  0FE5                     	;# 
  2139  0FE6                     	;# 
  2140  0FE7                     	;# 
  2141  0FE8                     	;# 
  2142  0FE9                     	;# 
  2143  0FEA                     	;# 
  2144  0FEB                     	;# 
  2145  0FED                     	;# 
  2146  0FEE                     	;# 
  2147  0FEF                     	;# 
  2148                           
  2149                           	psect	idataCOMMON
  2150  034F                     __pidataCOMMON:
  2151                           
  2152                           ;initializer for _speed_value
  2153  034F  34E7               	retlw	231
  2154  0350  3403               	retlw	3
  2155                           
  2156                           	psect	idataBANK0
  2157  0351                     __pidataBANK0:
  2158                           
  2159                           ;initializer for _StepNum
  2160  0351  3403               	retlw	3
  2161                           
  2162                           	psect	nvBANK0
  2163  003C                     __pnvBANK0:
  2164  003C                     _step_counts:
  2165  003C                     	ds	2
  2166  003E                     _hall_value:
  2167  003E                     	ds	2
  2168  0040                     _INT_InterruptHandler:
  2169  0040                     	ds	2
  2170  0042                     _TMR0_InterruptHandler:
  2171  0042                     	ds	2
  2172  000E                     _PORTCbits	set	14
  2173  000B                     _INTCONbits	set	11
  2174  0017                     _T0CON0bits	set	23
  2175  0017                     _T0CON0	set	23
  2176  0010                     _PIR0bits	set	16
  2177  0015                     _TMR0L	set	21
  2178  0016                     _TMR0H	set	22
  2179  0018                     _T0CON1	set	24
  2180  008E                     _TRISCbits	set	142
  2181  0090                     _PIE0bits	set	144
  2182  008E                     _TRISC	set	142
  2183  008C                     _TRISA	set	140
  2184  0097                     _WDTCON	set	151
  2185  010C                     _LATAbits	set	268
  2186  010E                     _LATCbits	set	270
  2187  010E                     _LATC	set	270
  2188  010C                     _LATA	set	268
  2189  018E                     _ANSELCbits	set	398
  2190  018C                     _ANSELA	set	396
  2191  018E                     _ANSELC	set	398
  2192  020E                     _WPUC	set	526
  2193  020C                     _WPUA	set	524
  2194  028E                     _ODCONC	set	654
  2195  028C                     _ODCONA	set	652
  2196  030E                     _SLRCONC	set	782
  2197  030C                     _SLRCONA	set	780
  2198  038E                     _INLVLC	set	910
  2199  038C                     _INLVLA	set	908
  2200  0916                     _PMD5	set	2326
  2201  0915                     _PMD4	set	2325
  2202  0914                     _PMD3	set	2324
  2203  0913                     _PMD2	set	2323
  2204  0912                     _PMD1	set	2322
  2205  0911                     _PMD0	set	2321
  2206  091E                     _OSCTUNE	set	2334
  2207  091F                     _OSCFRQ	set	2335
  2208  091D                     _OSCEN	set	2333
  2209  091B                     _OSCCON3	set	2331
  2210  0919                     _OSCCON1	set	2329
  2211  0E10                     _INTPPS	set	3600
  2212                           
  2213                           	psect	cinit
  2214  002E                     start_initialization:	
  2215                           ; #config settings
  2216                           
  2217  002E                     __initialization:
  2218                           
  2219                           ; Initialize objects allocated to COMMON
  2220  002E  3183  234F  3180   	fcall	__pidataCOMMON	;fetch initializer
  2221  0031  00FC               	movwf	__pdataCOMMON& (0+127)
  2222  0032  3183  2350  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2223  0035  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
  2224                           
  2225                           ; Initialize objects allocated to BANK0
  2226  0036  3183  2351  3180   	fcall	__pidataBANK0	;fetch initializer
  2227  0039  00C4               	movwf	__pdataBANK0& (0+127)
  2228                           
  2229                           ; Clear objects allocated to COMMON
  2230  003A  01FA               	clrf	__pbssCOMMON& (0+127)
  2231  003B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2232                           
  2233                           ; Clear objects allocated to BANK0
  2234  003C  3020               	movlw	low __pbssBANK0
  2235  003D  0084               	movwf	4
  2236  003E  3000               	movlw	high __pbssBANK0
  2237  003F  0085               	movwf	5
  2238  0040  301C               	movlw	28
  2239  0041  3183  2333  3180   	fcall	clear_ram0
  2240  0044                     end_of_initialization:	
  2241                           ;End of C runtime variable initialization code
  2242                           
  2243  0044                     __end_of__initialization:
  2244  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2245  0045  0020               	movlb	0
  2246  0046  2AA2               	ljmp	_main	;jump to C main() function
  2247                           
  2248                           	psect	bssCOMMON
  2249  007A                     __pbssCOMMON:
  2250  007A                     _motor_dir:
  2251  007A                     	ds	1
  2252  007B                     _timer_flag:
  2253  007B                     	ds	1
  2254                           
  2255                           	psect	dataCOMMON
  2256  007C                     __pdataCOMMON:
  2257  007C                     _speed_value:
  2258  007C                     	ds	2
  2259                           
  2260                           	psect	bssBANK0
  2261  0020                     __pbssBANK0:
  2262  0020                     _rx_array:
  2263  0020                     	ds	5
  2264  0025                     _step_errorlast:
  2265  0025                     	ds	2
  2266  0027                     _step_error:
  2267  0027                     	ds	2
  2268  0029                     _step_timer:
  2269  0029                     	ds	2
  2270  002B                     _hall_timer:
  2271  002B                     	ds	2
  2272  002D                     _speed_plow:
  2273  002D                     	ds	2
  2274  002F                     _speed_phigh:
  2275  002F                     	ds	2
  2276  0031                     _speed_low:
  2277  0031                     	ds	2
  2278  0033                     _speed_high:
  2279  0033                     	ds	2
  2280  0035                     _speed_stimer:
  2281  0035                     	ds	2
  2282  0037                     _rev_timer:
  2283  0037                     	ds	1
  2284  0038                     _rx_pointer:
  2285  0038                     	ds	1
  2286  0039                     _speed_prev:
  2287  0039                     	ds	1
  2288  003A                     _stringer:
  2289  003A                     	ds	1
  2290  003B                     _hall_flag:
  2291  003B                     	ds	1
  2292                           
  2293                           	psect	dataBANK0
  2294  0044                     __pdataBANK0:
  2295  0044                     _StepNum:
  2296  0044                     	ds	1
  2297                           
  2298                           	psect	clrtext
  2299  0333                     clear_ram0:	
  2300                           ;	Called with FSR0 containing the base address, and
  2301                           ;	WREG with the size to clear
  2302                           
  2303  0333  0064               	clrwdt	;clear the watchdog before getting into this loop
  2304  0334                     clrloop0:
  2305  0334  0180               	clrf	0	;clear RAM location pointed to by FSR
  2306  0335  3101               	addfsr 0,1
  2307  0336  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2308  0337  2B34               	goto	clrloop0	;have we reached the end yet?
  2309  0338  3400               	retlw	0	;all done for this memory range, return
  2310                           
  2311                           	psect	cstackCOMMON
  2312  0070                     __pcstackCOMMON:
  2313  0070                     ?_PMD_Initialize:
  2314  0070                     ??_PMD_Initialize:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0070                     ?_PIN_MANAGER_Initialize:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0070                     ??_PIN_MANAGER_Initialize:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     ?_OSCILLATOR_Initialize:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  0070                     ??_OSCILLATOR_Initialize:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329  0070                     ?_WDT_Initialize:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332  0070                     ??_WDT_Initialize:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0070                     ?_EXT_INT_Initialize:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0070                     ?_TMR0_Initialize:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0070                     ?_TMR0_SetInterruptHandler:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ?_TMR0_DefaultInterruptHandler:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ??_TMR0_DefaultInterruptHandler:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_signal_handler:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ??_signal_handler:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_INT_ISR:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ??_INT_ISR:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ?_INT_CallBack:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ??_INT_CallBack:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_motor_init:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0070                     ?_hall_handler:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?_motor_handler:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0070                     ?_step_handler:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0070                     ??_step_handler:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0070                     ?_SYSTEM_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_TMR0_ISR:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ??_TMR0_ISR:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_INTERRUPT_InterruptManager:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ??_INTERRUPT_InterruptManager:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_INT_SetInterruptHandler:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ?_INT_DefaultInterruptHandler:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ??_INT_DefaultInterruptHandler:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ?_main:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_speed_handler:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?___wmul:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?___lwdiv:	
  2417                           ; 2 bytes @ 0x0
  2418                           
  2419  0070                     step_handler@direction:	
  2420                           ; 2 bytes @ 0x0
  2421                           
  2422  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     INT_SetInterruptHandler@InterruptHandler:	
  2426                           ; 2 bytes @ 0x0
  2427                           
  2428  0070                     ___wmul@multiplier:	
  2429                           ; 2 bytes @ 0x0
  2430                           
  2431  0070                     ___lwdiv@divisor:	
  2432                           ; 2 bytes @ 0x0
  2433                           
  2434                           
  2435                           ; 2 bytes @ 0x0
  2436  0070                     	ds	2
  2437  0072                     ??_EXT_INT_Initialize:
  2438  0072                     ??_TMR0_Initialize:	
  2439                           ; 1 bytes @ 0x2
  2440                           
  2441  0072                     ??_TMR0_SetInterruptHandler:	
  2442                           ; 1 bytes @ 0x2
  2443                           
  2444  0072                     ??_motor_init:	
  2445                           ; 1 bytes @ 0x2
  2446                           
  2447  0072                     ??_SYSTEM_Initialize:	
  2448                           ; 1 bytes @ 0x2
  2449                           
  2450  0072                     ??_INT_SetInterruptHandler:	
  2451                           ; 1 bytes @ 0x2
  2452                           
  2453  0072                     ___wmul@multiplicand:	
  2454                           ; 1 bytes @ 0x2
  2455                           
  2456  0072                     ___lwdiv@dividend:	
  2457                           ; 2 bytes @ 0x2
  2458                           
  2459                           
  2460                           ; 2 bytes @ 0x2
  2461  0072                     	ds	2
  2462  0074                     ??___wmul:
  2463  0074                     ??___lwdiv:	
  2464                           ; 1 bytes @ 0x4
  2465                           
  2466  0074                     motor_init@i:	
  2467                           ; 1 bytes @ 0x4
  2468                           
  2469  0074                     ___wmul@product:	
  2470                           ; 2 bytes @ 0x4
  2471                           
  2472                           
  2473                           ; 2 bytes @ 0x4
  2474  0074                     	ds	1
  2475  0075                     ___lwdiv@quotient:
  2476                           
  2477                           ; 2 bytes @ 0x5
  2478  0075                     	ds	1
  2479  0076                     ??_speed_handler:
  2480  0076                     motor_init@i_422:	
  2481                           ; 1 bytes @ 0x6
  2482                           
  2483                           
  2484                           ; 2 bytes @ 0x6
  2485  0076                     	ds	1
  2486  0077                     ___lwdiv@counter:
  2487                           
  2488                           ; 1 bytes @ 0x7
  2489  0077                     	ds	1
  2490  0078                     ??_hall_handler:
  2491  0078                     motor_init@i_423:	
  2492                           ; 1 bytes @ 0x8
  2493                           
  2494  0078                     speed_handler@speed_error:	
  2495                           ; 2 bytes @ 0x8
  2496                           
  2497                           
  2498                           ; 2 bytes @ 0x8
  2499  0078                     	ds	2
  2500  007A                     ??_motor_handler:
  2501  007A                     ??_main:	
  2502                           ; 1 bytes @ 0xA
  2503                           
  2504                           
  2505                           	psect	maintext
  2506  02A2                     __pmaintext:	
  2507                           ; 1 bytes @ 0xA
  2508 ;;
  2509 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2510 ;;
  2511 ;; *************** function _main *****************
  2512 ;; Defined at:
  2513 ;;		line 14 in file "main.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : B1F/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2527 ;;      Params:         0       0       0       0
  2528 ;;      Locals:         0       0       0       0
  2529 ;;      Temps:          0       0       0       0
  2530 ;;      Totals:         0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels required when called: 7
  2533 ;; This function calls:
  2534 ;;		_SYSTEM_Initialize
  2535 ;;		_hall_handler
  2536 ;;		_motor_handler
  2537 ;;		_motor_init
  2538 ;; This function is called by:
  2539 ;;		Startup code after reset
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _main
  2545  02A2                     _main:
  2546  02A2                     l1581:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2549                           
  2550                           
  2551                           ;main.c: 15:     SYSTEM_Initialize();
  2552  02A2  3182  22E8  3182   	fcall	_SYSTEM_Initialize
  2553  02A5                     l1583:
  2554                           
  2555                           ;main.c: 17:     (INTCONbits.GIE = 1);
  2556  02A5  178B               	bsf	11,7	;volatile
  2557  02A6                     l1585:
  2558                           
  2559                           ;main.c: 18:     (INTCONbits.PEIE = 1);
  2560  02A6  170B               	bsf	11,6	;volatile
  2561  02A7                     l1587:
  2562                           
  2563                           ;main.c: 20:     motor_init();
  2564  02A7  3180  20C3  3182   	fcall	_motor_init
  2565  02AA                     l1589:
  2566                           
  2567                           ;main.c: 23:         if(hall_flag == 1){
  2568  02AA  0020               	movlb	0	; select bank0
  2569  02AB  033B               	decf	_hall_flag,w
  2570  02AC  1D03               	btfss	3,2
  2571  02AD  2AAF               	goto	u791
  2572  02AE  2AB0               	goto	u790
  2573  02AF                     u791:
  2574  02AF  2AB4               	goto	l1595
  2575  02B0                     u790:
  2576  02B0                     l1591:
  2577                           
  2578                           ;main.c: 24:             hall_flag = 0;
  2579  02B0  01BB               	clrf	_hall_flag
  2580  02B1                     l1593:
  2581                           
  2582                           ;main.c: 25:             hall_handler();
  2583  02B1  3182  22C0  3182   	fcall	_hall_handler
  2584  02B4                     l1595:	
  2585                           ;main.c: 26:         }
  2586                           
  2587                           
  2588                           ;main.c: 30:         if(timer_flag == 1){
  2589  02B4  037B               	decf	_timer_flag,w
  2590  02B5  1D03               	btfss	3,2
  2591  02B6  2AB8               	goto	u801
  2592  02B7  2AB9               	goto	u800
  2593  02B8                     u801:
  2594  02B8  2AAA               	goto	l1589
  2595  02B9                     u800:
  2596  02B9                     l1597:
  2597                           
  2598                           ;main.c: 31:             timer_flag = 0;
  2599  02B9  01FB               	clrf	_timer_flag
  2600  02BA                     l1599:
  2601                           
  2602                           ;main.c: 32:             motor_handler();
  2603  02BA  3180  2047  3182   	fcall	_motor_handler
  2604  02BD  0064               	clrwdt	;# 
  2605                           
  2606                           ;main.c: 34:         }
  2607  02BE  2AAA               	goto	l1589
  2608  02BF  282D               	ljmp	start
  2609  02C0                     __end_of_main:
  2610                           
  2611                           	psect	text1
  2612  0047                     __ptext1:	
  2613 ;; *************** function _motor_handler *****************
  2614 ;; Defined at:
  2615 ;;		line 78 in file "motor.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2629 ;;      Params:         0       0       0       0
  2630 ;;      Locals:         0       0       0       0
  2631 ;;      Temps:          0       0       0       0
  2632 ;;      Totals:         0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 6
  2636 ;; This function calls:
  2637 ;;		_motor_init
  2638 ;;		_speed_handler
  2639 ;;		_step_handler
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _motor_handler
  2647  0047                     _motor_handler:
  2648  0047                     l1519:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _motor_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;motor.c: 79:     step_timer++;
  2654  0047  3001               	movlw	1
  2655  0048  0020               	movlb	0	; select bank0
  2656  0049  07A9               	addwf	_step_timer,f
  2657  004A  3000               	movlw	0
  2658  004B  3DAA               	addwfc	_step_timer+1,f
  2659                           
  2660                           ;motor.c: 80:     hall_timer++;
  2661  004C  3001               	movlw	1
  2662  004D  07AB               	addwf	_hall_timer,f
  2663  004E  3000               	movlw	0
  2664  004F  3DAC               	addwfc	_hall_timer+1,f
  2665                           
  2666                           ;motor.c: 82:     if(speed_stimer > 11U){
  2667  0050  3000               	movlw	0
  2668  0051  0236               	subwf	_speed_stimer+1,w
  2669  0052  300C               	movlw	12
  2670  0053  1903               	skipnz
  2671  0054  0235               	subwf	_speed_stimer,w
  2672  0055  1C03               	skipc
  2673  0056  2858               	goto	u691
  2674  0057  2859               	goto	u690
  2675  0058                     u691:
  2676  0058  2877               	goto	l1535
  2677  0059                     u690:
  2678  0059                     l1521:
  2679                           
  2680                           ;motor.c: 83:         if(motor_dir == 1){
  2681  0059  037A               	decf	_motor_dir,w
  2682  005A  1D03               	btfss	3,2
  2683  005B  285D               	goto	u701
  2684  005C  285E               	goto	u700
  2685  005D                     u701:
  2686  005D  2862               	goto	l1527
  2687  005E                     u700:
  2688  005E                     l1523:
  2689                           
  2690                           ;motor.c: 84:             motor_dir = 0;
  2691  005E  01FA               	clrf	_motor_dir
  2692  005F                     l1525:
  2693                           
  2694                           ;motor.c: 85:             motor_init();
  2695  005F  3180  20C3  3180   	fcall	_motor_init
  2696  0062                     l1527:
  2697                           
  2698                           ;motor.c: 87:         if(step_timer >= step_counts){
  2699  0062  0020               	movlb	0	; select bank0
  2700  0063  083D               	movf	_step_counts+1,w
  2701  0064  022A               	subwf	_step_timer+1,w
  2702  0065  1D03               	skipz
  2703  0066  2869               	goto	u715
  2704  0067  083C               	movf	_step_counts,w
  2705  0068  0229               	subwf	_step_timer,w
  2706  0069                     u715:
  2707  0069  1C03               	skipc
  2708  006A  286C               	goto	u711
  2709  006B  286D               	goto	u710
  2710  006C                     u711:
  2711  006C  28C2               	goto	l302
  2712  006D                     u710:
  2713  006D                     l1529:
  2714                           
  2715                           ;motor.c: 88:             step_timer = 0U;
  2716  006D  01A9               	clrf	_step_timer
  2717  006E  01AA               	clrf	_step_timer+1
  2718  006F                     l1531:
  2719                           
  2720                           ;motor.c: 89:             speed_handler();
  2721  006F  3181  21A7  3180   	fcall	_speed_handler
  2722  0072                     l1533:
  2723                           
  2724                           ;motor.c: 90:             step_handler(motor_dir);
  2725  0072  087A               	movf	_motor_dir,w
  2726  0073  3181  213A  3180   	fcall	_step_handler
  2727                           
  2728                           ;motor.c: 91:         }
  2729  0076  28C2               	goto	l302
  2730  0077                     l1535:
  2731  0077  3000               	movlw	0
  2732  0078  0236               	subwf	_speed_stimer+1,w
  2733  0079  3009               	movlw	9
  2734  007A  1903               	skipnz
  2735  007B  0235               	subwf	_speed_stimer,w
  2736  007C  1C03               	skipc
  2737  007D  287F               	goto	u721
  2738  007E  2880               	goto	u720
  2739  007F                     u721:
  2740  007F  2899               	goto	l1547
  2741  0080                     u720:
  2742  0080                     l1537:
  2743                           
  2744                           ;motor.c: 98:         LATCbits.LATC1 = 0;
  2745  0080  0022               	movlb	2	; select bank2
  2746  0081  108E               	bcf	14,1	;volatile
  2747                           
  2748                           ;motor.c: 99:         LATCbits.LATC0 = 0;
  2749  0082  100E               	bcf	14,0	;volatile
  2750                           
  2751                           ;motor.c: 100:         LATCbits.LATC3 = 0;
  2752  0083  118E               	bcf	14,3	;volatile
  2753                           
  2754                           ;motor.c: 101:         LATAbits.LATA4 = 0;
  2755  0084  120C               	bcf	12,4	;volatile
  2756                           
  2757                           ;motor.c: 102:         LATAbits.LATA5 = 0;
  2758  0085  128C               	bcf	12,5	;volatile
  2759                           
  2760                           ;motor.c: 103:         LATCbits.LATC2 = 0;
  2761  0086  110E               	bcf	14,2	;volatile
  2762  0087                     l1539:
  2763                           
  2764                           ;motor.c: 105:         step_timer = 0U;
  2765  0087  0020               	movlb	0	; select bank0
  2766  0088  01A9               	clrf	_step_timer
  2767  0089  01AA               	clrf	_step_timer+1
  2768                           
  2769                           ;motor.c: 106:         hall_timer = 0U;
  2770  008A  01AB               	clrf	_hall_timer
  2771  008B  01AC               	clrf	_hall_timer+1
  2772  008C                     l1541:
  2773                           
  2774                           ;motor.c: 107:         step_counts = 1300U;
  2775  008C  3014               	movlw	20
  2776  008D  00BC               	movwf	_step_counts
  2777  008E  3005               	movlw	5
  2778  008F  00BD               	movwf	_step_counts+1
  2779  0090                     l1543:
  2780                           
  2781                           ;motor.c: 108:         speed_value = 1300U;
  2782  0090  3014               	movlw	20
  2783  0091  00FC               	movwf	_speed_value
  2784  0092  3005               	movlw	5
  2785  0093  00FD               	movwf	_speed_value+1
  2786  0094                     l1545:
  2787                           
  2788                           ;motor.c: 109:         hall_value = 1300U;
  2789  0094  3014               	movlw	20
  2790  0095  00BE               	movwf	_hall_value
  2791  0096  3005               	movlw	5
  2792  0097  00BF               	movwf	_hall_value+1
  2793                           
  2794                           ;motor.c: 110:     }
  2795  0098  28C2               	goto	l302
  2796  0099                     l1547:
  2797                           
  2798                           ;motor.c: 112:         if(motor_dir == 0){
  2799  0099  087A               	movf	_motor_dir,w
  2800  009A  1D03               	btfss	3,2
  2801  009B  289D               	goto	u731
  2802  009C  289E               	goto	u730
  2803  009D                     u731:
  2804  009D  28A3               	goto	l1553
  2805  009E                     u730:
  2806  009E                     l1549:
  2807                           
  2808                           ;motor.c: 113:             motor_dir = 1;
  2809  009E  01FA               	clrf	_motor_dir
  2810  009F  0AFA               	incf	_motor_dir,f
  2811  00A0                     l1551:
  2812                           
  2813                           ;motor.c: 114:             motor_init();
  2814  00A0  3180  20C3  3180   	fcall	_motor_init
  2815  00A3                     l1553:
  2816                           
  2817                           ;motor.c: 116:         hall_timer = 0U;
  2818  00A3  0020               	movlb	0	; select bank0
  2819  00A4  01AB               	clrf	_hall_timer
  2820  00A5  01AC               	clrf	_hall_timer+1
  2821  00A6                     l1555:
  2822                           
  2823                           ;motor.c: 117:         step_counts = 1300U;
  2824  00A6  3014               	movlw	20
  2825  00A7  00BC               	movwf	_step_counts
  2826  00A8  3005               	movlw	5
  2827  00A9  00BD               	movwf	_step_counts+1
  2828  00AA                     l1557:
  2829                           
  2830                           ;motor.c: 118:         speed_value = 1300U;
  2831  00AA  3014               	movlw	20
  2832  00AB  00FC               	movwf	_speed_value
  2833  00AC  3005               	movlw	5
  2834  00AD  00FD               	movwf	_speed_value+1
  2835  00AE                     l1559:
  2836                           
  2837                           ;motor.c: 119:         hall_value = 1300U;
  2838  00AE  3014               	movlw	20
  2839  00AF  00BE               	movwf	_hall_value
  2840  00B0  3005               	movlw	5
  2841  00B1  00BF               	movwf	_hall_value+1
  2842  00B2                     l1561:
  2843                           
  2844                           ;motor.c: 121:         if(step_timer >= step_counts){
  2845  00B2  083D               	movf	_step_counts+1,w
  2846  00B3  022A               	subwf	_step_timer+1,w
  2847  00B4  1D03               	skipz
  2848  00B5  28B8               	goto	u745
  2849  00B6  083C               	movf	_step_counts,w
  2850  00B7  0229               	subwf	_step_timer,w
  2851  00B8                     u745:
  2852  00B8  1C03               	skipc
  2853  00B9  28BB               	goto	u741
  2854  00BA  28BC               	goto	u740
  2855  00BB                     u741:
  2856  00BB  28C2               	goto	l302
  2857  00BC                     u740:
  2858  00BC                     l1563:
  2859                           
  2860                           ;motor.c: 122:             step_timer = 0U;
  2861  00BC  01A9               	clrf	_step_timer
  2862  00BD  01AA               	clrf	_step_timer+1
  2863  00BE                     l1565:
  2864                           
  2865                           ;motor.c: 123:             step_handler(motor_dir);
  2866  00BE  087A               	movf	_motor_dir,w
  2867  00BF  3181  213A  3180   	fcall	_step_handler
  2868  00C2                     l302:	
  2869                           ;motor.c: 124:         }
  2870                           
  2871  00C2  0008               	return
  2872  00C3                     __end_of_motor_handler:
  2873                           
  2874                           	psect	text2
  2875  01A7                     __ptext2:	
  2876 ;; *************** function _speed_handler *****************
  2877 ;; Defined at:
  2878 ;;		line 60 in file "motor.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  speed_error     2    8[COMMON] unsigned short 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2892 ;;      Params:         0       0       0       0
  2893 ;;      Locals:         2       0       0       0
  2894 ;;      Temps:          2       0       0       0
  2895 ;;      Totals:         4       0       0       0
  2896 ;;Total ram usage:        4 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 5
  2899 ;; This function calls:
  2900 ;;		___wmul
  2901 ;; This function is called by:
  2902 ;;		_motor_handler
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _speed_handler
  2908  01A7                     _speed_handler:
  2909  01A7                     l1437:	
  2910                           ;incstack = 0
  2911                           ; Regs used in _speed_handler: [wreg+status,2+status,0+pclath+cstack]
  2912                           
  2913  01A7                     l1439:
  2914                           
  2915                           ;motor.c: 62:     speed_value = speed_stimer - 10U;
  2916  01A7  0020               	movlb	0	; select bank0
  2917  01A8  0835               	movf	_speed_stimer,w
  2918  01A9  3EF6               	addlw	246
  2919  01AA  00FC               	movwf	_speed_value
  2920  01AB  30FF               	movlw	255
  2921  01AC  3D36               	addwfc	_speed_stimer+1,w
  2922  01AD  00FD               	movwf	_speed_value+1
  2923  01AE                     l1441:
  2924                           
  2925                           ;motor.c: 63:     speed_value = 1300U - (speed_value*100U);
  2926  01AE  087D               	movf	_speed_value+1,w
  2927  01AF  00F1               	movwf	___wmul@multiplier+1
  2928  01B0  087C               	movf	_speed_value,w
  2929  01B1  00F0               	movwf	___wmul@multiplier
  2930  01B2  309C               	movlw	156
  2931  01B3  00F2               	movwf	___wmul@multiplicand
  2932  01B4  30FF               	movlw	255
  2933  01B5  00F3               	movwf	___wmul@multiplicand+1
  2934  01B6  3182  2283  3181   	fcall	___wmul
  2935  01B9  0870               	movf	?___wmul,w
  2936  01BA  3E14               	addlw	20
  2937  01BB  00FC               	movwf	_speed_value
  2938  01BC  3005               	movlw	5
  2939  01BD  3D71               	addwfc	?___wmul+1,w
  2940  01BE  00FD               	movwf	_speed_value+1
  2941  01BF                     l1443:
  2942                           
  2943                           ;motor.c: 65:     if(speed_value == hall_value){
  2944  01BF  0020               	movlb	0	; select bank0
  2945  01C0  083F               	movf	_hall_value+1,w
  2946  01C1  067D               	xorwf	_speed_value+1,w
  2947  01C2  1D03               	skipz
  2948  01C3  29C6               	goto	u535
  2949  01C4  083E               	movf	_hall_value,w
  2950  01C5  067C               	xorwf	_speed_value,w
  2951  01C6                     u535:
  2952  01C6  1D03               	skipz
  2953  01C7  29C9               	goto	u531
  2954  01C8  29CA               	goto	u530
  2955  01C9                     u531:
  2956  01C9  29CB               	goto	l1447
  2957  01CA                     u530:
  2958  01CA  2A00               	goto	l289
  2959  01CB                     l1447:
  2960  01CB  087D               	movf	_speed_value+1,w
  2961  01CC  023F               	subwf	_hall_value+1,w
  2962  01CD  1D03               	skipz
  2963  01CE  29D1               	goto	u545
  2964  01CF  087C               	movf	_speed_value,w
  2965  01D0  023E               	subwf	_hall_value,w
  2966  01D1                     u545:
  2967  01D1  1803               	skipnc
  2968  01D2  29D4               	goto	u541
  2969  01D3  29D5               	goto	u540
  2970  01D4                     u541:
  2971  01D4  29EB               	goto	l1451
  2972  01D5                     u540:
  2973  01D5                     l1449:
  2974                           
  2975                           ;motor.c: 69:         speed_error = ((speed_value - hall_value)/32U);
  2976  01D5  083E               	movf	_hall_value,w
  2977  01D6  027C               	subwf	_speed_value,w
  2978  01D7  00F6               	movwf	??_speed_handler
  2979  01D8  083F               	movf	_hall_value+1,w
  2980  01D9  3B7D               	subwfb	_speed_value+1,w
  2981  01DA  00F7               	movwf	??_speed_handler+1
  2982  01DB  3005               	movlw	5
  2983  01DC                     u555:
  2984  01DC  36F7               	lsrf	??_speed_handler+1,f
  2985  01DD  0CF6               	rrf	??_speed_handler,f
  2986  01DE  0B89               	decfsz	9,f
  2987  01DF  29DC               	goto	u555
  2988  01E0  0876               	movf	??_speed_handler,w
  2989  01E1  00F8               	movwf	speed_handler@speed_error
  2990  01E2  0877               	movf	??_speed_handler+1,w
  2991  01E3  00F9               	movwf	speed_handler@speed_error+1
  2992                           
  2993                           ;motor.c: 70:         step_counts = step_counts + speed_error;
  2994  01E4  0878               	movf	speed_handler@speed_error,w
  2995  01E5  073C               	addwf	_step_counts,w
  2996  01E6  00BC               	movwf	_step_counts
  2997  01E7  0879               	movf	speed_handler@speed_error+1,w
  2998  01E8  3D3D               	addwfc	_step_counts+1,w
  2999  01E9  00BD               	movwf	_step_counts+1
  3000                           
  3001                           ;motor.c: 71:     }
  3002  01EA  2A00               	goto	l289
  3003  01EB                     l1451:
  3004                           
  3005                           ;motor.c: 73:         speed_error = ((hall_value - speed_value)/32U);
  3006  01EB  087C               	movf	_speed_value,w
  3007  01EC  023E               	subwf	_hall_value,w
  3008  01ED  00F6               	movwf	??_speed_handler
  3009  01EE  087D               	movf	_speed_value+1,w
  3010  01EF  3B3F               	subwfb	_hall_value+1,w
  3011  01F0  00F7               	movwf	??_speed_handler+1
  3012  01F1  3005               	movlw	5
  3013  01F2                     u565:
  3014  01F2  36F7               	lsrf	??_speed_handler+1,f
  3015  01F3  0CF6               	rrf	??_speed_handler,f
  3016  01F4  0B89               	decfsz	9,f
  3017  01F5  29F2               	goto	u565
  3018  01F6  0876               	movf	??_speed_handler,w
  3019  01F7  00F8               	movwf	speed_handler@speed_error
  3020  01F8  0877               	movf	??_speed_handler+1,w
  3021  01F9  00F9               	movwf	speed_handler@speed_error+1
  3022                           
  3023                           ;motor.c: 74:         step_counts = step_counts - speed_error;
  3024  01FA  0878               	movf	speed_handler@speed_error,w
  3025  01FB  023C               	subwf	_step_counts,w
  3026  01FC  00BC               	movwf	_step_counts
  3027  01FD  0879               	movf	speed_handler@speed_error+1,w
  3028  01FE  3B3D               	subwfb	_step_counts+1,w
  3029  01FF  00BD               	movwf	_step_counts+1
  3030  0200                     l289:
  3031  0200  0008               	return
  3032  0201                     __end_of_speed_handler:
  3033                           
  3034                           	psect	text3
  3035  0283                     __ptext3:	
  3036 ;; *************** function ___wmul *****************
  3037 ;; Defined at:
  3038 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  multiplier      2    0[COMMON] unsigned int 
  3041 ;;  multiplicand    2    2[COMMON] unsigned int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  product         2    4[COMMON] unsigned int 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[COMMON] unsigned int 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3053 ;;      Params:         4       0       0       0
  3054 ;;      Locals:         2       0       0       0
  3055 ;;      Temps:          0       0       0       0
  3056 ;;      Totals:         6       0       0       0
  3057 ;;Total ram usage:        6 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 4
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_speed_handler
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function ___wmul
  3069  0283                     ___wmul:
  3070  0283                     l1307:	
  3071                           ;incstack = 0
  3072                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3073                           
  3074  0283  01F4               	clrf	___wmul@product
  3075  0284  01F5               	clrf	___wmul@product+1
  3076  0285                     l1309:
  3077  0285  1C70               	btfss	___wmul@multiplier,0
  3078  0286  2A88               	goto	u441
  3079  0287  2A89               	goto	u440
  3080  0288                     u441:
  3081  0288  2A8D               	goto	l471
  3082  0289                     u440:
  3083  0289                     l1311:
  3084  0289  0872               	movf	___wmul@multiplicand,w
  3085  028A  07F4               	addwf	___wmul@product,f
  3086  028B  0873               	movf	___wmul@multiplicand+1,w
  3087  028C  3DF5               	addwfc	___wmul@product+1,f
  3088  028D                     l471:
  3089  028D  3001               	movlw	1
  3090  028E                     u455:
  3091  028E  35F2               	lslf	___wmul@multiplicand,f
  3092  028F  0DF3               	rlf	___wmul@multiplicand+1,f
  3093  0290  0B89               	decfsz	9,f
  3094  0291  2A8E               	goto	u455
  3095  0292                     l1313:
  3096  0292  3001               	movlw	1
  3097  0293                     u465:
  3098  0293  36F1               	lsrf	___wmul@multiplier+1,f
  3099  0294  0CF0               	rrf	___wmul@multiplier,f
  3100  0295  0B89               	decfsz	9,f
  3101  0296  2A93               	goto	u465
  3102  0297                     l1315:
  3103  0297  0870               	movf	___wmul@multiplier,w
  3104  0298  0471               	iorwf	___wmul@multiplier+1,w
  3105  0299  1D03               	btfss	3,2
  3106  029A  2A9C               	goto	u471
  3107  029B  2A9D               	goto	u470
  3108  029C                     u471:
  3109  029C  2A85               	goto	l1309
  3110  029D                     u470:
  3111  029D                     l1317:
  3112  029D  0875               	movf	___wmul@product+1,w
  3113  029E  00F1               	movwf	?___wmul+1
  3114  029F  0874               	movf	___wmul@product,w
  3115  02A0  00F0               	movwf	?___wmul
  3116  02A1                     l473:
  3117  02A1  0008               	return
  3118  02A2                     __end_of___wmul:
  3119                           
  3120                           	psect	text4
  3121  00C3                     __ptext4:	
  3122 ;; *************** function _motor_init *****************
  3123 ;; Defined at:
  3124 ;;		line 13 in file "motor.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  i               2    8[COMMON] unsigned short 
  3129 ;;  i               2    6[COMMON] unsigned short 
  3130 ;;  i               2    4[COMMON] unsigned short 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3140 ;;      Params:         0       0       0       0
  3141 ;;      Locals:         6       0       0       0
  3142 ;;      Temps:          2       0       0       0
  3143 ;;      Totals:         8       0       0       0
  3144 ;;Total ram usage:        8 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 5
  3147 ;; This function calls:
  3148 ;;		_step_handler
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;;		_motor_handler
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _motor_init
  3157  00C3                     _motor_init:
  3158  00C3                     l1375:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _motor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3161                           
  3162                           
  3163                           ;motor.c: 14:     step_timer = 0U;
  3164  00C3  0020               	movlb	0	; select bank0
  3165  00C4  01A9               	clrf	_step_timer
  3166  00C5  01AA               	clrf	_step_timer+1
  3167  00C6                     l1377:
  3168                           
  3169                           ;motor.c: 15:     step_counts = 1300U;
  3170  00C6  3014               	movlw	20
  3171  00C7  00BC               	movwf	_step_counts
  3172  00C8  3005               	movlw	5
  3173  00C9  00BD               	movwf	_step_counts+1
  3174  00CA                     l1379:
  3175                           
  3176                           ;motor.c: 16:     speed_value = 1300U;
  3177  00CA  3014               	movlw	20
  3178  00CB  00FC               	movwf	_speed_value
  3179  00CC  3005               	movlw	5
  3180  00CD  00FD               	movwf	_speed_value+1
  3181  00CE                     l1381:
  3182                           
  3183                           ;motor.c: 17:     hall_value = 1300U;
  3184  00CE  3014               	movlw	20
  3185  00CF  00BE               	movwf	_hall_value
  3186  00D0  3005               	movlw	5
  3187  00D1  00BF               	movwf	_hall_value+1
  3188  00D2                     l1383:
  3189                           
  3190                           ;motor.c: 19:     TRISCbits.TRISC4 = 1;
  3191  00D2  0021               	movlb	1	; select bank1
  3192  00D3  160E               	bsf	14,4	;volatile
  3193  00D4                     l1385:
  3194                           
  3195                           ;motor.c: 20:     ANSELCbits.ANSC4 = 0;
  3196  00D4  0023               	movlb	3	; select bank3
  3197  00D5  120E               	bcf	14,4	;volatile
  3198  00D6                     l1387:
  3199                           
  3200                           ;motor.c: 22:     if(motor_dir == 0U){
  3201  00D6  087A               	movf	_motor_dir,w
  3202  00D7  1D03               	btfss	3,2
  3203  00D8  28DA               	goto	u491
  3204  00D9  28DB               	goto	u490
  3205  00DA                     u491:
  3206  00DA  2921               	goto	l1421
  3207  00DB                     u490:
  3208  00DB                     l1389:
  3209                           
  3210                           ;motor.c: 23:         for(uint16_t i = 0U; i < 5000U; i++){
  3211  00DB  01F4               	clrf	motor_init@i
  3212  00DC  01F5               	clrf	motor_init@i+1
  3213  00DD                     l1395:
  3214                           
  3215                           ;motor.c: 24:             _delay((unsigned long)((60)*(32000000/4000000.0)));
  3216  00DD  30A0               	movlw	160
  3217  00DE                     u817:
  3218  00DE  0B89               	decfsz	9,f
  3219  00DF  28DE               	goto	u817
  3220  00E0                     l1397:
  3221                           
  3222                           ;motor.c: 25:             step_handler(0);
  3223  00E0  3000               	movlw	0
  3224  00E1  3181  213A  3180   	fcall	_step_handler
  3225  00E4                     l1399:
  3226                           
  3227                           ;motor.c: 26:         }
  3228  00E4  3001               	movlw	1
  3229  00E5  07F4               	addwf	motor_init@i,f
  3230  00E6  3000               	movlw	0
  3231  00E7  3DF5               	addwfc	motor_init@i+1,f
  3232  00E8                     l1401:
  3233  00E8  3013               	movlw	19
  3234  00E9  0275               	subwf	motor_init@i+1,w
  3235  00EA  3088               	movlw	136
  3236  00EB  1903               	skipnz
  3237  00EC  0274               	subwf	motor_init@i,w
  3238  00ED  1C03               	skipc
  3239  00EE  28F0               	goto	u501
  3240  00EF  28F1               	goto	u500
  3241  00F0                     u501:
  3242  00F0  28DD               	goto	l1395
  3243  00F1                     u500:
  3244  00F1                     l1403:
  3245                           
  3246                           ;motor.c: 27:         _delay((unsigned long)((100)*(32000000/4000.0)));
  3247  00F1  3005               	movlw	5
  3248  00F2  00F3               	movwf	??_motor_init+1
  3249  00F3  300F               	movlw	15
  3250  00F4  00F2               	movwf	??_motor_init
  3251  00F5  30F1               	movlw	241
  3252  00F6                     u827:
  3253  00F6  0B89               	decfsz	9,f
  3254  00F7  28F6               	goto	u827
  3255  00F8  0BF2               	decfsz	??_motor_init,f
  3256  00F9  28F6               	goto	u827
  3257  00FA  0BF3               	decfsz	??_motor_init+1,f
  3258  00FB  28F6               	goto	u827
  3259  00FC  0000               	nop
  3260  00FD                     l1405:
  3261                           
  3262                           ;motor.c: 28:         for(uint16_t i = 0U; i < 10000U; i++){
  3263  00FD  01F6               	clrf	motor_init@i_422
  3264  00FE  01F7               	clrf	motor_init@i_422+1
  3265  00FF                     l1411:
  3266                           
  3267                           ;motor.c: 29:             _delay((unsigned long)((20)*(32000000/4000000.0)));
  3268  00FF  3035               	movlw	53
  3269  0100                     u837:
  3270  0100  0B89               	decfsz	9,f
  3271  0101  2900               	goto	u837
  3272  0102  0000               	nop
  3273  0103                     l1413:
  3274                           
  3275                           ;motor.c: 30:             step_handler(1);
  3276  0103  3001               	movlw	1
  3277  0104  3181  213A  3180   	fcall	_step_handler
  3278  0107                     l1415:
  3279                           
  3280                           ;motor.c: 31:         }
  3281  0107  3001               	movlw	1
  3282  0108  07F6               	addwf	motor_init@i_422,f
  3283  0109  3000               	movlw	0
  3284  010A  3DF7               	addwfc	motor_init@i_422+1,f
  3285  010B                     l1417:
  3286  010B  3027               	movlw	39
  3287  010C  0277               	subwf	motor_init@i_422+1,w
  3288  010D  3010               	movlw	16
  3289  010E  1903               	skipnz
  3290  010F  0276               	subwf	motor_init@i_422,w
  3291  0110  1C03               	skipc
  3292  0111  2913               	goto	u511
  3293  0112  2914               	goto	u510
  3294  0113                     u511:
  3295  0113  28FF               	goto	l1411
  3296  0114                     u510:
  3297  0114                     l1419:
  3298                           
  3299                           ;motor.c: 32:         _delay((unsigned long)((100)*(32000000/4000.0)));
  3300  0114  3005               	movlw	5
  3301  0115  00F3               	movwf	??_motor_init+1
  3302  0116  300F               	movlw	15
  3303  0117  00F2               	movwf	??_motor_init
  3304  0118  30F1               	movlw	241
  3305  0119                     u847:
  3306  0119  0B89               	decfsz	9,f
  3307  011A  2919               	goto	u847
  3308  011B  0BF2               	decfsz	??_motor_init,f
  3309  011C  2919               	goto	u847
  3310  011D  0BF3               	decfsz	??_motor_init+1,f
  3311  011E  2919               	goto	u847
  3312  011F  0000               	nop
  3313                           
  3314                           ;motor.c: 33:     }
  3315  0120  2939               	goto	l273
  3316  0121                     l1421:
  3317                           
  3318                           ;motor.c: 35:         for(uint16_t i = 0U; i < 4000U; i++){
  3319  0121  01F8               	clrf	motor_init@i_423
  3320  0122  01F9               	clrf	motor_init@i_423+1
  3321  0123                     l1427:
  3322                           
  3323                           ;motor.c: 36:             _delay((unsigned long)((120)*(32000000/4000000.0)));
  3324  0123  30C0               	movlw	192
  3325  0124                     u857:
  3326  0124  3200               	nop2
  3327  0125  0B89               	decfsz	9,f
  3328  0126  2924               	goto	u857
  3329  0127                     l1429:
  3330                           
  3331                           ;motor.c: 37:             step_handler(0);
  3332  0127  3000               	movlw	0
  3333  0128  3181  213A  3180   	fcall	_step_handler
  3334  012B                     l1431:
  3335                           
  3336                           ;motor.c: 38:         }
  3337  012B  3001               	movlw	1
  3338  012C  07F8               	addwf	motor_init@i_423,f
  3339  012D  3000               	movlw	0
  3340  012E  3DF9               	addwfc	motor_init@i_423+1,f
  3341  012F                     l1433:
  3342  012F  300F               	movlw	15
  3343  0130  0279               	subwf	motor_init@i_423+1,w
  3344  0131  30A0               	movlw	160
  3345  0132  1903               	skipnz
  3346  0133  0278               	subwf	motor_init@i_423,w
  3347  0134  1C03               	skipc
  3348  0135  2937               	goto	u521
  3349  0136  2938               	goto	u520
  3350  0137                     u521:
  3351  0137  2923               	goto	l1427
  3352  0138                     u520:
  3353  0138  2914               	goto	l1419
  3354  0139                     l273:
  3355  0139  0008               	return
  3356  013A                     __end_of_motor_init:
  3357                           
  3358                           	psect	text5
  3359  013A                     __ptext5:	
  3360 ;; *************** function _step_handler *****************
  3361 ;; Defined at:
  3362 ;;		line 131 in file "motor.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  direction       1    wreg     _Bool 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  direction       1    0[COMMON] _Bool 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3376 ;;      Params:         0       0       0       0
  3377 ;;      Locals:         0       0       0       0
  3378 ;;      Temps:          2       0       0       0
  3379 ;;      Totals:         2       0       0       0
  3380 ;;Total ram usage:        2 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 4
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_motor_init
  3387 ;;		_motor_handler
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _step_handler
  3393  013A                     _step_handler:
  3394  013A                     l1285:	
  3395                           ;incstack = 0
  3396                           ; Regs used in _step_handler: [wreg-fsr0h+status,2+status,0]
  3397                           
  3398                           
  3399                           ;motor.c: 133:     if(motor_dir == 0){
  3400  013A  087A               	movf	_motor_dir,w
  3401  013B  1D03               	btfss	3,2
  3402  013C  293E               	goto	u411
  3403  013D  293F               	goto	u410
  3404  013E                     u411:
  3405  013E  2945               	goto	l1289
  3406  013F                     u410:
  3407  013F                     l1287:
  3408                           
  3409                           ;motor.c: 134:         StepNum++;
  3410  013F  3001               	movlw	1
  3411  0140  00F0               	movwf	??_step_handler
  3412  0141  0870               	movf	??_step_handler,w
  3413  0142  0020               	movlb	0	; select bank0
  3414  0143  07C4               	addwf	_StepNum,f
  3415                           
  3416                           ;motor.c: 135:     }
  3417  0144  298A               	goto	l1301
  3418  0145                     l1289:
  3419                           
  3420                           ;motor.c: 137:         StepNum--;
  3421  0145  3001               	movlw	1
  3422  0146  0020               	movlb	0	; select bank0
  3423  0147  02C4               	subwf	_StepNum,f
  3424  0148  298A               	goto	l1301
  3425  0149                     l308:	
  3426                           ;motor.c: 140:         case 1:
  3427                           
  3428                           
  3429                           ;motor.c: 142:             LATCbits.LATC1 = 0;
  3430  0149  0022               	movlb	2	; select bank2
  3431  014A  108E               	bcf	14,1	;volatile
  3432                           
  3433                           ;motor.c: 143:             LATCbits.LATC0 = 0;
  3434  014B  100E               	bcf	14,0	;volatile
  3435                           
  3436                           ;motor.c: 144:             LATCbits.LATC3 = 0;
  3437  014C  118E               	bcf	14,3	;volatile
  3438                           
  3439                           ;motor.c: 145:             LATAbits.LATA4 = 0;
  3440  014D  120C               	bcf	12,4	;volatile
  3441                           
  3442                           ;motor.c: 146:             LATAbits.LATA5 = 1;
  3443  014E  168C               	bsf	12,5	;volatile
  3444                           
  3445                           ;motor.c: 147:             LATCbits.LATC2 = 1;
  3446  014F  150E               	bsf	14,2	;volatile
  3447  0150                     l1291:
  3448                           
  3449                           ;motor.c: 148:             if(motor_dir == 0){
  3450  0150  087A               	movf	_motor_dir,w
  3451  0151  1D03               	btfss	3,2
  3452  0152  2954               	goto	u421
  3453  0153  2955               	goto	u420
  3454  0154                     u421:
  3455  0154  29A6               	goto	l319
  3456  0155                     u420:
  3457  0155                     l1293:
  3458                           
  3459                           ;motor.c: 149:                 StepNum = 7;
  3460  0155  3007               	movlw	7
  3461  0156  00F0               	movwf	??_step_handler
  3462  0157  0870               	movf	??_step_handler,w
  3463  0158  0020               	movlb	0	; select bank0
  3464  0159  00C4               	movwf	_StepNum
  3465                           
  3466                           ;motor.c: 150:             }
  3467  015A  29A6               	goto	l319
  3468  015B                     l312:	
  3469                           ;motor.c: 156:         case 2:
  3470                           
  3471                           
  3472                           ;motor.c: 158:             LATCbits.LATC1 = 0;
  3473  015B  0022               	movlb	2	; select bank2
  3474  015C  108E               	bcf	14,1	;volatile
  3475                           
  3476                           ;motor.c: 159:             LATCbits.LATC0 = 0;
  3477  015D  100E               	bcf	14,0	;volatile
  3478                           
  3479                           ;motor.c: 160:             LATAbits.LATA4 = 0;
  3480  015E  120C               	bcf	12,4	;volatile
  3481                           
  3482                           ;motor.c: 161:             LATAbits.LATA5 = 0;
  3483  015F  128C               	bcf	12,5	;volatile
  3484                           
  3485                           ;motor.c: 162:             LATCbits.LATC3 = 1;
  3486  0160  158E               	bsf	14,3	;volatile
  3487                           
  3488                           ;motor.c: 163:             LATCbits.LATC2 = 1;
  3489  0161  150E               	bsf	14,2	;volatile
  3490                           
  3491                           ;motor.c: 164:             break;
  3492  0162  29A6               	goto	l319
  3493  0163                     l313:	
  3494                           ;motor.c: 166:         case 3:
  3495                           
  3496                           
  3497                           ;motor.c: 168:             LATCbits.LATC1 = 0;
  3498  0163  0022               	movlb	2	; select bank2
  3499  0164  108E               	bcf	14,1	;volatile
  3500                           
  3501                           ;motor.c: 169:             LATAbits.LATA4 = 0;
  3502  0165  120C               	bcf	12,4	;volatile
  3503                           
  3504                           ;motor.c: 170:             LATAbits.LATA5 = 0;
  3505  0166  128C               	bcf	12,5	;volatile
  3506                           
  3507                           ;motor.c: 171:             LATCbits.LATC2 = 0;
  3508  0167  110E               	bcf	14,2	;volatile
  3509                           
  3510                           ;motor.c: 172:             LATCbits.LATC3 = 1;
  3511  0168  158E               	bsf	14,3	;volatile
  3512                           
  3513                           ;motor.c: 173:             LATCbits.LATC0 = 1;
  3514  0169  140E               	bsf	14,0	;volatile
  3515                           
  3516                           ;motor.c: 174:             break;
  3517  016A  29A6               	goto	l319
  3518  016B                     l314:	
  3519                           ;motor.c: 176:         case 4:
  3520                           
  3521                           
  3522                           ;motor.c: 178:             LATAbits.LATA4 = 0;
  3523  016B  0022               	movlb	2	; select bank2
  3524  016C  120C               	bcf	12,4	;volatile
  3525                           
  3526                           ;motor.c: 179:             LATAbits.LATA5 = 0;
  3527  016D  128C               	bcf	12,5	;volatile
  3528                           
  3529                           ;motor.c: 180:             LATCbits.LATC2 = 0;
  3530  016E  110E               	bcf	14,2	;volatile
  3531                           
  3532                           ;motor.c: 181:             LATCbits.LATC3 = 0;
  3533  016F  118E               	bcf	14,3	;volatile
  3534                           
  3535                           ;motor.c: 182:             LATCbits.LATC1 = 1;
  3536  0170  148E               	bsf	14,1	;volatile
  3537                           
  3538                           ;motor.c: 183:             LATCbits.LATC0 = 1;
  3539  0171  140E               	bsf	14,0	;volatile
  3540                           
  3541                           ;motor.c: 184:             break;
  3542  0172  29A6               	goto	l319
  3543  0173                     l315:	
  3544                           ;motor.c: 186:         case 5:
  3545                           
  3546                           
  3547                           ;motor.c: 188:             LATCbits.LATC3 = 0;
  3548  0173  0022               	movlb	2	; select bank2
  3549  0174  118E               	bcf	14,3	;volatile
  3550                           
  3551                           ;motor.c: 189:             LATAbits.LATA5 = 0;
  3552  0175  128C               	bcf	12,5	;volatile
  3553                           
  3554                           ;motor.c: 190:             LATCbits.LATC2 = 0;
  3555  0176  110E               	bcf	14,2	;volatile
  3556                           
  3557                           ;motor.c: 191:             LATCbits.LATC0 = 0;
  3558  0177  100E               	bcf	14,0	;volatile
  3559                           
  3560                           ;motor.c: 192:             LATCbits.LATC1 = 1;
  3561  0178  148E               	bsf	14,1	;volatile
  3562                           
  3563                           ;motor.c: 193:             LATAbits.LATA4 = 1;
  3564  0179  160C               	bsf	12,4	;volatile
  3565                           
  3566                           ;motor.c: 194:             break;
  3567  017A  29A6               	goto	l319
  3568  017B                     l316:	
  3569                           ;motor.c: 196:         case 6:
  3570                           
  3571                           
  3572                           ;motor.c: 198:             LATCbits.LATC0 = 0;
  3573  017B  0022               	movlb	2	; select bank2
  3574  017C  100E               	bcf	14,0	;volatile
  3575                           
  3576                           ;motor.c: 199:             LATCbits.LATC3 = 0;
  3577  017D  118E               	bcf	14,3	;volatile
  3578                           
  3579                           ;motor.c: 200:             LATCbits.LATC2 = 0;
  3580  017E  110E               	bcf	14,2	;volatile
  3581                           
  3582                           ;motor.c: 201:             LATCbits.LATC1 = 0;
  3583  017F  108E               	bcf	14,1	;volatile
  3584                           
  3585                           ;motor.c: 202:             LATAbits.LATA5 = 1;
  3586  0180  168C               	bsf	12,5	;volatile
  3587                           
  3588                           ;motor.c: 203:             LATAbits.LATA4 = 1;
  3589  0181  160C               	bsf	12,4	;volatile
  3590  0182                     l1295:
  3591                           
  3592                           ;motor.c: 204:             if(motor_dir == 1){
  3593  0182  037A               	decf	_motor_dir,w
  3594  0183  1D03               	btfss	3,2
  3595  0184  2986               	goto	u431
  3596  0185  2987               	goto	u430
  3597  0186                     u431:
  3598  0186  29A6               	goto	l319
  3599  0187                     u430:
  3600  0187                     l1297:
  3601                           
  3602                           ;motor.c: 205:                 StepNum = 0;
  3603  0187  0020               	movlb	0	; select bank0
  3604  0188  01C4               	clrf	_StepNum
  3605                           
  3606                           ;motor.c: 206:             }
  3607  0189  29A6               	goto	l319
  3608  018A                     l1301:
  3609  018A  0844               	movf	_StepNum,w
  3610  018B  00F0               	movwf	??_step_handler
  3611  018C  01F1               	clrf	??_step_handler+1
  3612                           
  3613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3614                           ; Switch size 1, requested type "simple"
  3615                           ; Number of cases is 1, Range of values is 0 to 0
  3616                           ; switch strategies available:
  3617                           ; Name         Instructions Cycles
  3618                           ; simple_byte            4     3 (average)
  3619                           ; direct_byte            8     6 (fixed)
  3620                           ; jumptable            260     6 (fixed)
  3621                           ;	Chosen strategy is simple_byte
  3622  018D  0871               	movf	??_step_handler+1,w
  3623  018E  3A00               	xorlw	0	; case 0
  3624  018F  1903               	skipnz
  3625  0190  2992               	goto	l1621
  3626  0191  29A6               	goto	l319
  3627  0192                     l1621:
  3628                           
  3629                           ; Switch size 1, requested type "simple"
  3630                           ; Number of cases is 6, Range of values is 1 to 6
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte           19    10 (average)
  3634                           ; direct_byte           21     9 (fixed)
  3635                           ; jumptable            263     9 (fixed)
  3636                           ;	Chosen strategy is simple_byte
  3637  0192  0870               	movf	??_step_handler,w
  3638  0193  3A01               	xorlw	1	; case 1
  3639  0194  1903               	skipnz
  3640  0195  2949               	goto	l308
  3641  0196  3A03               	xorlw	3	; case 2
  3642  0197  1903               	skipnz
  3643  0198  295B               	goto	l312
  3644  0199  3A01               	xorlw	1	; case 3
  3645  019A  1903               	skipnz
  3646  019B  2963               	goto	l313
  3647  019C  3A07               	xorlw	7	; case 4
  3648  019D  1903               	skipnz
  3649  019E  296B               	goto	l314
  3650  019F  3A01               	xorlw	1	; case 5
  3651  01A0  1903               	skipnz
  3652  01A1  2973               	goto	l315
  3653  01A2  3A03               	xorlw	3	; case 6
  3654  01A3  1903               	skipnz
  3655  01A4  297B               	goto	l316
  3656  01A5  29A6               	goto	l319
  3657  01A6                     l319:
  3658  01A6  0008               	return
  3659  01A7                     __end_of_step_handler:
  3660                           
  3661                           	psect	text6
  3662  02C0                     __ptext6:	
  3663 ;; *************** function _hall_handler *****************
  3664 ;; Defined at:
  3665 ;;		line 43 in file "motor.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3679 ;;      Params:         0       0       0       0
  3680 ;;      Locals:         0       0       0       0
  3681 ;;      Temps:          0       0       0       0
  3682 ;;      Totals:         0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 5
  3686 ;; This function calls:
  3687 ;;		___lwdiv
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _hall_handler
  3695  02C0                     _hall_handler:
  3696  02C0                     l1515:	
  3697                           ;incstack = 0
  3698                           ; Regs used in _hall_handler: [wreg+status,2+status,0+pclath+cstack]
  3699                           
  3700                           
  3701                           ;motor.c: 44:     hall_value = (hall_timer/3U);
  3702  02C0  3003               	movlw	3
  3703  02C1  00F0               	movwf	___lwdiv@divisor
  3704  02C2  3000               	movlw	0
  3705  02C3  00F1               	movwf	___lwdiv@divisor+1
  3706  02C4  0020               	movlb	0	; select bank0
  3707  02C5  082C               	movf	_hall_timer+1,w
  3708  02C6  00F3               	movwf	___lwdiv@dividend+1
  3709  02C7  082B               	movf	_hall_timer,w
  3710  02C8  00F2               	movwf	___lwdiv@dividend
  3711  02C9  3182  2201  3182   	fcall	___lwdiv
  3712  02CC  0871               	movf	?___lwdiv+1,w
  3713  02CD  0020               	movlb	0	; select bank0
  3714  02CE  00BF               	movwf	_hall_value+1
  3715  02CF  0870               	movf	?___lwdiv,w
  3716  02D0  00BE               	movwf	_hall_value
  3717  02D1                     l1517:
  3718                           
  3719                           ;motor.c: 45:     hall_timer = 0U;
  3720  02D1  01AB               	clrf	_hall_timer
  3721  02D2  01AC               	clrf	_hall_timer+1
  3722  02D3                     l276:
  3723  02D3  0008               	return
  3724  02D4                     __end_of_hall_handler:
  3725                           
  3726                           	psect	text7
  3727  0201                     __ptext7:	
  3728 ;; *************** function ___lwdiv *****************
  3729 ;; Defined at:
  3730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  divisor         2    0[COMMON] unsigned int 
  3733 ;;  dividend        2    2[COMMON] unsigned int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  quotient        2    5[COMMON] unsigned int 
  3736 ;;  counter         1    7[COMMON] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2    0[COMMON] unsigned int 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3746 ;;      Params:         4       0       0       0
  3747 ;;      Locals:         3       0       0       0
  3748 ;;      Temps:          1       0       0       0
  3749 ;;      Totals:         8       0       0       0
  3750 ;;Total ram usage:        8 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 4
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_hall_handler
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function ___lwdiv
  3762  0201                     ___lwdiv:
  3763  0201                     l1453:	
  3764                           ;incstack = 0
  3765                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3766                           
  3767  0201  01F5               	clrf	___lwdiv@quotient
  3768  0202  01F6               	clrf	___lwdiv@quotient+1
  3769  0203                     l1455:
  3770  0203  0870               	movf	___lwdiv@divisor,w
  3771  0204  0471               	iorwf	___lwdiv@divisor+1,w
  3772  0205  1903               	btfsc	3,2
  3773  0206  2A08               	goto	u571
  3774  0207  2A09               	goto	u570
  3775  0208                     u571:
  3776  0208  2A38               	goto	l1475
  3777  0209                     u570:
  3778  0209                     l1457:
  3779  0209  01F7               	clrf	___lwdiv@counter
  3780  020A  0AF7               	incf	___lwdiv@counter,f
  3781  020B  2A15               	goto	l1463
  3782  020C                     l1459:
  3783  020C  3001               	movlw	1
  3784  020D                     u585:
  3785  020D  35F0               	lslf	___lwdiv@divisor,f
  3786  020E  0DF1               	rlf	___lwdiv@divisor+1,f
  3787  020F  0B89               	decfsz	9,f
  3788  0210  2A0D               	goto	u585
  3789  0211                     l1461:
  3790  0211  3001               	movlw	1
  3791  0212  00F4               	movwf	??___lwdiv
  3792  0213  0874               	movf	??___lwdiv,w
  3793  0214  07F7               	addwf	___lwdiv@counter,f
  3794  0215                     l1463:
  3795  0215  1FF1               	btfss	___lwdiv@divisor+1,7
  3796  0216  2A18               	goto	u591
  3797  0217  2A19               	goto	u590
  3798  0218                     u591:
  3799  0218  2A0C               	goto	l1459
  3800  0219                     u590:
  3801  0219                     l1465:
  3802  0219  3001               	movlw	1
  3803  021A                     u605:
  3804  021A  35F5               	lslf	___lwdiv@quotient,f
  3805  021B  0DF6               	rlf	___lwdiv@quotient+1,f
  3806  021C  0B89               	decfsz	9,f
  3807  021D  2A1A               	goto	u605
  3808  021E  0871               	movf	___lwdiv@divisor+1,w
  3809  021F  0273               	subwf	___lwdiv@dividend+1,w
  3810  0220  1D03               	skipz
  3811  0221  2A24               	goto	u615
  3812  0222  0870               	movf	___lwdiv@divisor,w
  3813  0223  0272               	subwf	___lwdiv@dividend,w
  3814  0224                     u615:
  3815  0224  1C03               	skipc
  3816  0225  2A27               	goto	u611
  3817  0226  2A28               	goto	u610
  3818  0227                     u611:
  3819  0227  2A2D               	goto	l1471
  3820  0228                     u610:
  3821  0228                     l1467:
  3822  0228  0870               	movf	___lwdiv@divisor,w
  3823  0229  02F2               	subwf	___lwdiv@dividend,f
  3824  022A  0871               	movf	___lwdiv@divisor+1,w
  3825  022B  3BF3               	subwfb	___lwdiv@dividend+1,f
  3826  022C                     l1469:
  3827  022C  1475               	bsf	___lwdiv@quotient,0
  3828  022D                     l1471:
  3829  022D  3001               	movlw	1
  3830  022E                     u625:
  3831  022E  36F1               	lsrf	___lwdiv@divisor+1,f
  3832  022F  0CF0               	rrf	___lwdiv@divisor,f
  3833  0230  0B89               	decfsz	9,f
  3834  0231  2A2E               	goto	u625
  3835  0232                     l1473:
  3836  0232  3001               	movlw	1
  3837  0233  02F7               	subwf	___lwdiv@counter,f
  3838  0234  1D03               	btfss	3,2
  3839  0235  2A37               	goto	u631
  3840  0236  2A38               	goto	u630
  3841  0237                     u631:
  3842  0237  2A19               	goto	l1465
  3843  0238                     u630:
  3844  0238                     l1475:
  3845  0238  0876               	movf	___lwdiv@quotient+1,w
  3846  0239  00F1               	movwf	?___lwdiv+1
  3847  023A  0875               	movf	___lwdiv@quotient,w
  3848  023B  00F0               	movwf	?___lwdiv
  3849  023C                     l751:
  3850  023C  0008               	return
  3851  023D                     __end_of___lwdiv:
  3852                           
  3853                           	psect	text8
  3854  02E8                     __ptext8:	
  3855 ;; *************** function _SYSTEM_Initialize *****************
  3856 ;; Defined at:
  3857 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3871 ;;      Params:         0       0       0       0
  3872 ;;      Locals:         0       0       0       0
  3873 ;;      Temps:          0       0       0       0
  3874 ;;      Totals:         0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 6
  3878 ;; This function calls:
  3879 ;;		_EXT_INT_Initialize
  3880 ;;		_OSCILLATOR_Initialize
  3881 ;;		_PIN_MANAGER_Initialize
  3882 ;;		_PMD_Initialize
  3883 ;;		_TMR0_Initialize
  3884 ;;		_WDT_Initialize
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _SYSTEM_Initialize
  3892  02E8                     _SYSTEM_Initialize:
  3893  02E8                     l1479:	
  3894                           ;incstack = 0
  3895                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3896                           
  3897                           
  3898                           ;mcc_generated_files/mcc.c: 51:     PMD_Initialize();
  3899  02E8  3183  2323  3182   	fcall	_PMD_Initialize
  3900  02EB                     l1481:
  3901                           
  3902                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  3903  02EB  3182  2261  3182   	fcall	_PIN_MANAGER_Initialize
  3904  02EE                     l1483:
  3905                           
  3906                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  3907  02EE  3183  232B  3182   	fcall	_OSCILLATOR_Initialize
  3908  02F1                     l1485:
  3909                           
  3910                           ;mcc_generated_files/mcc.c: 54:     WDT_Initialize();
  3911  02F1  3183  234B  3182   	fcall	_WDT_Initialize
  3912  02F4                     l1487:
  3913                           
  3914                           ;mcc_generated_files/mcc.c: 55:     EXT_INT_Initialize();
  3915  02F4  3183  2309  3182   	fcall	_EXT_INT_Initialize
  3916  02F7                     l1489:
  3917                           
  3918                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  3919  02F7  3182  22D4  3182   	fcall	_TMR0_Initialize
  3920  02FA                     l39:
  3921  02FA  0008               	return
  3922  02FB                     __end_of_SYSTEM_Initialize:
  3923                           
  3924                           	psect	text9
  3925  034B                     __ptext9:	
  3926 ;; *************** function _WDT_Initialize *****************
  3927 ;; Defined at:
  3928 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3942 ;;      Params:         0       0       0       0
  3943 ;;      Locals:         0       0       0       0
  3944 ;;      Temps:          0       0       0       0
  3945 ;;      Totals:         0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 4
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_SYSTEM_Initialize
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _WDT_Initialize
  3958  034B                     _WDT_Initialize:
  3959  034B                     l1351:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _WDT_Initialize: [wreg]
  3962                           
  3963                           
  3964                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x18;
  3965  034B  3018               	movlw	24
  3966  034C  0021               	movlb	1	; select bank1
  3967  034D  0097               	movwf	23	;volatile
  3968  034E                     l45:
  3969  034E  0008               	return
  3970  034F                     __end_of_WDT_Initialize:
  3971                           
  3972                           	psect	text10
  3973  02D4                     __ptext10:	
  3974 ;; *************** function _TMR0_Initialize *****************
  3975 ;; Defined at:
  3976 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3990 ;;      Params:         0       0       0       0
  3991 ;;      Locals:         0       0       0       0
  3992 ;;      Temps:          0       0       0       0
  3993 ;;      Totals:         0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 5
  3997 ;; This function calls:
  3998 ;;		_TMR0_SetInterruptHandler
  3999 ;; This function is called by:
  4000 ;;		_SYSTEM_Initialize
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _TMR0_Initialize
  4006  02D4                     _TMR0_Initialize:
  4007  02D4                     l1359:	
  4008                           ;incstack = 0
  4009                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4010                           
  4011                           
  4012                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x62;
  4013  02D4  3062               	movlw	98
  4014  02D5  0020               	movlb	0	; select bank0
  4015  02D6  0098               	movwf	24	;volatile
  4016                           
  4017                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x4F;
  4018  02D7  304F               	movlw	79
  4019  02D8  0096               	movwf	22	;volatile
  4020  02D9                     l1361:
  4021                           
  4022                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  4023  02D9  0195               	clrf	21	;volatile
  4024  02DA                     l1363:
  4025                           
  4026                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  4027  02DA  1290               	bcf	16,5	;volatile
  4028  02DB                     l1365:
  4029                           
  4030                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  4031  02DB  0021               	movlb	1	; select bank1
  4032  02DC  1690               	bsf	16,5	;volatile
  4033  02DD                     l1367:
  4034                           
  4035                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4036  02DD  3052               	movlw	low _TMR0_DefaultInterruptHandler
  4037  02DE  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4038  02DF  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4039  02E0  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4040  02E1  3183  2339  3182   	fcall	_TMR0_SetInterruptHandler
  4041  02E4                     l1369:
  4042                           
  4043                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x84;
  4044  02E4  3084               	movlw	132
  4045  02E5  0020               	movlb	0	; select bank0
  4046  02E6  0097               	movwf	23	;volatile
  4047  02E7                     l107:
  4048  02E7  0008               	return
  4049  02E8                     __end_of_TMR0_Initialize:
  4050                           
  4051                           	psect	text11
  4052  0339                     __ptext11:	
  4053 ;; *************** function _TMR0_SetInterruptHandler *****************
  4054 ;; Defined at:
  4055 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  4058 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4070 ;;      Params:         2       0       0       0
  4071 ;;      Locals:         0       0       0       0
  4072 ;;      Temps:          0       0       0       0
  4073 ;;      Totals:         2       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 4
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_TMR0_Initialize
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _TMR0_SetInterruptHandler
  4086  0339                     _TMR0_SetInterruptHandler:
  4087  0339                     l1281:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4090                           
  4091                           
  4092                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  4093  0339  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4094  033A  0020               	movlb	0	; select bank0
  4095  033B  00C3               	movwf	_TMR0_InterruptHandler+1
  4096  033C  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4097  033D  00C2               	movwf	_TMR0_InterruptHandler
  4098  033E                     l129:
  4099  033E  0008               	return
  4100  033F                     __end_of_TMR0_SetInterruptHandler:
  4101                           
  4102                           	psect	text12
  4103  0323                     __ptext12:	
  4104 ;; *************** function _PMD_Initialize *****************
  4105 ;; Defined at:
  4106 ;;		line 79 in file "mcc_generated_files/mcc.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		status,2
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4120 ;;      Params:         0       0       0       0
  4121 ;;      Locals:         0       0       0       0
  4122 ;;      Temps:          0       0       0       0
  4123 ;;      Totals:         0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 4
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_SYSTEM_Initialize
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _PMD_Initialize
  4136  0323                     _PMD_Initialize:
  4137  0323                     l1321:	
  4138                           ;incstack = 0
  4139                           ; Regs used in _PMD_Initialize: [status,2]
  4140                           
  4141                           
  4142                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  4143  0323  0032               	movlb	18	; select bank18
  4144  0324  0191               	clrf	17	;volatile
  4145                           
  4146                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  4147  0325  0192               	clrf	18	;volatile
  4148                           
  4149                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  4150  0326  0193               	clrf	19	;volatile
  4151                           
  4152                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  4153  0327  0194               	clrf	20	;volatile
  4154                           
  4155                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  4156  0328  0195               	clrf	21	;volatile
  4157                           
  4158                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  4159  0329  0196               	clrf	22	;volatile
  4160  032A                     l48:
  4161  032A  0008               	return
  4162  032B                     __end_of_PMD_Initialize:
  4163                           
  4164                           	psect	text13
  4165  0261                     __ptext13:	
  4166 ;; *************** function _PIN_MANAGER_Initialize *****************
  4167 ;; Defined at:
  4168 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4182 ;;      Params:         0       0       0       0
  4183 ;;      Locals:         0       0       0       0
  4184 ;;      Temps:          0       0       0       0
  4185 ;;      Totals:         0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 4
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_SYSTEM_Initialize
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _PIN_MANAGER_Initialize
  4198  0261                     _PIN_MANAGER_Initialize:
  4199  0261                     l1323:	
  4200                           ;incstack = 0
  4201                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4202                           
  4203                           
  4204                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4205  0261  0022               	movlb	2	; select bank2
  4206  0262  018C               	clrf	12	;volatile
  4207                           
  4208                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  4209  0263  018E               	clrf	14	;volatile
  4210  0264                     l1325:
  4211                           
  4212                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x05;
  4213  0264  3005               	movlw	5
  4214  0265  0021               	movlb	1	; select bank1
  4215  0266  008C               	movwf	12	;volatile
  4216  0267                     l1327:
  4217                           
  4218                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x30;
  4219  0267  3030               	movlw	48
  4220  0268  008E               	movwf	14	;volatile
  4221                           
  4222                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  4223  0269  0023               	movlb	3	; select bank3
  4224  026A  018E               	clrf	14	;volatile
  4225  026B                     l1329:
  4226                           
  4227                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x10;
  4228  026B  3010               	movlw	16
  4229  026C  008C               	movwf	12	;volatile
  4230  026D                     l1331:
  4231                           
  4232                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  4233  026D  0024               	movlb	4	; select bank4
  4234  026E  018C               	clrf	12	;volatile
  4235                           
  4236                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x01;
  4237  026F  3001               	movlw	1
  4238  0270  008E               	movwf	14	;volatile
  4239                           
  4240                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x01;
  4241  0271  3001               	movlw	1
  4242  0272  0025               	movlb	5	; select bank5
  4243  0273  008C               	movwf	12	;volatile
  4244  0274                     l1333:
  4245                           
  4246                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  4247  0274  018E               	clrf	14	;volatile
  4248  0275                     l1335:
  4249                           
  4250                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  4251  0275  3037               	movlw	55
  4252  0276  0026               	movlb	6	; select bank6
  4253  0277  008C               	movwf	12	;volatile
  4254  0278                     l1337:
  4255                           
  4256                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  4257  0278  303F               	movlw	63
  4258  0279  008E               	movwf	14	;volatile
  4259  027A                     l1339:
  4260                           
  4261                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  4262  027A  303F               	movlw	63
  4263  027B  0027               	movlb	7	; select bank7
  4264  027C  008C               	movwf	12	;volatile
  4265  027D                     l1341:
  4266                           
  4267                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  4268  027D  303F               	movlw	63
  4269  027E  008E               	movwf	14	;volatile
  4270  027F                     l1343:
  4271                           
  4272                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  4273  027F  3002               	movlw	2
  4274  0280  003C               	movlb	28	; select bank28
  4275  0281  0090               	movwf	16	;volatile
  4276  0282                     l81:
  4277  0282  0008               	return
  4278  0283                     __end_of_PIN_MANAGER_Initialize:
  4279                           
  4280                           	psect	text14
  4281  032B                     __ptext14:	
  4282 ;; *************** function _OSCILLATOR_Initialize *****************
  4283 ;; Defined at:
  4284 ;;		line 59 in file "mcc_generated_files/mcc.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4298 ;;      Params:         0       0       0       0
  4299 ;;      Locals:         0       0       0       0
  4300 ;;      Temps:          0       0       0       0
  4301 ;;      Totals:         0       0       0       0
  4302 ;;Total ram usage:        0 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 4
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_SYSTEM_Initialize
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function _OSCILLATOR_Initialize
  4314  032B                     _OSCILLATOR_Initialize:
  4315  032B                     l1345:	
  4316                           ;incstack = 0
  4317                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4318                           
  4319                           
  4320                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x00;
  4321  032B  0032               	movlb	18	; select bank18
  4322  032C  0199               	clrf	25	;volatile
  4323                           
  4324                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  4325  032D  019B               	clrf	27	;volatile
  4326                           
  4327                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  4328  032E  019D               	clrf	29	;volatile
  4329  032F                     l1347:
  4330                           
  4331                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x07;
  4332  032F  3007               	movlw	7
  4333  0330  009F               	movwf	31	;volatile
  4334  0331                     l1349:
  4335                           
  4336                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  4337  0331  019E               	clrf	30	;volatile
  4338  0332                     l42:
  4339  0332  0008               	return
  4340  0333                     __end_of_OSCILLATOR_Initialize:
  4341                           
  4342                           	psect	text15
  4343  0309                     __ptext15:	
  4344 ;; *************** function _EXT_INT_Initialize *****************
  4345 ;; Defined at:
  4346 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4360 ;;      Params:         0       0       0       0
  4361 ;;      Locals:         0       0       0       0
  4362 ;;      Temps:          0       0       0       0
  4363 ;;      Totals:         0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 5
  4367 ;; This function calls:
  4368 ;;		_INT_SetInterruptHandler
  4369 ;; This function is called by:
  4370 ;;		_SYSTEM_Initialize
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _EXT_INT_Initialize
  4376  0309                     _EXT_INT_Initialize:
  4377  0309                     l1353:	
  4378                           ;incstack = 0
  4379                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4380                           
  4381                           
  4382                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
  4383  0309  0020               	movlb	0	; select bank0
  4384  030A  1010               	bcf	16,0	;volatile
  4385                           
  4386                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
  4387  030B  140B               	bsf	11,0	;volatile
  4388  030C                     l1355:
  4389                           
  4390                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  4391  030C  3053               	movlw	low _INT_DefaultInterruptHandler
  4392  030D  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  4393  030E  3003               	movlw	high _INT_DefaultInterruptHandler
  4394  030F  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  4395  0310  3183  233F  3183   	fcall	_INT_SetInterruptHandler
  4396  0313                     l1357:
  4397                           
  4398                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
  4399  0313  0021               	movlb	1	; select bank1
  4400  0314  1410               	bsf	16,0	;volatile
  4401  0315                     l184:
  4402  0315  0008               	return
  4403  0316                     __end_of_EXT_INT_Initialize:
  4404                           
  4405                           	psect	text16
  4406  033F                     __ptext16:	
  4407 ;; *************** function _INT_SetInterruptHandler *****************
  4408 ;; Defined at:
  4409 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  4412 ;;		 -> INT_DefaultInterruptHandler(1), 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4424 ;;      Params:         2       0       0       0
  4425 ;;      Locals:         0       0       0       0
  4426 ;;      Temps:          0       0       0       0
  4427 ;;      Totals:         2       0       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_EXT_INT_Initialize
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _INT_SetInterruptHandler
  4440  033F                     _INT_SetInterruptHandler:
  4441  033F                     l1283:	
  4442                           ;incstack = 0
  4443                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  4444                           
  4445                           
  4446                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
  4447  033F  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  4448  0340  0020               	movlb	0	; select bank0
  4449  0341  00C1               	movwf	_INT_InterruptHandler+1
  4450  0342  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  4451  0343  00C0               	movwf	_INT_InterruptHandler
  4452  0344                     l178:
  4453  0344  0008               	return
  4454  0345                     __end_of_INT_SetInterruptHandler:
  4455                           
  4456                           	psect	intentry
  4457  0004                     __pintentry:	
  4458 ;; *************** function _INTERRUPT_InterruptManager *****************
  4459 ;; Defined at:
  4460 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4474 ;;      Params:         0       0       0       0
  4475 ;;      Locals:         0       0       0       0
  4476 ;;      Temps:          0       0       0       0
  4477 ;;      Totals:         0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 3
  4481 ;; This function calls:
  4482 ;;		_INT_ISR
  4483 ;;		_TMR0_ISR
  4484 ;;		_signal_handler
  4485 ;; This function is called by:
  4486 ;;		Interrupt level 1
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490  0004                     _INTERRUPT_InterruptManager:
  4491                           
  4492                           ;incstack = 0
  4493  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4494                           
  4495                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4496  0005  3180               	pagesel	$
  4497  0006                     i1l1567:
  4498                           
  4499                           ;mcc_generated_files/interrupt_manager.c: 57:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1){
  4500  0006  0021               	movlb	1	; select bank1
  4501  0007  1E90               	btfss	16,5	;volatile
  4502  0008  280A               	goto	u75_21
  4503  0009  280B               	goto	u75_20
  4504  000A                     u75_21:
  4505  000A  2819               	goto	i1l151
  4506  000B                     u75_20:
  4507  000B                     i1l1569:
  4508  000B  0020               	movlb	0	; select bank0
  4509  000C  1E90               	btfss	16,5	;volatile
  4510  000D  280F               	goto	u76_21
  4511  000E  2810               	goto	u76_20
  4512  000F                     u76_21:
  4513  000F  2819               	goto	i1l151
  4514  0010                     u76_20:
  4515  0010                     i1l1571:
  4516                           
  4517                           ;mcc_generated_files/interrupt_manager.c: 58:         TMR0_ISR();
  4518  0010  3182  22FB  3180   	fcall	_TMR0_ISR
  4519                           
  4520                           ;mcc_generated_files/interrupt_manager.c: 59:         signal_handler();
  4521  0013  3182  223D  3180   	fcall	_signal_handler
  4522  0016                     i1l1573:
  4523                           
  4524                           ;mcc_generated_files/interrupt_manager.c: 60:         timer_flag = 1;
  4525  0016  01FB               	clrf	_timer_flag
  4526  0017  0AFB               	incf	_timer_flag,f
  4527                           
  4528                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  4529  0018  282B               	goto	i1l158
  4530  0019                     i1l151:	
  4531                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1){
  4532                           
  4533  0019  0021               	movlb	1	; select bank1
  4534  001A  1C10               	btfss	16,0	;volatile
  4535  001B  281D               	goto	u77_21
  4536  001C  281E               	goto	u77_20
  4537  001D                     u77_21:
  4538  001D  282A               	goto	i1l155
  4539  001E                     u77_20:
  4540  001E                     i1l1575:
  4541  001E  0020               	movlb	0	; select bank0
  4542  001F  1C10               	btfss	16,0	;volatile
  4543  0020  2822               	goto	u78_21
  4544  0021  2823               	goto	u78_20
  4545  0022                     u78_21:
  4546  0022  282A               	goto	i1l155
  4547  0023                     u78_20:
  4548  0023                     i1l1577:
  4549                           
  4550                           ;mcc_generated_files/interrupt_manager.c: 64:         INT_ISR();
  4551  0023  3183  2345  3180   	fcall	_INT_ISR
  4552  0026                     i1l1579:
  4553                           
  4554                           ;mcc_generated_files/interrupt_manager.c: 65:         hall_flag = 1;
  4555  0026  0020               	movlb	0	; select bank0
  4556  0027  01BB               	clrf	_hall_flag
  4557  0028  0ABB               	incf	_hall_flag,f
  4558                           
  4559                           ;mcc_generated_files/interrupt_manager.c: 66:     }
  4560  0029  282B               	goto	i1l158
  4561  002A                     i1l155:	
  4562                           ;mcc_generated_files/interrupt_manager.c: 68:         while(1){}
  4563                           
  4564  002A  282A               	goto	i1l155
  4565  002B                     i1l158:
  4566  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4567  002C  0009               	retfie
  4568  002D                     __end_of_INTERRUPT_InterruptManager:
  4569                           
  4570                           	psect	text18
  4571  023D                     __ptext18:	
  4572 ;; *************** function _signal_handler *****************
  4573 ;; Defined at:
  4574 ;;		line 48 in file "motor.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4588 ;;      Params:         0       0       0       0
  4589 ;;      Locals:         0       0       0       0
  4590 ;;      Temps:          0       0       0       0
  4591 ;;      Totals:         0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_INTERRUPT_InterruptManager
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _signal_handler
  4603  023D                     _signal_handler:
  4604  023D                     i1l1497:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _signal_handler: [wreg+status,2+status,0]
  4607                           
  4608                           
  4609                           ;motor.c: 49:     if((PORTCbits.RC4 == 1)&&(speed_high<20U)){
  4610  023D  0020               	movlb	0	; select bank0
  4611  023E  1E0E               	btfss	14,4	;volatile
  4612  023F  2A41               	goto	u65_21
  4613  0240  2A42               	goto	u65_20
  4614  0241                     u65_21:
  4615  0241  2A50               	goto	i1l1503
  4616  0242                     u65_20:
  4617  0242                     i1l1499:
  4618  0242  3000               	movlw	0
  4619  0243  0234               	subwf	_speed_high+1,w
  4620  0244  3014               	movlw	20
  4621  0245  1903               	skipnz
  4622  0246  0233               	subwf	_speed_high,w
  4623  0247  1803               	skipnc
  4624  0248  2A4A               	goto	u66_21
  4625  0249  2A4B               	goto	u66_20
  4626  024A                     u66_21:
  4627  024A  2A50               	goto	i1l1503
  4628  024B                     u66_20:
  4629  024B                     i1l1501:
  4630                           
  4631                           ;motor.c: 50:         speed_high++;
  4632  024B  3001               	movlw	1
  4633  024C  07B3               	addwf	_speed_high,f
  4634  024D  3000               	movlw	0
  4635  024E  3DB4               	addwfc	_speed_high+1,f
  4636                           
  4637                           ;motor.c: 51:     }
  4638  024F  2A60               	goto	i1l282
  4639  0250                     i1l1503:
  4640                           
  4641                           ;motor.c: 53:         if((speed_high != 0)&&(PORTCbits.RC4 == 0)){
  4642  0250  0833               	movf	_speed_high,w
  4643  0251  0434               	iorwf	_speed_high+1,w
  4644  0252  1903               	btfsc	3,2
  4645  0253  2A55               	goto	u67_21
  4646  0254  2A56               	goto	u67_20
  4647  0255                     u67_21:
  4648  0255  2A60               	goto	i1l282
  4649  0256                     u67_20:
  4650  0256                     i1l1505:
  4651  0256  1A0E               	btfsc	14,4	;volatile
  4652  0257  2A59               	goto	u68_21
  4653  0258  2A5A               	goto	u68_20
  4654  0259                     u68_21:
  4655  0259  2A60               	goto	i1l282
  4656  025A                     u68_20:
  4657  025A                     i1l1507:
  4658                           
  4659                           ;motor.c: 54:             speed_stimer = speed_high;
  4660  025A  0834               	movf	_speed_high+1,w
  4661  025B  00B6               	movwf	_speed_stimer+1
  4662  025C  0833               	movf	_speed_high,w
  4663  025D  00B5               	movwf	_speed_stimer
  4664  025E                     i1l1509:
  4665                           
  4666                           ;motor.c: 55:             speed_high = 0U;
  4667  025E  01B3               	clrf	_speed_high
  4668  025F  01B4               	clrf	_speed_high+1
  4669  0260                     i1l282:
  4670  0260  0008               	return
  4671  0261                     __end_of_signal_handler:
  4672                           
  4673                           	psect	text19
  4674  02FB                     __ptext19:	
  4675 ;; *************** function _TMR0_ISR *****************
  4676 ;; Defined at:
  4677 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4691 ;;      Params:         0       0       0       0
  4692 ;;      Locals:         0       0       0       0
  4693 ;;      Temps:          0       0       0       0
  4694 ;;      Totals:         0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 1
  4698 ;; This function calls:
  4699 ;;		Absolute function
  4700 ;;		_TMR0_DefaultInterruptHandler
  4701 ;; This function is called by:
  4702 ;;		_INTERRUPT_InterruptManager
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _TMR0_ISR
  4708  02FB                     _TMR0_ISR:
  4709  02FB                     i1l1491:	
  4710                           ;incstack = 0
  4711                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4712                           
  4713                           
  4714                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  4715  02FB  0020               	movlb	0	; select bank0
  4716  02FC  1290               	bcf	16,5	;volatile
  4717  02FD                     i1l1493:
  4718                           
  4719                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  4720  02FD  0842               	movf	_TMR0_InterruptHandler,w
  4721  02FE  0443               	iorwf	_TMR0_InterruptHandler+1,w
  4722  02FF  1903               	btfsc	3,2
  4723  0300  2B02               	goto	u64_21
  4724  0301  2B03               	goto	u64_20
  4725  0302                     u64_21:
  4726  0302  2B08               	goto	i1l126
  4727  0303                     u64_20:
  4728  0303                     i1l1495:
  4729                           
  4730                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  4731  0303  0843               	movf	_TMR0_InterruptHandler+1,w
  4732  0304  008A               	movwf	10
  4733  0305  0842               	movf	_TMR0_InterruptHandler,w
  4734  0306  000A               	callw
  4735  0307  3182               	pagesel	$
  4736  0308                     i1l126:
  4737  0308  0008               	return
  4738  0309                     __end_of_TMR0_ISR:
  4739                           
  4740                           	psect	text20
  4741  0352                     __ptext20:	
  4742 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4743 ;; Defined at:
  4744 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		None
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4758 ;;      Params:         0       0       0       0
  4759 ;;      Locals:         0       0       0       0
  4760 ;;      Temps:          0       0       0       0
  4761 ;;      Totals:         0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used: 1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_TMR0_Initialize
  4768 ;;		_TMR0_ISR
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _TMR0_DefaultInterruptHandler
  4774  0352                     _TMR0_DefaultInterruptHandler:
  4775  0352                     i1l132:	
  4776                           ;incstack = 0
  4777                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4778                           
  4779  0352  0008               	return
  4780  0353                     __end_of_TMR0_DefaultInterruptHandler:
  4781                           
  4782                           	psect	text21
  4783  0345                     __ptext21:	
  4784 ;; *************** function _INT_ISR *****************
  4785 ;; Defined at:
  4786 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, pclath, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4800 ;;      Params:         0       0       0       0
  4801 ;;      Locals:         0       0       0       0
  4802 ;;      Temps:          0       0       0       0
  4803 ;;      Totals:         0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 2
  4807 ;; This function calls:
  4808 ;;		_INT_CallBack
  4809 ;; This function is called by:
  4810 ;;		_INTERRUPT_InterruptManager
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           
  4815                           ;psect for function _INT_ISR
  4816  0345                     _INT_ISR:
  4817  0345                     i1l1511:	
  4818                           ;incstack = 0
  4819                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  4820                           
  4821                           
  4822                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
  4823  0345  0020               	movlb	0	; select bank0
  4824  0346  1010               	bcf	16,0	;volatile
  4825  0347                     i1l1513:
  4826                           
  4827                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
  4828  0347  3183  2316  3183   	fcall	_INT_CallBack
  4829  034A                     i1l171:
  4830  034A  0008               	return
  4831  034B                     __end_of_INT_ISR:
  4832                           
  4833                           	psect	text22
  4834  0316                     __ptext22:	
  4835 ;; *************** function _INT_CallBack *****************
  4836 ;; Defined at:
  4837 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, pclath, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4851 ;;      Params:         0       0       0       0
  4852 ;;      Locals:         0       0       0       0
  4853 ;;      Temps:          0       0       0       0
  4854 ;;      Totals:         0       0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 1
  4858 ;; This function calls:
  4859 ;;		Absolute function
  4860 ;;		_INT_DefaultInterruptHandler
  4861 ;; This function is called by:
  4862 ;;		_INT_ISR
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _INT_CallBack
  4868  0316                     _INT_CallBack:
  4869  0316                     i1l1371:	
  4870                           ;incstack = 0
  4871                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4872                           
  4873                           
  4874                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
  4875  0316  0020               	movlb	0	; select bank0
  4876  0317  0840               	movf	_INT_InterruptHandler,w
  4877  0318  0441               	iorwf	_INT_InterruptHandler+1,w
  4878  0319  1903               	btfsc	3,2
  4879  031A  2B1C               	goto	u48_21
  4880  031B  2B1D               	goto	u48_20
  4881  031C                     u48_21:
  4882  031C  2B22               	goto	i1l175
  4883  031D                     u48_20:
  4884  031D                     i1l1373:
  4885                           
  4886                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
  4887  031D  0841               	movf	_INT_InterruptHandler+1,w
  4888  031E  008A               	movwf	10
  4889  031F  0840               	movf	_INT_InterruptHandler,w
  4890  0320  000A               	callw
  4891  0321  3183               	pagesel	$
  4892  0322                     i1l175:
  4893  0322  0008               	return
  4894  0323                     __end_of_INT_CallBack:
  4895                           
  4896                           	psect	text23
  4897  0353                     __ptext23:	
  4898 ;; *************** function _INT_DefaultInterruptHandler *****************
  4899 ;; Defined at:
  4900 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4914 ;;      Params:         0       0       0       0
  4915 ;;      Locals:         0       0       0       0
  4916 ;;      Temps:          0       0       0       0
  4917 ;;      Totals:         0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_EXT_INT_Initialize
  4924 ;;		_INT_CallBack
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _INT_DefaultInterruptHandler
  4930  0353                     _INT_DefaultInterruptHandler:
  4931  0353                     i1l181:	
  4932                           ;incstack = 0
  4933                           ; Regs used in _INT_DefaultInterruptHandler: []
  4934                           
  4935  0353  0008               	return
  4936  0354                     __end_of_INT_DefaultInterruptHandler:
  4937  007E                     btemp	set	126	;btemp
  4938  007E                     int$flags	set	126
  4939  007E                     wtemp0	set	126
  4940                           
  4941                           	psect	config
  4942                           
  4943                           ;Config register CONFIG1 @ 0x8007
  4944                           ;	FEXTOSC External Oscillator mode Selection bits
  4945                           ;	FEXTOSC = OFF, Oscillator not enabled
  4946                           ;	Power-up default value for COSC bits
  4947                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  4948                           ;	Clock Out Enable bit
  4949                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  4950                           ;	Clock Switch Enable bit
  4951                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4952                           ;	Fail-Safe Clock Monitor Enable
  4953                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4954  8007                     	org	32775
  4955  8007  3F8C               	dw	16268
  4956                           
  4957                           ;Config register CONFIG2 @ 0x8008
  4958                           ;	Master Clear Enable bit
  4959                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  4960                           ;	Power-up Timer Enable bit
  4961                           ;	PWRTE = OFF, PWRT disabled
  4962                           ;	Watchdog Timer Enable bits
  4963                           ;	WDTE = SLEEP, WDT enabled while running and disabled in SLEEP/IDLE; SWDTEN is ignored
  4964                           ;	Low-power BOR enable bit
  4965                           ;	LPBOREN = OFF, ULPBOR disabled
  4966                           ;	Brown-out Reset Enable bits
  4967                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  4968                           ;	Brown-out Reset Voltage selection bit
  4969                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  4970                           ;	PPSLOCK bit One-Way Set Enable bit
  4971                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  4972                           ;	Stack Overflow/Underflow Reset Enable bit
  4973                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4974                           ;	Debugger enable bit
  4975                           ;	DEBUG = OFF, Background debugger disabled
  4976  8008                     	org	32776
  4977  8008  3FFB               	dw	16379
  4978                           
  4979                           ;Config register CONFIG3 @ 0x8009
  4980                           ;	User NVM self-write protection bits
  4981                           ;	WRT = OFF, Write protection off
  4982                           ;	Low Voltage Programming Enable bit
  4983                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  4984  8009                     	org	32777
  4985  8009  3FFF               	dw	16383
  4986                           
  4987                           ;Config register CONFIG4 @ 0x800A
  4988                           ;	User NVM Program Memory Code Protection bit
  4989                           ;	CP = OFF, User NVM code protection disabled
  4990                           ;	Data NVM Memory Code Protection bit
  4991                           ;	CPD = OFF, Data NVM code protection disabled
  4992  800A                     	org	32778
  4993  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         30
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_motor_init
    _motor_handler->_motor_init
    _motor_handler->_speed_handler
    _speed_handler->___wmul
    _motor_init->_step_handler
    _hall_handler->___lwdiv
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1077
                  _SYSTEM_Initialize
                       _hall_handler
                      _motor_handler
                         _motor_init
 ---------------------------------------------------------------------------------
 (1) _motor_handler                                        0     0      0     429
                         _motor_init
                      _speed_handler
                       _step_handler
 ---------------------------------------------------------------------------------
 (2) _speed_handler                                        4     4      0     291
                                              6 COMMON     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           8     8      0     138
                                              2 COMMON     8     8      0
                       _step_handler
 ---------------------------------------------------------------------------------
 (2) _step_handler                                         3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _hall_handler                                         0     0      0     314
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
                     _signal_handler
 ---------------------------------------------------------------------------------
 (5) _signal_handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _hall_handler
     ___lwdiv
   _motor_handler
     _motor_init
       _step_handler
     _speed_handler
       ___wmul
     _step_handler
   _motor_init

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _signal_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      25       6       46.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      33      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 07 17:02:59 2023

                                      l42 0332                                        l45 034E  
                                      l39 02FA                                        l48 032A  
                                      l81 0282                       ___wmul@multiplicand 0072  
                             _step_counts 003C                                       l107 02E7  
                                     l302 00C2                                       l312 015B  
                                     l129 033E                                       l313 0163  
                                     l314 016B                                       l315 0173  
                                     l316 017B                                       l308 0149  
                                     l319 01A6                                       l184 0315  
                                     l273 0139                                       l178 0344  
                                     l276 02D3                                       l471 028D  
                                     l473 02A1                                       l289 0200  
                                     l751 023C                                       u410 013F  
                                     u411 013E                                       u420 0155  
                                     u500 00F1                                       u421 0154  
                                     u501 00F0                                       u430 0187  
                                     u510 0114                                       u431 0186  
                                     u511 0113                                       u520 0138  
                                     u440 0289                                       u521 0137  
                                     u441 0288                                       u610 0228  
                                     u530 01CA                                       u611 0227  
                                     u531 01C9                                       u540 01D5  
                                     u700 005E                                       u605 021A  
                                     u541 01D4                                       u701 005D  
                                     u630 0238                                       u470 029D  
                                     u710 006D                                       u631 0237  
                                     u615 0224                                       u471 029C  
                                     u455 028E                                       u535 01C6  
                                     u711 006C                                       u720 0080  
                                     u800 02B9                                       u625 022E  
                                     u465 0293                                       u545 01D1  
                                     u721 007F                                       u801 02B8  
                                     u570 0209                                       u490 00DB  
                                     u730 009E                                       u571 0208  
                                     u491 00DA                                       u555 01DC  
                                     u731 009D                                       u715 0069  
                                     u740 00BC                                       u565 01F2  
                                     u741 00BB                                       u590 0219  
                                     u591 0218                                       u585 020D  
                                     u817 00DE                                       u745 00B8  
                                     u690 0059                                       u827 00F6  
                                     u691 0058                                       u837 0100  
                                     u790 02B0                                       u847 0119  
                                     u791 02AF                                       u857 0124  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                            _step_handler 013A                           ??_speed_handler 0076  
                                    l1301 018A                                      l1311 0289  
                                    l1321 0323                                      l1401 00E8  
                                    l1313 0292                                      l1331 026D  
                                    l1323 0261                                      l1411 00FF  
                                    l1403 00F1                                      l1315 0297  
                                    l1307 0283                                      l1341 027D  
                                    l1333 0274                                      l1325 0264  
                                    l1413 0103                                      l1405 00FD  
                                    l1421 0121                                      l1317 029D  
                                    l1309 0285                                      l1343 027F  
                                    l1335 0275                                      l1327 0267  
                                    l1351 034B                                      l1431 012B  
                                    l1415 0107                                      l1353 0309  
                                    l1345 032B                                      l1337 0278  
                                    l1329 026B                                      l1281 0339  
                                    l1361 02D9                                      l1433 012F  
                                    l1417 010B                                      l1441 01AE  
                                    l1521 0059                                      l1283 033F  
                                    l1355 030C                                      l1347 032F  
                                    l1339 027A                                      l1363 02DA  
                                    l1515 02C0                                      l1291 0150  
                                    l1427 0123                                      l1419 0114  
                                    l1451 01EB                                      l1443 01BF  
                                    l1531 006F                                      l1523 005E  
                                    l1357 0313                                      l1349 0331  
                                    l1365 02DB                                      l1461 0211  
                                    l1453 0201                                      l1517 02D1  
                                    l1621 0192                                      l1293 0155  
                                    l1285 013A                                      l1429 0127  
                                    l1381 00CE                                      l1437 01A7  
                                    l1541 008C                                      l1533 0072  
                                    l1525 005F                                      l1367 02DD  
                                    l1359 02D4                                      l1471 022D  
                                    l1463 0215                                      l1455 0203  
                                    l1295 0182                                      l1287 013F  
                                    l1383 00D2                                      l1375 00C3  
                                    l1447 01CB                                      l1439 01A7  
                                    l1551 00A0                                      l1543 0090  
                                    l1527 0062                                      l1535 0077  
                                    l1519 0047                                      l1369 02E4  
                                    l1481 02EB                                      l1473 0232  
                                    l1465 0219                                      l1457 0209  
                                    l1297 0187                                      l1289 0145  
                                    l1385 00D4                                      l1377 00C6  
                                    l1449 01D5                                      l1561 00B2  
                                    l1553 00A3                                      l1545 0094  
                                    l1537 0080                                      l1529 006D  
                                    l1483 02EE                                      l1467 0228  
                                    l1459 020C                                      l1475 0238  
                                    l1395 00DD                                      l1387 00D6  
                                    l1379 00CA                                      l1563 00BC  
                                    l1555 00A6                                      l1539 0087  
                                    l1547 0099                                      l1485 02F1  
                                    l1469 022C                                      l1397 00E0  
                                    l1389 00DB                                      l1565 00BE  
                                    l1557 00AA                                      l1549 009E  
                                    l1581 02A2                                      l1487 02F4  
                                    l1479 02E8                                      l1399 00E4  
                                    l1559 00AE                                      l1591 02B0  
                                    l1583 02A5                                      l1489 02F7  
                                    l1593 02B1                                      l1585 02A6  
                                    l1595 02B4                                      l1587 02A7  
                                    l1597 02B9                                      l1589 02AA  
                                    l1599 02BA                                      _LATA 010C  
                         __end_of_INT_ISR 034B                                      _LATC 010E  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _main 02A2                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E       __end_of_INT_DefaultInterruptHandler 0354  
             _INT_DefaultInterruptHandler 0353                                      start 002D  
         __end_of_INT_SetInterruptHandler 0345                   __end_of_TMR0_Initialize 02E8  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0008  
           __end_of_OSCILLATOR_Initialize 0333                                     ?_main 0070  
                         __end_of___lwdiv 023D                                     i1l132 0352  
                                   i1l126 0308                                     i1l151 0019  
                                   i1l171 034A                                     i1l155 002A  
                                   i1l181 0353                                     i1l158 002B  
                                   i1l175 0322                                     i1l282 0260  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     u48_20 031D  
                                   u64_20 0303                                     u48_21 031C  
                                   u64_21 0302                                     u65_20 0242  
                                   u65_21 0241                                     _TRISA 008C  
                                   _TRISC 008E                                     u66_20 024B  
                                   u66_21 024A                                     u67_20 0256  
                                   u75_20 000B                                     u67_21 0255  
                                   u75_21 000A                                     u68_20 025A  
                                   u76_20 0010                                     u68_21 0259  
                                   u76_21 000F                                     u77_20 001E  
                                   u77_21 001D                                     u78_20 0023  
                                   u78_21 0022         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0070                          __end_of_TMR0_ISR 0309  
                          _WDT_Initialize 034B                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __initialization 002E                              __end_of_main 02C0  
             ?_INTERRUPT_InterruptManager 0070                      __end_of_hall_handler 02D4  
                                  ??_main 007A                    __end_of_WDT_Initialize 034F  
                               ??_INT_ISR 0070                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _T0CON0 0017  
                                  _T0CON1 0018                                    i1l1501 024B  
                                  i1l1511 0345                                    i1l1503 0250  
                                  i1l1513 0347                                    i1l1505 0256  
                                  _ODCONA 028C                                    i1l1371 0316  
                                  i1l1507 025A                                    _ODCONC 028E  
                                  i1l1373 031D                                    i1l1509 025E  
                                  i1l1491 02FB                                    i1l1571 0010  
                                  i1l1493 02FD                                    i1l1573 0016  
                                  i1l1495 0303                                    i1l1575 001E  
                                  i1l1567 0006                                    i1l1497 023D  
                                  i1l1577 0023                                    i1l1569 000B  
                                  i1l1499 0242                                    i1l1579 0026  
                                  _INLVLA 038C                                    _INLVLC 038E  
                                  _INTPPS 0E10                            _step_errorlast 0025  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                speed_handler@speed_error 0078                                    ___wmul 0283  
                               ??___lwdiv 0074                          ?_TMR0_Initialize 0070  
                           ?_INT_CallBack 0070                            _PMD_Initialize 0323  
                            __pdataCOMMON 007C                           ?_WDT_Initialize 0070  
        __size_of_INT_SetInterruptHandler 0006   INT_SetInterruptHandler@InterruptHandler 0070  
TMR0_SetInterruptHandler@InterruptHandler 0070                         _SYSTEM_Initialize 02E8  
                 __end_of__initialization 0044                        ?_SYSTEM_Initialize 0070  
                 __size_of_signal_handler 0024                            __pcstackCOMMON 0070  
                            __pidataBANK0 0351                       ??_SYSTEM_Initialize 0072  
                               ?_TMR0_ISR 0070                            ??_INT_CallBack 0070  
                  __end_of_PMD_Initialize 032B               __size_of_EXT_INT_Initialize 000D  
               __end_of_SYSTEM_Initialize 02FB                                __pbssBANK0 0020  
                              __pmaintext 02A2                     __size_of_hall_handler 0014  
                   __end_of_motor_handler 00C3          __end_of_TMR0_SetInterruptHandler 033F  
                                 ?___wmul 0070                                ??_TMR0_ISR 0070  
                              __pintentry 0004                                _hall_value 003E  
                              _hall_timer 002B                           ?_PMD_Initialize 0070  
                                 _INT_ISR 0345                                   _OSCCON1 0919  
                                 _OSCCON3 091B                                   _OSCTUNE 091E  
                                 _SLRCONA 030C                                   _SLRCONC 030E  
                   __end_of_speed_handler 0201                              _hall_handler 02C0  
                                 _StepNum 0044                           __size_of___wmul 001F  
                                 ___lwdiv 0201                                   __ptext1 0047  
                                 __ptext2 01A7                                   __ptext3 0283  
                                 __ptext4 00C3                                   __ptext5 013A  
                                 __ptext6 02C0                                   __ptext7 0201  
                                 __ptext8 02E8                                   __ptext9 034B  
                   _OSCILLATOR_Initialize 032B                  ??_PIN_MANAGER_Initialize 0070  
                 _INT_SetInterruptHandler 033F                __size_of_SYSTEM_Initialize 0013  
                                 clrloop0 0334                      end_of_initialization 0044  
                    __end_of_INT_CallBack 0323                            _signal_handler 023D  
                             motor_init@i 0074                                _motor_init 00C3  
                              _speed_high 0033                                _speed_plow 002D  
                              _speed_prev 0039                          ??_WDT_Initialize 0070  
                              _timer_flag 007B                  _TMR0_SetInterruptHandler 0339  
                               _PORTCbits 000E                                 _TRISCbits 008E  
                              _step_error 0027                                _step_timer 0029  
                              _rx_pointer 0038                    __end_of_signal_handler 0261  
                          __end_of___wmul 02A2                             __pidataCOMMON 034F  
                       __size_of_TMR0_ISR 000E                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 0072                       start_initialization 002E  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0022  
                           ?_step_handler 0070                           motor_init@i_422 0076  
                         motor_init@i_423 0078                           ?_signal_handler 0070  
            ?_INT_DefaultInterruptHandler 0070                          ??_PMD_Initialize 0070  
                                ??___wmul 0074                               ?_motor_init 0070  
                             __pdataBANK0 0044                __end_of_EXT_INT_Initialize 0316  
                             __pbssCOMMON 007A                                 ___latbits 0000  
                          ??_step_handler 0070                                  ?_INT_ISR 0070  
                   __size_of_INT_CallBack 000D                     _TMR0_InterruptHandler 0042  
                               __pnvBANK0 003C                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0261             ??_INT_DefaultInterruptHandler 0070  
                               _hall_flag 003B                                  ?___lwdiv 0070  
                   step_handler@direction 0070              ??_INTERRUPT_InterruptManager 0070  
                            _INT_CallBack 0316                          ___lwdiv@quotient 0075  
                  __size_of_motor_handler 007C                       __size_of_motor_init 0077  
                       ??_TMR0_Initialize 0072                            ___wmul@product 0074  
                                _LATAbits 010C                                  _LATCbits 010E  
                               clear_ram0 0333                                  _PIE0bits 0090  
     __size_of_INTERRUPT_InterruptManager 0029                ??_TMR0_SetInterruptHandler 0072  
                                _PIR0bits 0010                                 _rev_timer 0037  
                               _motor_dir 007A                                  _TMR0_ISR 02FB  
                               _speed_low 0031                    __size_of_speed_handler 005A  
                       ___wmul@multiplier 0070      __size_of_INT_DefaultInterruptHandler 0001  
                        __size_of_INT_ISR 0006                      __end_of_step_handler 01A7  
                           _motor_handler 0047                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___lwdiv 003C                                _ANSELCbits 018E  
                              _T0CON0bits 0017                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                          ??_signal_handler 0070  
                                __ptext10 02D4                                  __ptext11 0339  
                                __ptext20 0352                                  __ptext12 0323  
                                __ptext21 0345                                  __ptext13 0261  
                                __ptext22 0316                                  __ptext14 032B  
                                __ptext23 0353                                  __ptext15 0309  
                                __ptext16 033F                                  __ptext18 023D  
                                __ptext19 02FB                             _speed_handler 01A7  
                           __size_of_main 001E      __end_of_TMR0_DefaultInterruptHandler 0353  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0352  
                          ?_motor_handler 0070                                  int$flags 007E  
                            ??_motor_init 0072                                  _rx_array 0020  
      __end_of_INTERRUPT_InterruptManager 002D                _INTERRUPT_InterruptManager 0004  
                                _stringer 003A                                _INTCONbits 000B  
                    _INT_InterruptHandler 0040                        _EXT_INT_Initialize 0309  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                          ?_speed_handler 0070                             ?_hall_handler 0070  
                      __end_of_motor_init 013A                   ?_PIN_MANAGER_Initialize 0070  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                            _speed_stimer 0035                  ?_INT_SetInterruptHandler 0070  
                    ??_EXT_INT_Initialize 0072                           _TMR0_Initialize 02D4  
                             _speed_phigh 002F                               _speed_value 007C  
                          ??_hall_handler 0078            __end_of_PIN_MANAGER_Initialize 0283  
                   __size_of_step_handler 006D                           ??_motor_handler 007A  
