

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 10 13:54:41 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF18323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.30
    40                           ; Generated 15/09/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16LF18323 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0097                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010E                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  018C                     	;# 
   133  018E                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020E                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  028C                     	;# 
   178  028E                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0297                     	;# 
   188  0298                     	;# 
   189  030C                     	;# 
   190  030E                     	;# 
   191  038C                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0397                     	;# 
   197  0398                     	;# 
   198  0399                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0498                     	;# 
   205  0498                     	;# 
   206  0499                     	;# 
   207  049A                     	;# 
   208  049B                     	;# 
   209  049B                     	;# 
   210  049C                     	;# 
   211  049D                     	;# 
   212  049E                     	;# 
   213  049F                     	;# 
   214  0617                     	;# 
   215  0618                     	;# 
   216  0619                     	;# 
   217  0619                     	;# 
   218  061A                     	;# 
   219  061B                     	;# 
   220  061C                     	;# 
   221  061C                     	;# 
   222  0691                     	;# 
   223  0692                     	;# 
   224  0693                     	;# 
   225  0694                     	;# 
   226  0695                     	;# 
   227  0696                     	;# 
   228  0697                     	;# 
   229  0698                     	;# 
   230  0699                     	;# 
   231  0891                     	;# 
   232  0891                     	;# 
   233  0891                     	;# 
   234  0891                     	;# 
   235  0891                     	;# 
   236  0891                     	;# 
   237  0892                     	;# 
   238  0892                     	;# 
   239  0892                     	;# 
   240  0893                     	;# 
   241  0893                     	;# 
   242  0893                     	;# 
   243  0893                     	;# 
   244  0893                     	;# 
   245  0893                     	;# 
   246  0894                     	;# 
   247  0894                     	;# 
   248  0894                     	;# 
   249  0895                     	;# 
   250  0895                     	;# 
   251  0895                     	;# 
   252  0896                     	;# 
   253  0896                     	;# 
   254  0896                     	;# 
   255  089B                     	;# 
   256  0911                     	;# 
   257  0912                     	;# 
   258  0913                     	;# 
   259  0914                     	;# 
   260  0915                     	;# 
   261  0916                     	;# 
   262  0918                     	;# 
   263  0919                     	;# 
   264  091A                     	;# 
   265  091B                     	;# 
   266  091C                     	;# 
   267  091D                     	;# 
   268  091E                     	;# 
   269  091F                     	;# 
   270  0E0F                     	;# 
   271  0E10                     	;# 
   272  0E11                     	;# 
   273  0E12                     	;# 
   274  0E13                     	;# 
   275  0E14                     	;# 
   276  0E15                     	;# 
   277  0E18                     	;# 
   278  0E1A                     	;# 
   279  0E1B                     	;# 
   280  0E1C                     	;# 
   281  0E20                     	;# 
   282  0E21                     	;# 
   283  0E22                     	;# 
   284  0E24                     	;# 
   285  0E25                     	;# 
   286  0E28                     	;# 
   287  0E29                     	;# 
   288  0E2A                     	;# 
   289  0E2B                     	;# 
   290  0E90                     	;# 
   291  0E91                     	;# 
   292  0E92                     	;# 
   293  0E94                     	;# 
   294  0E95                     	;# 
   295  0EA0                     	;# 
   296  0EA1                     	;# 
   297  0EA2                     	;# 
   298  0EA3                     	;# 
   299  0EA4                     	;# 
   300  0EA5                     	;# 
   301  0F0F                     	;# 
   302  0F10                     	;# 
   303  0F11                     	;# 
   304  0F12                     	;# 
   305  0F13                     	;# 
   306  0F14                     	;# 
   307  0F15                     	;# 
   308  0F16                     	;# 
   309  0F17                     	;# 
   310  0F18                     	;# 
   311  0F19                     	;# 
   312  0F1A                     	;# 
   313  0F1B                     	;# 
   314  0F1C                     	;# 
   315  0F1D                     	;# 
   316  0F1E                     	;# 
   317  0F1F                     	;# 
   318  0F20                     	;# 
   319  0F21                     	;# 
   320  0F22                     	;# 
   321  0F23                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000E                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  0019                     	;# 
   360  001A                     	;# 
   361  001B                     	;# 
   362  001C                     	;# 
   363  001D                     	;# 
   364  001E                     	;# 
   365  001F                     	;# 
   366  008C                     	;# 
   367  008E                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0097                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010E                     	;# 
   382  0111                     	;# 
   383  0112                     	;# 
   384  0113                     	;# 
   385  0114                     	;# 
   386  0115                     	;# 
   387  0116                     	;# 
   388  0117                     	;# 
   389  0118                     	;# 
   390  0119                     	;# 
   391  018C                     	;# 
   392  018E                     	;# 
   393  0199                     	;# 
   394  0199                     	;# 
   395  0199                     	;# 
   396  019A                     	;# 
   397  019A                     	;# 
   398  019A                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019C                     	;# 
   405  019C                     	;# 
   406  019C                     	;# 
   407  019D                     	;# 
   408  019D                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019E                     	;# 
   412  019E                     	;# 
   413  019F                     	;# 
   414  019F                     	;# 
   415  019F                     	;# 
   416  019F                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  020E                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  0212                     	;# 
   423  0212                     	;# 
   424  0213                     	;# 
   425  0213                     	;# 
   426  0214                     	;# 
   427  0214                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0216                     	;# 
   433  0216                     	;# 
   434  0217                     	;# 
   435  0217                     	;# 
   436  028C                     	;# 
   437  028E                     	;# 
   438  0291                     	;# 
   439  0291                     	;# 
   440  0292                     	;# 
   441  0293                     	;# 
   442  0294                     	;# 
   443  0295                     	;# 
   444  0295                     	;# 
   445  0296                     	;# 
   446  0297                     	;# 
   447  0298                     	;# 
   448  030C                     	;# 
   449  030E                     	;# 
   450  038C                     	;# 
   451  038E                     	;# 
   452  0391                     	;# 
   453  0392                     	;# 
   454  0393                     	;# 
   455  0397                     	;# 
   456  0398                     	;# 
   457  0399                     	;# 
   458  039A                     	;# 
   459  039C                     	;# 
   460  039D                     	;# 
   461  039E                     	;# 
   462  039F                     	;# 
   463  0498                     	;# 
   464  0498                     	;# 
   465  0499                     	;# 
   466  049A                     	;# 
   467  049B                     	;# 
   468  049B                     	;# 
   469  049C                     	;# 
   470  049D                     	;# 
   471  049E                     	;# 
   472  049F                     	;# 
   473  0617                     	;# 
   474  0618                     	;# 
   475  0619                     	;# 
   476  0619                     	;# 
   477  061A                     	;# 
   478  061B                     	;# 
   479  061C                     	;# 
   480  061C                     	;# 
   481  0691                     	;# 
   482  0692                     	;# 
   483  0693                     	;# 
   484  0694                     	;# 
   485  0695                     	;# 
   486  0696                     	;# 
   487  0697                     	;# 
   488  0698                     	;# 
   489  0699                     	;# 
   490  0891                     	;# 
   491  0891                     	;# 
   492  0891                     	;# 
   493  0891                     	;# 
   494  0891                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0892                     	;# 
   498  0892                     	;# 
   499  0893                     	;# 
   500  0893                     	;# 
   501  0893                     	;# 
   502  0893                     	;# 
   503  0893                     	;# 
   504  0893                     	;# 
   505  0894                     	;# 
   506  0894                     	;# 
   507  0894                     	;# 
   508  0895                     	;# 
   509  0895                     	;# 
   510  0895                     	;# 
   511  0896                     	;# 
   512  0896                     	;# 
   513  0896                     	;# 
   514  089B                     	;# 
   515  0911                     	;# 
   516  0912                     	;# 
   517  0913                     	;# 
   518  0914                     	;# 
   519  0915                     	;# 
   520  0916                     	;# 
   521  0918                     	;# 
   522  0919                     	;# 
   523  091A                     	;# 
   524  091B                     	;# 
   525  091C                     	;# 
   526  091D                     	;# 
   527  091E                     	;# 
   528  091F                     	;# 
   529  0E0F                     	;# 
   530  0E10                     	;# 
   531  0E11                     	;# 
   532  0E12                     	;# 
   533  0E13                     	;# 
   534  0E14                     	;# 
   535  0E15                     	;# 
   536  0E18                     	;# 
   537  0E1A                     	;# 
   538  0E1B                     	;# 
   539  0E1C                     	;# 
   540  0E20                     	;# 
   541  0E21                     	;# 
   542  0E22                     	;# 
   543  0E24                     	;# 
   544  0E25                     	;# 
   545  0E28                     	;# 
   546  0E29                     	;# 
   547  0E2A                     	;# 
   548  0E2B                     	;# 
   549  0E90                     	;# 
   550  0E91                     	;# 
   551  0E92                     	;# 
   552  0E94                     	;# 
   553  0E95                     	;# 
   554  0EA0                     	;# 
   555  0EA1                     	;# 
   556  0EA2                     	;# 
   557  0EA3                     	;# 
   558  0EA4                     	;# 
   559  0EA5                     	;# 
   560  0F0F                     	;# 
   561  0F10                     	;# 
   562  0F11                     	;# 
   563  0F12                     	;# 
   564  0F13                     	;# 
   565  0F14                     	;# 
   566  0F15                     	;# 
   567  0F16                     	;# 
   568  0F17                     	;# 
   569  0F18                     	;# 
   570  0F19                     	;# 
   571  0F1A                     	;# 
   572  0F1B                     	;# 
   573  0F1C                     	;# 
   574  0F1D                     	;# 
   575  0F1E                     	;# 
   576  0F1F                     	;# 
   577  0F20                     	;# 
   578  0F21                     	;# 
   579  0F22                     	;# 
   580  0F23                     	;# 
   581  0FE4                     	;# 
   582  0FE5                     	;# 
   583  0FE6                     	;# 
   584  0FE7                     	;# 
   585  0FE8                     	;# 
   586  0FE9                     	;# 
   587  0FEA                     	;# 
   588  0FEB                     	;# 
   589  0FED                     	;# 
   590  0FEE                     	;# 
   591  0FEF                     	;# 
   592  0000                     	;# 
   593  0001                     	;# 
   594  0002                     	;# 
   595  0003                     	;# 
   596  0004                     	;# 
   597  0005                     	;# 
   598  0006                     	;# 
   599  0007                     	;# 
   600  0008                     	;# 
   601  0009                     	;# 
   602  000A                     	;# 
   603  000B                     	;# 
   604  000C                     	;# 
   605  000E                     	;# 
   606  0010                     	;# 
   607  0011                     	;# 
   608  0012                     	;# 
   609  0013                     	;# 
   610  0014                     	;# 
   611  0015                     	;# 
   612  0015                     	;# 
   613  0016                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  0019                     	;# 
   619  001A                     	;# 
   620  001B                     	;# 
   621  001C                     	;# 
   622  001D                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  008C                     	;# 
   626  008E                     	;# 
   627  0090                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0093                     	;# 
   631  0094                     	;# 
   632  0097                     	;# 
   633  009B                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  009F                     	;# 
   639  010C                     	;# 
   640  010E                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  018C                     	;# 
   651  018E                     	;# 
   652  0199                     	;# 
   653  0199                     	;# 
   654  0199                     	;# 
   655  019A                     	;# 
   656  019A                     	;# 
   657  019A                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019D                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019E                     	;# 
   671  019E                     	;# 
   672  019F                     	;# 
   673  019F                     	;# 
   674  019F                     	;# 
   675  019F                     	;# 
   676  019F                     	;# 
   677  020C                     	;# 
   678  020E                     	;# 
   679  0211                     	;# 
   680  0211                     	;# 
   681  0212                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0214                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  028C                     	;# 
   696  028E                     	;# 
   697  0291                     	;# 
   698  0291                     	;# 
   699  0292                     	;# 
   700  0293                     	;# 
   701  0294                     	;# 
   702  0295                     	;# 
   703  0295                     	;# 
   704  0296                     	;# 
   705  0297                     	;# 
   706  0298                     	;# 
   707  030C                     	;# 
   708  030E                     	;# 
   709  038C                     	;# 
   710  038E                     	;# 
   711  0391                     	;# 
   712  0392                     	;# 
   713  0393                     	;# 
   714  0397                     	;# 
   715  0398                     	;# 
   716  0399                     	;# 
   717  039A                     	;# 
   718  039C                     	;# 
   719  039D                     	;# 
   720  039E                     	;# 
   721  039F                     	;# 
   722  0498                     	;# 
   723  0498                     	;# 
   724  0499                     	;# 
   725  049A                     	;# 
   726  049B                     	;# 
   727  049B                     	;# 
   728  049C                     	;# 
   729  049D                     	;# 
   730  049E                     	;# 
   731  049F                     	;# 
   732  0617                     	;# 
   733  0618                     	;# 
   734  0619                     	;# 
   735  0619                     	;# 
   736  061A                     	;# 
   737  061B                     	;# 
   738  061C                     	;# 
   739  061C                     	;# 
   740  0691                     	;# 
   741  0692                     	;# 
   742  0693                     	;# 
   743  0694                     	;# 
   744  0695                     	;# 
   745  0696                     	;# 
   746  0697                     	;# 
   747  0698                     	;# 
   748  0699                     	;# 
   749  0891                     	;# 
   750  0891                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0891                     	;# 
   755  0892                     	;# 
   756  0892                     	;# 
   757  0892                     	;# 
   758  0893                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0893                     	;# 
   764  0894                     	;# 
   765  0894                     	;# 
   766  0894                     	;# 
   767  0895                     	;# 
   768  0895                     	;# 
   769  0895                     	;# 
   770  0896                     	;# 
   771  0896                     	;# 
   772  0896                     	;# 
   773  089B                     	;# 
   774  0911                     	;# 
   775  0912                     	;# 
   776  0913                     	;# 
   777  0914                     	;# 
   778  0915                     	;# 
   779  0916                     	;# 
   780  0918                     	;# 
   781  0919                     	;# 
   782  091A                     	;# 
   783  091B                     	;# 
   784  091C                     	;# 
   785  091D                     	;# 
   786  091E                     	;# 
   787  091F                     	;# 
   788  0E0F                     	;# 
   789  0E10                     	;# 
   790  0E11                     	;# 
   791  0E12                     	;# 
   792  0E13                     	;# 
   793  0E14                     	;# 
   794  0E15                     	;# 
   795  0E18                     	;# 
   796  0E1A                     	;# 
   797  0E1B                     	;# 
   798  0E1C                     	;# 
   799  0E20                     	;# 
   800  0E21                     	;# 
   801  0E22                     	;# 
   802  0E24                     	;# 
   803  0E25                     	;# 
   804  0E28                     	;# 
   805  0E29                     	;# 
   806  0E2A                     	;# 
   807  0E2B                     	;# 
   808  0E90                     	;# 
   809  0E91                     	;# 
   810  0E92                     	;# 
   811  0E94                     	;# 
   812  0E95                     	;# 
   813  0EA0                     	;# 
   814  0EA1                     	;# 
   815  0EA2                     	;# 
   816  0EA3                     	;# 
   817  0EA4                     	;# 
   818  0EA5                     	;# 
   819  0F0F                     	;# 
   820  0F10                     	;# 
   821  0F11                     	;# 
   822  0F12                     	;# 
   823  0F13                     	;# 
   824  0F14                     	;# 
   825  0F15                     	;# 
   826  0F16                     	;# 
   827  0F17                     	;# 
   828  0F18                     	;# 
   829  0F19                     	;# 
   830  0F1A                     	;# 
   831  0F1B                     	;# 
   832  0F1C                     	;# 
   833  0F1D                     	;# 
   834  0F1E                     	;# 
   835  0F1F                     	;# 
   836  0F20                     	;# 
   837  0F21                     	;# 
   838  0F22                     	;# 
   839  0F23                     	;# 
   840  0FE4                     	;# 
   841  0FE5                     	;# 
   842  0FE6                     	;# 
   843  0FE7                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEF                     	;# 
   851  0000                     	;# 
   852  0001                     	;# 
   853  0002                     	;# 
   854  0003                     	;# 
   855  0004                     	;# 
   856  0005                     	;# 
   857  0006                     	;# 
   858  0007                     	;# 
   859  0008                     	;# 
   860  0009                     	;# 
   861  000A                     	;# 
   862  000B                     	;# 
   863  000C                     	;# 
   864  000E                     	;# 
   865  0010                     	;# 
   866  0011                     	;# 
   867  0012                     	;# 
   868  0013                     	;# 
   869  0014                     	;# 
   870  0015                     	;# 
   871  0015                     	;# 
   872  0016                     	;# 
   873  0016                     	;# 
   874  0017                     	;# 
   875  0018                     	;# 
   876  0019                     	;# 
   877  0019                     	;# 
   878  001A                     	;# 
   879  001B                     	;# 
   880  001C                     	;# 
   881  001D                     	;# 
   882  001E                     	;# 
   883  001F                     	;# 
   884  008C                     	;# 
   885  008E                     	;# 
   886  0090                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0097                     	;# 
   892  009B                     	;# 
   893  009B                     	;# 
   894  009C                     	;# 
   895  009D                     	;# 
   896  009E                     	;# 
   897  009F                     	;# 
   898  010C                     	;# 
   899  010E                     	;# 
   900  0111                     	;# 
   901  0112                     	;# 
   902  0113                     	;# 
   903  0114                     	;# 
   904  0115                     	;# 
   905  0116                     	;# 
   906  0117                     	;# 
   907  0118                     	;# 
   908  0119                     	;# 
   909  018C                     	;# 
   910  018E                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  020C                     	;# 
   937  020E                     	;# 
   938  0211                     	;# 
   939  0211                     	;# 
   940  0212                     	;# 
   941  0212                     	;# 
   942  0213                     	;# 
   943  0213                     	;# 
   944  0214                     	;# 
   945  0214                     	;# 
   946  0215                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0216                     	;# 
   951  0216                     	;# 
   952  0217                     	;# 
   953  0217                     	;# 
   954  028C                     	;# 
   955  028E                     	;# 
   956  0291                     	;# 
   957  0291                     	;# 
   958  0292                     	;# 
   959  0293                     	;# 
   960  0294                     	;# 
   961  0295                     	;# 
   962  0295                     	;# 
   963  0296                     	;# 
   964  0297                     	;# 
   965  0298                     	;# 
   966  030C                     	;# 
   967  030E                     	;# 
   968  038C                     	;# 
   969  038E                     	;# 
   970  0391                     	;# 
   971  0392                     	;# 
   972  0393                     	;# 
   973  0397                     	;# 
   974  0398                     	;# 
   975  0399                     	;# 
   976  039A                     	;# 
   977  039C                     	;# 
   978  039D                     	;# 
   979  039E                     	;# 
   980  039F                     	;# 
   981  0498                     	;# 
   982  0498                     	;# 
   983  0499                     	;# 
   984  049A                     	;# 
   985  049B                     	;# 
   986  049B                     	;# 
   987  049C                     	;# 
   988  049D                     	;# 
   989  049E                     	;# 
   990  049F                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061C                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  0695                     	;# 
  1004  0696                     	;# 
  1005  0697                     	;# 
  1006  0698                     	;# 
  1007  0699                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0892                     	;# 
  1015  0892                     	;# 
  1016  0892                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0894                     	;# 
  1024  0894                     	;# 
  1025  0894                     	;# 
  1026  0895                     	;# 
  1027  0895                     	;# 
  1028  0895                     	;# 
  1029  0896                     	;# 
  1030  0896                     	;# 
  1031  0896                     	;# 
  1032  089B                     	;# 
  1033  0911                     	;# 
  1034  0912                     	;# 
  1035  0913                     	;# 
  1036  0914                     	;# 
  1037  0915                     	;# 
  1038  0916                     	;# 
  1039  0918                     	;# 
  1040  0919                     	;# 
  1041  091A                     	;# 
  1042  091B                     	;# 
  1043  091C                     	;# 
  1044  091D                     	;# 
  1045  091E                     	;# 
  1046  091F                     	;# 
  1047  0E0F                     	;# 
  1048  0E10                     	;# 
  1049  0E11                     	;# 
  1050  0E12                     	;# 
  1051  0E13                     	;# 
  1052  0E14                     	;# 
  1053  0E15                     	;# 
  1054  0E18                     	;# 
  1055  0E1A                     	;# 
  1056  0E1B                     	;# 
  1057  0E1C                     	;# 
  1058  0E20                     	;# 
  1059  0E21                     	;# 
  1060  0E22                     	;# 
  1061  0E24                     	;# 
  1062  0E25                     	;# 
  1063  0E28                     	;# 
  1064  0E29                     	;# 
  1065  0E2A                     	;# 
  1066  0E2B                     	;# 
  1067  0E90                     	;# 
  1068  0E91                     	;# 
  1069  0E92                     	;# 
  1070  0E94                     	;# 
  1071  0E95                     	;# 
  1072  0EA0                     	;# 
  1073  0EA1                     	;# 
  1074  0EA2                     	;# 
  1075  0EA3                     	;# 
  1076  0EA4                     	;# 
  1077  0EA5                     	;# 
  1078  0F0F                     	;# 
  1079  0F10                     	;# 
  1080  0F11                     	;# 
  1081  0F12                     	;# 
  1082  0F13                     	;# 
  1083  0F14                     	;# 
  1084  0F15                     	;# 
  1085  0F16                     	;# 
  1086  0F17                     	;# 
  1087  0F18                     	;# 
  1088  0F19                     	;# 
  1089  0F1A                     	;# 
  1090  0F1B                     	;# 
  1091  0F1C                     	;# 
  1092  0F1D                     	;# 
  1093  0F1E                     	;# 
  1094  0F1F                     	;# 
  1095  0F20                     	;# 
  1096  0F21                     	;# 
  1097  0F22                     	;# 
  1098  0F23                     	;# 
  1099  0FE4                     	;# 
  1100  0FE5                     	;# 
  1101  0FE6                     	;# 
  1102  0FE7                     	;# 
  1103  0FE8                     	;# 
  1104  0FE9                     	;# 
  1105  0FEA                     	;# 
  1106  0FEB                     	;# 
  1107  0FED                     	;# 
  1108  0FEE                     	;# 
  1109  0FEF                     	;# 
  1110  0000                     	;# 
  1111  0001                     	;# 
  1112  0002                     	;# 
  1113  0003                     	;# 
  1114  0004                     	;# 
  1115  0005                     	;# 
  1116  0006                     	;# 
  1117  0007                     	;# 
  1118  0008                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000E                     	;# 
  1124  0010                     	;# 
  1125  0011                     	;# 
  1126  0012                     	;# 
  1127  0013                     	;# 
  1128  0014                     	;# 
  1129  0015                     	;# 
  1130  0015                     	;# 
  1131  0016                     	;# 
  1132  0016                     	;# 
  1133  0017                     	;# 
  1134  0018                     	;# 
  1135  0019                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  001B                     	;# 
  1139  001C                     	;# 
  1140  001D                     	;# 
  1141  001E                     	;# 
  1142  001F                     	;# 
  1143  008C                     	;# 
  1144  008E                     	;# 
  1145  0090                     	;# 
  1146  0091                     	;# 
  1147  0092                     	;# 
  1148  0093                     	;# 
  1149  0094                     	;# 
  1150  0097                     	;# 
  1151  009B                     	;# 
  1152  009B                     	;# 
  1153  009C                     	;# 
  1154  009D                     	;# 
  1155  009E                     	;# 
  1156  009F                     	;# 
  1157  010C                     	;# 
  1158  010E                     	;# 
  1159  0111                     	;# 
  1160  0112                     	;# 
  1161  0113                     	;# 
  1162  0114                     	;# 
  1163  0115                     	;# 
  1164  0116                     	;# 
  1165  0117                     	;# 
  1166  0118                     	;# 
  1167  0119                     	;# 
  1168  018C                     	;# 
  1169  018E                     	;# 
  1170  0199                     	;# 
  1171  0199                     	;# 
  1172  0199                     	;# 
  1173  019A                     	;# 
  1174  019A                     	;# 
  1175  019A                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019C                     	;# 
  1184  019D                     	;# 
  1185  019D                     	;# 
  1186  019D                     	;# 
  1187  019E                     	;# 
  1188  019E                     	;# 
  1189  019E                     	;# 
  1190  019F                     	;# 
  1191  019F                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  020C                     	;# 
  1196  020E                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0216                     	;# 
  1210  0216                     	;# 
  1211  0217                     	;# 
  1212  0217                     	;# 
  1213  028C                     	;# 
  1214  028E                     	;# 
  1215  0291                     	;# 
  1216  0291                     	;# 
  1217  0292                     	;# 
  1218  0293                     	;# 
  1219  0294                     	;# 
  1220  0295                     	;# 
  1221  0295                     	;# 
  1222  0296                     	;# 
  1223  0297                     	;# 
  1224  0298                     	;# 
  1225  030C                     	;# 
  1226  030E                     	;# 
  1227  038C                     	;# 
  1228  038E                     	;# 
  1229  0391                     	;# 
  1230  0392                     	;# 
  1231  0393                     	;# 
  1232  0397                     	;# 
  1233  0398                     	;# 
  1234  0399                     	;# 
  1235  039A                     	;# 
  1236  039C                     	;# 
  1237  039D                     	;# 
  1238  039E                     	;# 
  1239  039F                     	;# 
  1240  0498                     	;# 
  1241  0498                     	;# 
  1242  0499                     	;# 
  1243  049A                     	;# 
  1244  049B                     	;# 
  1245  049B                     	;# 
  1246  049C                     	;# 
  1247  049D                     	;# 
  1248  049E                     	;# 
  1249  049F                     	;# 
  1250  0617                     	;# 
  1251  0618                     	;# 
  1252  0619                     	;# 
  1253  0619                     	;# 
  1254  061A                     	;# 
  1255  061B                     	;# 
  1256  061C                     	;# 
  1257  061C                     	;# 
  1258  0691                     	;# 
  1259  0692                     	;# 
  1260  0693                     	;# 
  1261  0694                     	;# 
  1262  0695                     	;# 
  1263  0696                     	;# 
  1264  0697                     	;# 
  1265  0698                     	;# 
  1266  0699                     	;# 
  1267  0891                     	;# 
  1268  0891                     	;# 
  1269  0891                     	;# 
  1270  0891                     	;# 
  1271  0891                     	;# 
  1272  0891                     	;# 
  1273  0892                     	;# 
  1274  0892                     	;# 
  1275  0892                     	;# 
  1276  0893                     	;# 
  1277  0893                     	;# 
  1278  0893                     	;# 
  1279  0893                     	;# 
  1280  0893                     	;# 
  1281  0893                     	;# 
  1282  0894                     	;# 
  1283  0894                     	;# 
  1284  0894                     	;# 
  1285  0895                     	;# 
  1286  0895                     	;# 
  1287  0895                     	;# 
  1288  0896                     	;# 
  1289  0896                     	;# 
  1290  0896                     	;# 
  1291  089B                     	;# 
  1292  0911                     	;# 
  1293  0912                     	;# 
  1294  0913                     	;# 
  1295  0914                     	;# 
  1296  0915                     	;# 
  1297  0916                     	;# 
  1298  0918                     	;# 
  1299  0919                     	;# 
  1300  091A                     	;# 
  1301  091B                     	;# 
  1302  091C                     	;# 
  1303  091D                     	;# 
  1304  091E                     	;# 
  1305  091F                     	;# 
  1306  0E0F                     	;# 
  1307  0E10                     	;# 
  1308  0E11                     	;# 
  1309  0E12                     	;# 
  1310  0E13                     	;# 
  1311  0E14                     	;# 
  1312  0E15                     	;# 
  1313  0E18                     	;# 
  1314  0E1A                     	;# 
  1315  0E1B                     	;# 
  1316  0E1C                     	;# 
  1317  0E20                     	;# 
  1318  0E21                     	;# 
  1319  0E22                     	;# 
  1320  0E24                     	;# 
  1321  0E25                     	;# 
  1322  0E28                     	;# 
  1323  0E29                     	;# 
  1324  0E2A                     	;# 
  1325  0E2B                     	;# 
  1326  0E90                     	;# 
  1327  0E91                     	;# 
  1328  0E92                     	;# 
  1329  0E94                     	;# 
  1330  0E95                     	;# 
  1331  0EA0                     	;# 
  1332  0EA1                     	;# 
  1333  0EA2                     	;# 
  1334  0EA3                     	;# 
  1335  0EA4                     	;# 
  1336  0EA5                     	;# 
  1337  0F0F                     	;# 
  1338  0F10                     	;# 
  1339  0F11                     	;# 
  1340  0F12                     	;# 
  1341  0F13                     	;# 
  1342  0F14                     	;# 
  1343  0F15                     	;# 
  1344  0F16                     	;# 
  1345  0F17                     	;# 
  1346  0F18                     	;# 
  1347  0F19                     	;# 
  1348  0F1A                     	;# 
  1349  0F1B                     	;# 
  1350  0F1C                     	;# 
  1351  0F1D                     	;# 
  1352  0F1E                     	;# 
  1353  0F1F                     	;# 
  1354  0F20                     	;# 
  1355  0F21                     	;# 
  1356  0F22                     	;# 
  1357  0F23                     	;# 
  1358  0FE4                     	;# 
  1359  0FE5                     	;# 
  1360  0FE6                     	;# 
  1361  0FE7                     	;# 
  1362  0FE8                     	;# 
  1363  0FE9                     	;# 
  1364  0FEA                     	;# 
  1365  0FEB                     	;# 
  1366  0FED                     	;# 
  1367  0FEE                     	;# 
  1368  0FEF                     	;# 
  1369  0000                     	;# 
  1370  0001                     	;# 
  1371  0002                     	;# 
  1372  0003                     	;# 
  1373  0004                     	;# 
  1374  0005                     	;# 
  1375  0006                     	;# 
  1376  0007                     	;# 
  1377  0008                     	;# 
  1378  0009                     	;# 
  1379  000A                     	;# 
  1380  000B                     	;# 
  1381  000C                     	;# 
  1382  000E                     	;# 
  1383  0010                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0013                     	;# 
  1387  0014                     	;# 
  1388  0015                     	;# 
  1389  0015                     	;# 
  1390  0016                     	;# 
  1391  0016                     	;# 
  1392  0017                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  0019                     	;# 
  1396  001A                     	;# 
  1397  001B                     	;# 
  1398  001C                     	;# 
  1399  001D                     	;# 
  1400  001E                     	;# 
  1401  001F                     	;# 
  1402  008C                     	;# 
  1403  008E                     	;# 
  1404  0090                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0093                     	;# 
  1408  0094                     	;# 
  1409  0097                     	;# 
  1410  009B                     	;# 
  1411  009B                     	;# 
  1412  009C                     	;# 
  1413  009D                     	;# 
  1414  009E                     	;# 
  1415  009F                     	;# 
  1416  010C                     	;# 
  1417  010E                     	;# 
  1418  0111                     	;# 
  1419  0112                     	;# 
  1420  0113                     	;# 
  1421  0114                     	;# 
  1422  0115                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  0118                     	;# 
  1426  0119                     	;# 
  1427  018C                     	;# 
  1428  018E                     	;# 
  1429  0199                     	;# 
  1430  0199                     	;# 
  1431  0199                     	;# 
  1432  019A                     	;# 
  1433  019A                     	;# 
  1434  019A                     	;# 
  1435  019B                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019D                     	;# 
  1445  019D                     	;# 
  1446  019E                     	;# 
  1447  019E                     	;# 
  1448  019E                     	;# 
  1449  019F                     	;# 
  1450  019F                     	;# 
  1451  019F                     	;# 
  1452  019F                     	;# 
  1453  019F                     	;# 
  1454  020C                     	;# 
  1455  020E                     	;# 
  1456  0211                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0212                     	;# 
  1460  0213                     	;# 
  1461  0213                     	;# 
  1462  0214                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0216                     	;# 
  1469  0216                     	;# 
  1470  0217                     	;# 
  1471  0217                     	;# 
  1472  028C                     	;# 
  1473  028E                     	;# 
  1474  0291                     	;# 
  1475  0291                     	;# 
  1476  0292                     	;# 
  1477  0293                     	;# 
  1478  0294                     	;# 
  1479  0295                     	;# 
  1480  0295                     	;# 
  1481  0296                     	;# 
  1482  0297                     	;# 
  1483  0298                     	;# 
  1484  030C                     	;# 
  1485  030E                     	;# 
  1486  038C                     	;# 
  1487  038E                     	;# 
  1488  0391                     	;# 
  1489  0392                     	;# 
  1490  0393                     	;# 
  1491  0397                     	;# 
  1492  0398                     	;# 
  1493  0399                     	;# 
  1494  039A                     	;# 
  1495  039C                     	;# 
  1496  039D                     	;# 
  1497  039E                     	;# 
  1498  039F                     	;# 
  1499  0498                     	;# 
  1500  0498                     	;# 
  1501  0499                     	;# 
  1502  049A                     	;# 
  1503  049B                     	;# 
  1504  049B                     	;# 
  1505  049C                     	;# 
  1506  049D                     	;# 
  1507  049E                     	;# 
  1508  049F                     	;# 
  1509  0617                     	;# 
  1510  0618                     	;# 
  1511  0619                     	;# 
  1512  0619                     	;# 
  1513  061A                     	;# 
  1514  061B                     	;# 
  1515  061C                     	;# 
  1516  061C                     	;# 
  1517  0691                     	;# 
  1518  0692                     	;# 
  1519  0693                     	;# 
  1520  0694                     	;# 
  1521  0695                     	;# 
  1522  0696                     	;# 
  1523  0697                     	;# 
  1524  0698                     	;# 
  1525  0699                     	;# 
  1526  0891                     	;# 
  1527  0891                     	;# 
  1528  0891                     	;# 
  1529  0891                     	;# 
  1530  0891                     	;# 
  1531  0891                     	;# 
  1532  0892                     	;# 
  1533  0892                     	;# 
  1534  0892                     	;# 
  1535  0893                     	;# 
  1536  0893                     	;# 
  1537  0893                     	;# 
  1538  0893                     	;# 
  1539  0893                     	;# 
  1540  0893                     	;# 
  1541  0894                     	;# 
  1542  0894                     	;# 
  1543  0894                     	;# 
  1544  0895                     	;# 
  1545  0895                     	;# 
  1546  0895                     	;# 
  1547  0896                     	;# 
  1548  0896                     	;# 
  1549  0896                     	;# 
  1550  089B                     	;# 
  1551  0911                     	;# 
  1552  0912                     	;# 
  1553  0913                     	;# 
  1554  0914                     	;# 
  1555  0915                     	;# 
  1556  0916                     	;# 
  1557  0918                     	;# 
  1558  0919                     	;# 
  1559  091A                     	;# 
  1560  091B                     	;# 
  1561  091C                     	;# 
  1562  091D                     	;# 
  1563  091E                     	;# 
  1564  091F                     	;# 
  1565  0E0F                     	;# 
  1566  0E10                     	;# 
  1567  0E11                     	;# 
  1568  0E12                     	;# 
  1569  0E13                     	;# 
  1570  0E14                     	;# 
  1571  0E15                     	;# 
  1572  0E18                     	;# 
  1573  0E1A                     	;# 
  1574  0E1B                     	;# 
  1575  0E1C                     	;# 
  1576  0E20                     	;# 
  1577  0E21                     	;# 
  1578  0E22                     	;# 
  1579  0E24                     	;# 
  1580  0E25                     	;# 
  1581  0E28                     	;# 
  1582  0E29                     	;# 
  1583  0E2A                     	;# 
  1584  0E2B                     	;# 
  1585  0E90                     	;# 
  1586  0E91                     	;# 
  1587  0E92                     	;# 
  1588  0E94                     	;# 
  1589  0E95                     	;# 
  1590  0EA0                     	;# 
  1591  0EA1                     	;# 
  1592  0EA2                     	;# 
  1593  0EA3                     	;# 
  1594  0EA4                     	;# 
  1595  0EA5                     	;# 
  1596  0F0F                     	;# 
  1597  0F10                     	;# 
  1598  0F11                     	;# 
  1599  0F12                     	;# 
  1600  0F13                     	;# 
  1601  0F14                     	;# 
  1602  0F15                     	;# 
  1603  0F16                     	;# 
  1604  0F17                     	;# 
  1605  0F18                     	;# 
  1606  0F19                     	;# 
  1607  0F1A                     	;# 
  1608  0F1B                     	;# 
  1609  0F1C                     	;# 
  1610  0F1D                     	;# 
  1611  0F1E                     	;# 
  1612  0F1F                     	;# 
  1613  0F20                     	;# 
  1614  0F21                     	;# 
  1615  0F22                     	;# 
  1616  0F23                     	;# 
  1617  0FE4                     	;# 
  1618  0FE5                     	;# 
  1619  0FE6                     	;# 
  1620  0FE7                     	;# 
  1621  0FE8                     	;# 
  1622  0FE9                     	;# 
  1623  0FEA                     	;# 
  1624  0FEB                     	;# 
  1625  0FED                     	;# 
  1626  0FEE                     	;# 
  1627  0FEF                     	;# 
  1628  0000                     	;# 
  1629  0001                     	;# 
  1630  0002                     	;# 
  1631  0003                     	;# 
  1632  0004                     	;# 
  1633  0005                     	;# 
  1634  0006                     	;# 
  1635  0007                     	;# 
  1636  0008                     	;# 
  1637  0009                     	;# 
  1638  000A                     	;# 
  1639  000B                     	;# 
  1640  000C                     	;# 
  1641  000E                     	;# 
  1642  0010                     	;# 
  1643  0011                     	;# 
  1644  0012                     	;# 
  1645  0013                     	;# 
  1646  0014                     	;# 
  1647  0015                     	;# 
  1648  0015                     	;# 
  1649  0016                     	;# 
  1650  0016                     	;# 
  1651  0017                     	;# 
  1652  0018                     	;# 
  1653  0019                     	;# 
  1654  0019                     	;# 
  1655  001A                     	;# 
  1656  001B                     	;# 
  1657  001C                     	;# 
  1658  001D                     	;# 
  1659  001E                     	;# 
  1660  001F                     	;# 
  1661  008C                     	;# 
  1662  008E                     	;# 
  1663  0090                     	;# 
  1664  0091                     	;# 
  1665  0092                     	;# 
  1666  0093                     	;# 
  1667  0094                     	;# 
  1668  0097                     	;# 
  1669  009B                     	;# 
  1670  009B                     	;# 
  1671  009C                     	;# 
  1672  009D                     	;# 
  1673  009E                     	;# 
  1674  009F                     	;# 
  1675  010C                     	;# 
  1676  010E                     	;# 
  1677  0111                     	;# 
  1678  0112                     	;# 
  1679  0113                     	;# 
  1680  0114                     	;# 
  1681  0115                     	;# 
  1682  0116                     	;# 
  1683  0117                     	;# 
  1684  0118                     	;# 
  1685  0119                     	;# 
  1686  018C                     	;# 
  1687  018E                     	;# 
  1688  0199                     	;# 
  1689  0199                     	;# 
  1690  0199                     	;# 
  1691  019A                     	;# 
  1692  019A                     	;# 
  1693  019A                     	;# 
  1694  019B                     	;# 
  1695  019B                     	;# 
  1696  019B                     	;# 
  1697  019B                     	;# 
  1698  019B                     	;# 
  1699  019C                     	;# 
  1700  019C                     	;# 
  1701  019C                     	;# 
  1702  019D                     	;# 
  1703  019D                     	;# 
  1704  019D                     	;# 
  1705  019E                     	;# 
  1706  019E                     	;# 
  1707  019E                     	;# 
  1708  019F                     	;# 
  1709  019F                     	;# 
  1710  019F                     	;# 
  1711  019F                     	;# 
  1712  019F                     	;# 
  1713  020C                     	;# 
  1714  020E                     	;# 
  1715  0211                     	;# 
  1716  0211                     	;# 
  1717  0212                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0213                     	;# 
  1721  0214                     	;# 
  1722  0214                     	;# 
  1723  0215                     	;# 
  1724  0215                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0216                     	;# 
  1728  0216                     	;# 
  1729  0217                     	;# 
  1730  0217                     	;# 
  1731  028C                     	;# 
  1732  028E                     	;# 
  1733  0291                     	;# 
  1734  0291                     	;# 
  1735  0292                     	;# 
  1736  0293                     	;# 
  1737  0294                     	;# 
  1738  0295                     	;# 
  1739  0295                     	;# 
  1740  0296                     	;# 
  1741  0297                     	;# 
  1742  0298                     	;# 
  1743  030C                     	;# 
  1744  030E                     	;# 
  1745  038C                     	;# 
  1746  038E                     	;# 
  1747  0391                     	;# 
  1748  0392                     	;# 
  1749  0393                     	;# 
  1750  0397                     	;# 
  1751  0398                     	;# 
  1752  0399                     	;# 
  1753  039A                     	;# 
  1754  039C                     	;# 
  1755  039D                     	;# 
  1756  039E                     	;# 
  1757  039F                     	;# 
  1758  0498                     	;# 
  1759  0498                     	;# 
  1760  0499                     	;# 
  1761  049A                     	;# 
  1762  049B                     	;# 
  1763  049B                     	;# 
  1764  049C                     	;# 
  1765  049D                     	;# 
  1766  049E                     	;# 
  1767  049F                     	;# 
  1768  0617                     	;# 
  1769  0618                     	;# 
  1770  0619                     	;# 
  1771  0619                     	;# 
  1772  061A                     	;# 
  1773  061B                     	;# 
  1774  061C                     	;# 
  1775  061C                     	;# 
  1776  0691                     	;# 
  1777  0692                     	;# 
  1778  0693                     	;# 
  1779  0694                     	;# 
  1780  0695                     	;# 
  1781  0696                     	;# 
  1782  0697                     	;# 
  1783  0698                     	;# 
  1784  0699                     	;# 
  1785  0891                     	;# 
  1786  0891                     	;# 
  1787  0891                     	;# 
  1788  0891                     	;# 
  1789  0891                     	;# 
  1790  0891                     	;# 
  1791  0892                     	;# 
  1792  0892                     	;# 
  1793  0892                     	;# 
  1794  0893                     	;# 
  1795  0893                     	;# 
  1796  0893                     	;# 
  1797  0893                     	;# 
  1798  0893                     	;# 
  1799  0893                     	;# 
  1800  0894                     	;# 
  1801  0894                     	;# 
  1802  0894                     	;# 
  1803  0895                     	;# 
  1804  0895                     	;# 
  1805  0895                     	;# 
  1806  0896                     	;# 
  1807  0896                     	;# 
  1808  0896                     	;# 
  1809  089B                     	;# 
  1810  0911                     	;# 
  1811  0912                     	;# 
  1812  0913                     	;# 
  1813  0914                     	;# 
  1814  0915                     	;# 
  1815  0916                     	;# 
  1816  0918                     	;# 
  1817  0919                     	;# 
  1818  091A                     	;# 
  1819  091B                     	;# 
  1820  091C                     	;# 
  1821  091D                     	;# 
  1822  091E                     	;# 
  1823  091F                     	;# 
  1824  0E0F                     	;# 
  1825  0E10                     	;# 
  1826  0E11                     	;# 
  1827  0E12                     	;# 
  1828  0E13                     	;# 
  1829  0E14                     	;# 
  1830  0E15                     	;# 
  1831  0E18                     	;# 
  1832  0E1A                     	;# 
  1833  0E1B                     	;# 
  1834  0E1C                     	;# 
  1835  0E20                     	;# 
  1836  0E21                     	;# 
  1837  0E22                     	;# 
  1838  0E24                     	;# 
  1839  0E25                     	;# 
  1840  0E28                     	;# 
  1841  0E29                     	;# 
  1842  0E2A                     	;# 
  1843  0E2B                     	;# 
  1844  0E90                     	;# 
  1845  0E91                     	;# 
  1846  0E92                     	;# 
  1847  0E94                     	;# 
  1848  0E95                     	;# 
  1849  0EA0                     	;# 
  1850  0EA1                     	;# 
  1851  0EA2                     	;# 
  1852  0EA3                     	;# 
  1853  0EA4                     	;# 
  1854  0EA5                     	;# 
  1855  0F0F                     	;# 
  1856  0F10                     	;# 
  1857  0F11                     	;# 
  1858  0F12                     	;# 
  1859  0F13                     	;# 
  1860  0F14                     	;# 
  1861  0F15                     	;# 
  1862  0F16                     	;# 
  1863  0F17                     	;# 
  1864  0F18                     	;# 
  1865  0F19                     	;# 
  1866  0F1A                     	;# 
  1867  0F1B                     	;# 
  1868  0F1C                     	;# 
  1869  0F1D                     	;# 
  1870  0F1E                     	;# 
  1871  0F1F                     	;# 
  1872  0F20                     	;# 
  1873  0F21                     	;# 
  1874  0F22                     	;# 
  1875  0F23                     	;# 
  1876  0FE4                     	;# 
  1877  0FE5                     	;# 
  1878  0FE6                     	;# 
  1879  0FE7                     	;# 
  1880  0FE8                     	;# 
  1881  0FE9                     	;# 
  1882  0FEA                     	;# 
  1883  0FEB                     	;# 
  1884  0FED                     	;# 
  1885  0FEE                     	;# 
  1886  0FEF                     	;# 
  1887  0000                     	;# 
  1888  0001                     	;# 
  1889  0002                     	;# 
  1890  0003                     	;# 
  1891  0004                     	;# 
  1892  0005                     	;# 
  1893  0006                     	;# 
  1894  0007                     	;# 
  1895  0008                     	;# 
  1896  0009                     	;# 
  1897  000A                     	;# 
  1898  000B                     	;# 
  1899  000C                     	;# 
  1900  000E                     	;# 
  1901  0010                     	;# 
  1902  0011                     	;# 
  1903  0012                     	;# 
  1904  0013                     	;# 
  1905  0014                     	;# 
  1906  0015                     	;# 
  1907  0015                     	;# 
  1908  0016                     	;# 
  1909  0016                     	;# 
  1910  0017                     	;# 
  1911  0018                     	;# 
  1912  0019                     	;# 
  1913  0019                     	;# 
  1914  001A                     	;# 
  1915  001B                     	;# 
  1916  001C                     	;# 
  1917  001D                     	;# 
  1918  001E                     	;# 
  1919  001F                     	;# 
  1920  008C                     	;# 
  1921  008E                     	;# 
  1922  0090                     	;# 
  1923  0091                     	;# 
  1924  0092                     	;# 
  1925  0093                     	;# 
  1926  0094                     	;# 
  1927  0097                     	;# 
  1928  009B                     	;# 
  1929  009B                     	;# 
  1930  009C                     	;# 
  1931  009D                     	;# 
  1932  009E                     	;# 
  1933  009F                     	;# 
  1934  010C                     	;# 
  1935  010E                     	;# 
  1936  0111                     	;# 
  1937  0112                     	;# 
  1938  0113                     	;# 
  1939  0114                     	;# 
  1940  0115                     	;# 
  1941  0116                     	;# 
  1942  0117                     	;# 
  1943  0118                     	;# 
  1944  0119                     	;# 
  1945  018C                     	;# 
  1946  018E                     	;# 
  1947  0199                     	;# 
  1948  0199                     	;# 
  1949  0199                     	;# 
  1950  019A                     	;# 
  1951  019A                     	;# 
  1952  019A                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019C                     	;# 
  1961  019D                     	;# 
  1962  019D                     	;# 
  1963  019D                     	;# 
  1964  019E                     	;# 
  1965  019E                     	;# 
  1966  019E                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  020C                     	;# 
  1973  020E                     	;# 
  1974  0211                     	;# 
  1975  0211                     	;# 
  1976  0212                     	;# 
  1977  0212                     	;# 
  1978  0213                     	;# 
  1979  0213                     	;# 
  1980  0214                     	;# 
  1981  0214                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0216                     	;# 
  1987  0216                     	;# 
  1988  0217                     	;# 
  1989  0217                     	;# 
  1990  028C                     	;# 
  1991  028E                     	;# 
  1992  0291                     	;# 
  1993  0291                     	;# 
  1994  0292                     	;# 
  1995  0293                     	;# 
  1996  0294                     	;# 
  1997  0295                     	;# 
  1998  0295                     	;# 
  1999  0296                     	;# 
  2000  0297                     	;# 
  2001  0298                     	;# 
  2002  030C                     	;# 
  2003  030E                     	;# 
  2004  038C                     	;# 
  2005  038E                     	;# 
  2006  0391                     	;# 
  2007  0392                     	;# 
  2008  0393                     	;# 
  2009  0397                     	;# 
  2010  0398                     	;# 
  2011  0399                     	;# 
  2012  039A                     	;# 
  2013  039C                     	;# 
  2014  039D                     	;# 
  2015  039E                     	;# 
  2016  039F                     	;# 
  2017  0498                     	;# 
  2018  0498                     	;# 
  2019  0499                     	;# 
  2020  049A                     	;# 
  2021  049B                     	;# 
  2022  049B                     	;# 
  2023  049C                     	;# 
  2024  049D                     	;# 
  2025  049E                     	;# 
  2026  049F                     	;# 
  2027  0617                     	;# 
  2028  0618                     	;# 
  2029  0619                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061C                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  0695                     	;# 
  2040  0696                     	;# 
  2041  0697                     	;# 
  2042  0698                     	;# 
  2043  0699                     	;# 
  2044  0891                     	;# 
  2045  0891                     	;# 
  2046  0891                     	;# 
  2047  0891                     	;# 
  2048  0891                     	;# 
  2049  0891                     	;# 
  2050  0892                     	;# 
  2051  0892                     	;# 
  2052  0892                     	;# 
  2053  0893                     	;# 
  2054  0893                     	;# 
  2055  0893                     	;# 
  2056  0893                     	;# 
  2057  0893                     	;# 
  2058  0893                     	;# 
  2059  0894                     	;# 
  2060  0894                     	;# 
  2061  0894                     	;# 
  2062  0895                     	;# 
  2063  0895                     	;# 
  2064  0895                     	;# 
  2065  0896                     	;# 
  2066  0896                     	;# 
  2067  0896                     	;# 
  2068  089B                     	;# 
  2069  0911                     	;# 
  2070  0912                     	;# 
  2071  0913                     	;# 
  2072  0914                     	;# 
  2073  0915                     	;# 
  2074  0916                     	;# 
  2075  0918                     	;# 
  2076  0919                     	;# 
  2077  091A                     	;# 
  2078  091B                     	;# 
  2079  091C                     	;# 
  2080  091D                     	;# 
  2081  091E                     	;# 
  2082  091F                     	;# 
  2083  0E0F                     	;# 
  2084  0E10                     	;# 
  2085  0E11                     	;# 
  2086  0E12                     	;# 
  2087  0E13                     	;# 
  2088  0E14                     	;# 
  2089  0E15                     	;# 
  2090  0E18                     	;# 
  2091  0E1A                     	;# 
  2092  0E1B                     	;# 
  2093  0E1C                     	;# 
  2094  0E20                     	;# 
  2095  0E21                     	;# 
  2096  0E22                     	;# 
  2097  0E24                     	;# 
  2098  0E25                     	;# 
  2099  0E28                     	;# 
  2100  0E29                     	;# 
  2101  0E2A                     	;# 
  2102  0E2B                     	;# 
  2103  0E90                     	;# 
  2104  0E91                     	;# 
  2105  0E92                     	;# 
  2106  0E94                     	;# 
  2107  0E95                     	;# 
  2108  0EA0                     	;# 
  2109  0EA1                     	;# 
  2110  0EA2                     	;# 
  2111  0EA3                     	;# 
  2112  0EA4                     	;# 
  2113  0EA5                     	;# 
  2114  0F0F                     	;# 
  2115  0F10                     	;# 
  2116  0F11                     	;# 
  2117  0F12                     	;# 
  2118  0F13                     	;# 
  2119  0F14                     	;# 
  2120  0F15                     	;# 
  2121  0F16                     	;# 
  2122  0F17                     	;# 
  2123  0F18                     	;# 
  2124  0F19                     	;# 
  2125  0F1A                     	;# 
  2126  0F1B                     	;# 
  2127  0F1C                     	;# 
  2128  0F1D                     	;# 
  2129  0F1E                     	;# 
  2130  0F1F                     	;# 
  2131  0F20                     	;# 
  2132  0F21                     	;# 
  2133  0F22                     	;# 
  2134  0F23                     	;# 
  2135  0FE4                     	;# 
  2136  0FE5                     	;# 
  2137  0FE6                     	;# 
  2138  0FE7                     	;# 
  2139  0FE8                     	;# 
  2140  0FE9                     	;# 
  2141  0FEA                     	;# 
  2142  0FEB                     	;# 
  2143  0FED                     	;# 
  2144  0FEE                     	;# 
  2145  0FEF                     	;# 
  2146                           
  2147                           	psect	idataBANK0
  2148  0315                     __pidataBANK0:
  2149                           
  2150                           ;initializer for _speed_value
  2151  0315  34E7               	retlw	231
  2152  0316  3403               	retlw	3
  2153                           
  2154                           ;initializer for _StepNum
  2155  0317  3403               	retlw	3
  2156                           
  2157                           	psect	nvBANK0
  2158  003A                     __pnvBANK0:
  2159  003A                     _step_counts:
  2160  003A                     	ds	2
  2161  003C                     _hall_value:
  2162  003C                     	ds	2
  2163  003E                     _INT_InterruptHandler:
  2164  003E                     	ds	2
  2165  0040                     _TMR0_InterruptHandler:
  2166  0040                     	ds	2
  2167  000E                     _PORTCbits	set	14
  2168  000B                     _INTCONbits	set	11
  2169  0017                     _T0CON0bits	set	23
  2170  0017                     _T0CON0	set	23
  2171  0010                     _PIR0bits	set	16
  2172  0015                     _TMR0L	set	21
  2173  0016                     _TMR0H	set	22
  2174  0018                     _T0CON1	set	24
  2175  008E                     _TRISCbits	set	142
  2176  0090                     _PIE0bits	set	144
  2177  008E                     _TRISC	set	142
  2178  008C                     _TRISA	set	140
  2179  0097                     _WDTCON	set	151
  2180  010C                     _LATAbits	set	268
  2181  010E                     _LATCbits	set	270
  2182  010E                     _LATC	set	270
  2183  010C                     _LATA	set	268
  2184  018E                     _ANSELCbits	set	398
  2185  018C                     _ANSELA	set	396
  2186  018E                     _ANSELC	set	398
  2187  020E                     _WPUC	set	526
  2188  020C                     _WPUA	set	524
  2189  028E                     _ODCONC	set	654
  2190  028C                     _ODCONA	set	652
  2191  030E                     _SLRCONC	set	782
  2192  030C                     _SLRCONA	set	780
  2193  038E                     _INLVLC	set	910
  2194  038C                     _INLVLA	set	908
  2195  0916                     _PMD5	set	2326
  2196  0915                     _PMD4	set	2325
  2197  0914                     _PMD3	set	2324
  2198  0913                     _PMD2	set	2323
  2199  0912                     _PMD1	set	2322
  2200  0911                     _PMD0	set	2321
  2201  091E                     _OSCTUNE	set	2334
  2202  091F                     _OSCFRQ	set	2335
  2203  091D                     _OSCEN	set	2333
  2204  091B                     _OSCCON3	set	2331
  2205  0919                     _OSCCON1	set	2329
  2206  0E10                     _INTPPS	set	3600
  2207                           
  2208                           	psect	cinit
  2209  002E                     start_initialization:	
  2210                           ; #config settings
  2211                           
  2212  002E                     __initialization:
  2213                           
  2214                           ; Initialize objects allocated to BANK0
  2215  002E  3183  2315  3180   	fcall	__pidataBANK0	;fetch initializer
  2216  0031  00C2               	movwf	__pdataBANK0& (0+127)
  2217  0032  3183  2316  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2218  0035  00C3               	movwf	(__pdataBANK0+1)& (0+127)
  2219  0036  3183  2317  3180   	fcall	__pidataBANK0+2	;fetch initializer
  2220  0039  00C4               	movwf	(__pdataBANK0+2)& (0+127)
  2221                           
  2222                           ; Clear objects allocated to COMMON
  2223  003A  01FA               	clrf	__pbssCOMMON& (0+127)
  2224  003B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2225  003C  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  2226  003D  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  2227                           
  2228                           ; Clear objects allocated to BANK0
  2229  003E  3020               	movlw	low __pbssBANK0
  2230  003F  0084               	movwf	4
  2231  0040  3000               	movlw	high __pbssBANK0
  2232  0041  0085               	movwf	5
  2233  0042  301A               	movlw	26
  2234  0043  3182  22F9  3180   	fcall	clear_ram0
  2235  0046                     end_of_initialization:	
  2236                           ;End of C runtime variable initialization code
  2237                           
  2238  0046                     __end_of__initialization:
  2239  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2240  0047  0020               	movlb	0
  2241  0048  2A68               	ljmp	_main	;jump to C main() function
  2242                           
  2243                           	psect	bssCOMMON
  2244  007A                     __pbssCOMMON:
  2245  007A                     _speed_stimer:
  2246  007A                     	ds	2
  2247  007C                     _motor_dir:
  2248  007C                     	ds	1
  2249  007D                     _timer_flag:
  2250  007D                     	ds	1
  2251                           
  2252                           	psect	bssBANK0
  2253  0020                     __pbssBANK0:
  2254  0020                     _rx_array:
  2255  0020                     	ds	5
  2256  0025                     _step_errorlast:
  2257  0025                     	ds	2
  2258  0027                     _step_error:
  2259  0027                     	ds	2
  2260  0029                     _step_timer:
  2261  0029                     	ds	2
  2262  002B                     _hall_timer:
  2263  002B                     	ds	2
  2264  002D                     _speed_plow:
  2265  002D                     	ds	2
  2266  002F                     _speed_phigh:
  2267  002F                     	ds	2
  2268  0031                     _speed_low:
  2269  0031                     	ds	2
  2270  0033                     _speed_high:
  2271  0033                     	ds	2
  2272  0035                     _rev_timer:
  2273  0035                     	ds	1
  2274  0036                     _rx_pointer:
  2275  0036                     	ds	1
  2276  0037                     _speed_prev:
  2277  0037                     	ds	1
  2278  0038                     _stringer:
  2279  0038                     	ds	1
  2280  0039                     _hall_flag:
  2281  0039                     	ds	1
  2282                           
  2283                           	psect	dataBANK0
  2284  0042                     __pdataBANK0:
  2285  0042                     _speed_value:
  2286  0042                     	ds	2
  2287  0044                     _StepNum:
  2288  0044                     	ds	1
  2289                           
  2290                           	psect	clrtext
  2291  02F9                     clear_ram0:	
  2292                           ;	Called with FSR0 containing the base address, and
  2293                           ;	WREG with the size to clear
  2294                           
  2295  02F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2296  02FA                     clrloop0:
  2297  02FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2298  02FB  3101               	addfsr 0,1
  2299  02FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2300  02FD  2AFA               	goto	clrloop0	;have we reached the end yet?
  2301  02FE  3400               	retlw	0	;all done for this memory range, return
  2302                           
  2303                           	psect	cstackCOMMON
  2304  0070                     __pcstackCOMMON:
  2305  0070                     ?_PMD_Initialize:
  2306  0070                     ??_PMD_Initialize:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_PIN_MANAGER_Initialize:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ??_PIN_MANAGER_Initialize:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_OSCILLATOR_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ??_OSCILLATOR_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_WDT_Initialize:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ??_WDT_Initialize:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_EXT_INT_Initialize:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_TMR0_Initialize:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_TMR0_SetInterruptHandler:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_TMR0_DefaultInterruptHandler:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ??_TMR0_DefaultInterruptHandler:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_signal_handler:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??_signal_handler:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_INT_ISR:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ??_INT_ISR:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_INT_CallBack:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ??_INT_CallBack:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_motor_init:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_hall_handler:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_motor_handler:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_step_handler:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ??_step_handler:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_SYSTEM_Initialize:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_TMR0_ISR:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ??_TMR0_ISR:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_INTERRUPT_InterruptManager:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ??_INTERRUPT_InterruptManager:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_INT_SetInterruptHandler:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_INT_DefaultInterruptHandler:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ??_INT_DefaultInterruptHandler:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_main:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ?_speed_handler:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?___wmul:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?___lwdiv:	
  2409                           ; 2 bytes @ 0x0
  2410                           
  2411  0070                     step_handler@direction:	
  2412                           ; 2 bytes @ 0x0
  2413                           
  2414  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     INT_SetInterruptHandler@InterruptHandler:	
  2418                           ; 2 bytes @ 0x0
  2419                           
  2420  0070                     ___wmul@multiplier:	
  2421                           ; 2 bytes @ 0x0
  2422                           
  2423  0070                     ___lwdiv@divisor:	
  2424                           ; 2 bytes @ 0x0
  2425                           
  2426                           
  2427                           ; 2 bytes @ 0x0
  2428  0070                     	ds	2
  2429  0072                     ??_EXT_INT_Initialize:
  2430  0072                     ??_TMR0_Initialize:	
  2431                           ; 1 bytes @ 0x2
  2432                           
  2433  0072                     ??_TMR0_SetInterruptHandler:	
  2434                           ; 1 bytes @ 0x2
  2435                           
  2436  0072                     ??_motor_init:	
  2437                           ; 1 bytes @ 0x2
  2438                           
  2439  0072                     ??_SYSTEM_Initialize:	
  2440                           ; 1 bytes @ 0x2
  2441                           
  2442  0072                     ??_INT_SetInterruptHandler:	
  2443                           ; 1 bytes @ 0x2
  2444                           
  2445  0072                     ___wmul@multiplicand:	
  2446                           ; 1 bytes @ 0x2
  2447                           
  2448  0072                     ___lwdiv@dividend:	
  2449                           ; 2 bytes @ 0x2
  2450                           
  2451                           
  2452                           ; 2 bytes @ 0x2
  2453  0072                     	ds	2
  2454  0074                     ??___wmul:
  2455  0074                     ??___lwdiv:	
  2456                           ; 1 bytes @ 0x4
  2457                           
  2458  0074                     motor_init@i:	
  2459                           ; 1 bytes @ 0x4
  2460                           
  2461  0074                     ___wmul@product:	
  2462                           ; 2 bytes @ 0x4
  2463                           
  2464                           
  2465                           ; 2 bytes @ 0x4
  2466  0074                     	ds	1
  2467  0075                     ___lwdiv@quotient:
  2468                           
  2469                           ; 2 bytes @ 0x5
  2470  0075                     	ds	1
  2471  0076                     ??_speed_handler:
  2472  0076                     motor_init@i_422:	
  2473                           ; 1 bytes @ 0x6
  2474                           
  2475                           
  2476                           ; 2 bytes @ 0x6
  2477  0076                     	ds	1
  2478  0077                     ___lwdiv@counter:
  2479                           
  2480                           ; 1 bytes @ 0x7
  2481  0077                     	ds	1
  2482  0078                     ??_hall_handler:
  2483  0078                     motor_init@i_423:	
  2484                           ; 1 bytes @ 0x8
  2485                           
  2486                           
  2487                           ; 2 bytes @ 0x8
  2488  0078                     	ds	2
  2489  007A                     ??_motor_handler:
  2490  007A                     ??_main:	
  2491                           ; 1 bytes @ 0xA
  2492                           
  2493                           
  2494                           	psect	maintext
  2495  0268                     __pmaintext:	
  2496                           ; 1 bytes @ 0xA
  2497 ;;
  2498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2499 ;;
  2500 ;; *************** function _main *****************
  2501 ;; Defined at:
  2502 ;;		line 14 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : B1F/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2516 ;;      Params:         0       0       0       0
  2517 ;;      Locals:         0       0       0       0
  2518 ;;      Temps:          0       0       0       0
  2519 ;;      Totals:         0       0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels required when called: 7
  2522 ;; This function calls:
  2523 ;;		_SYSTEM_Initialize
  2524 ;;		_hall_handler
  2525 ;;		_motor_handler
  2526 ;;		_motor_init
  2527 ;; This function is called by:
  2528 ;;		Startup code after reset
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _main
  2534  0268                     _main:
  2535  0268                     l1599:	
  2536                           ;incstack = 0
  2537                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2538                           
  2539                           
  2540                           ;main.c: 15:     SYSTEM_Initialize();
  2541  0268  3182  22AE  3182   	fcall	_SYSTEM_Initialize
  2542  026B                     l1601:
  2543                           
  2544                           ;main.c: 17:     (INTCONbits.GIE = 1);
  2545  026B  178B               	bsf	11,7	;volatile
  2546  026C                     l1603:
  2547                           
  2548                           ;main.c: 18:     (INTCONbits.PEIE = 1);
  2549  026C  170B               	bsf	11,6	;volatile
  2550  026D                     l1605:
  2551                           
  2552                           ;main.c: 20:     motor_init();
  2553  026D  3180  2049  3182   	fcall	_motor_init
  2554  0270                     l1607:
  2555                           
  2556                           ;main.c: 23:         if(hall_flag == 1){
  2557  0270  0020               	movlb	0	; select bank0
  2558  0271  0339               	decf	_hall_flag,w
  2559  0272  1D03               	btfss	3,2
  2560  0273  2A75               	goto	u731
  2561  0274  2A76               	goto	u730
  2562  0275                     u731:
  2563  0275  2A7A               	goto	l1613
  2564  0276                     u730:
  2565  0276                     l1609:
  2566                           
  2567                           ;main.c: 24:             hall_flag = 0;
  2568  0276  01B9               	clrf	_hall_flag
  2569  0277                     l1611:
  2570                           
  2571                           ;main.c: 25:             hall_handler();
  2572  0277  3182  2286  3182   	fcall	_hall_handler
  2573  027A                     l1613:	
  2574                           ;main.c: 26:         }
  2575                           
  2576                           
  2577                           ;main.c: 30:         if(timer_flag == 1){
  2578  027A  037D               	decf	_timer_flag,w
  2579  027B  1D03               	btfss	3,2
  2580  027C  2A7E               	goto	u741
  2581  027D  2A7F               	goto	u740
  2582  027E                     u741:
  2583  027E  2A70               	goto	l1607
  2584  027F                     u740:
  2585  027F                     l1615:
  2586                           
  2587                           ;main.c: 31:             timer_flag = 0;
  2588  027F  01FD               	clrf	_timer_flag
  2589  0280                     l1617:
  2590                           
  2591                           ;main.c: 32:             motor_handler();
  2592  0280  3181  2130  3182   	fcall	_motor_handler
  2593  0283  0064               	clrwdt	;# 
  2594                           
  2595                           ;main.c: 34:         }
  2596  0284  2A70               	goto	l1607
  2597  0285  282D               	ljmp	start
  2598  0286                     __end_of_main:
  2599                           
  2600                           	psect	text1
  2601  0130                     __ptext1:	
  2602 ;; *************** function _motor_handler *****************
  2603 ;; Defined at:
  2604 ;;		line 86 in file "motor.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2618 ;;      Params:         0       0       0       0
  2619 ;;      Locals:         0       0       0       0
  2620 ;;      Temps:          0       0       0       0
  2621 ;;      Totals:         0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 6
  2625 ;; This function calls:
  2626 ;;		_motor_init
  2627 ;;		_speed_handler
  2628 ;;		_step_handler
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           
  2635                           ;psect for function _motor_handler
  2636  0130                     _motor_handler:
  2637  0130                     l1549:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _motor_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2640                           
  2641                           
  2642                           ;motor.c: 87:     step_timer++;
  2643  0130  3001               	movlw	1
  2644  0131  0020               	movlb	0	; select bank0
  2645  0132  07A9               	addwf	_step_timer,f
  2646  0133  3000               	movlw	0
  2647  0134  3DAA               	addwfc	_step_timer+1,f
  2648                           
  2649                           ;motor.c: 88:     hall_timer++;
  2650  0135  3001               	movlw	1
  2651  0136  07AB               	addwf	_hall_timer,f
  2652  0137  3000               	movlw	0
  2653  0138  3DAC               	addwfc	_hall_timer+1,f
  2654                           
  2655                           ;motor.c: 90:     if((speed_stimer >= 9U)&&(speed_stimer <= 11U)){
  2656  0139  3000               	movlw	0
  2657  013A  027B               	subwf	_speed_stimer+1,w
  2658  013B  3009               	movlw	9
  2659  013C  1903               	skipnz
  2660  013D  027A               	subwf	_speed_stimer,w
  2661  013E  1C03               	skipc
  2662  013F  2941               	goto	u631
  2663  0140  2942               	goto	u630
  2664  0141                     u631:
  2665  0141  2964               	goto	l1563
  2666  0142                     u630:
  2667  0142                     l1551:
  2668  0142  3000               	movlw	0
  2669  0143  027B               	subwf	_speed_stimer+1,w
  2670  0144  300C               	movlw	12
  2671  0145  1903               	skipnz
  2672  0146  027A               	subwf	_speed_stimer,w
  2673  0147  1803               	skipnc
  2674  0148  294A               	goto	u641
  2675  0149  294B               	goto	u640
  2676  014A                     u641:
  2677  014A  2964               	goto	l1563
  2678  014B                     u640:
  2679  014B                     l1553:
  2680                           
  2681                           ;motor.c: 92:         LATCbits.LATC1 = 0;
  2682  014B  0022               	movlb	2	; select bank2
  2683  014C  108E               	bcf	14,1	;volatile
  2684                           
  2685                           ;motor.c: 93:         LATCbits.LATC0 = 0;
  2686  014D  100E               	bcf	14,0	;volatile
  2687                           
  2688                           ;motor.c: 94:         LATCbits.LATC3 = 0;
  2689  014E  118E               	bcf	14,3	;volatile
  2690                           
  2691                           ;motor.c: 95:         LATAbits.LATA4 = 0;
  2692  014F  120C               	bcf	12,4	;volatile
  2693                           
  2694                           ;motor.c: 96:         LATAbits.LATA5 = 0;
  2695  0150  128C               	bcf	12,5	;volatile
  2696                           
  2697                           ;motor.c: 97:         LATCbits.LATC2 = 0;
  2698  0151  110E               	bcf	14,2	;volatile
  2699  0152                     l1555:
  2700                           
  2701                           ;motor.c: 99:         step_timer = 0U;
  2702  0152  0020               	movlb	0	; select bank0
  2703  0153  01A9               	clrf	_step_timer
  2704  0154  01AA               	clrf	_step_timer+1
  2705                           
  2706                           ;motor.c: 100:         hall_timer = 0U;
  2707  0155  01AB               	clrf	_hall_timer
  2708  0156  01AC               	clrf	_hall_timer+1
  2709  0157                     l1557:
  2710                           
  2711                           ;motor.c: 101:         step_counts = 2700U;
  2712  0157  308C               	movlw	140
  2713  0158  00BA               	movwf	_step_counts
  2714  0159  300A               	movlw	10
  2715  015A  00BB               	movwf	_step_counts+1
  2716  015B                     l1559:
  2717                           
  2718                           ;motor.c: 102:         speed_value = 2700U;
  2719  015B  308C               	movlw	140
  2720  015C  00C2               	movwf	_speed_value
  2721  015D  300A               	movlw	10
  2722  015E  00C3               	movwf	_speed_value+1
  2723  015F                     l1561:
  2724                           
  2725                           ;motor.c: 103:         hall_value = 2700U;
  2726  015F  308C               	movlw	140
  2727  0160  00BC               	movwf	_hall_value
  2728  0161  300A               	movlw	10
  2729  0162  00BD               	movwf	_hall_value+1
  2730                           
  2731                           ;motor.c: 104:     }
  2732  0163  2993               	goto	l298
  2733  0164                     l1563:
  2734                           
  2735                           ;motor.c: 106:         if(speed_stimer > 11U){
  2736  0164  3000               	movlw	0
  2737  0165  027B               	subwf	_speed_stimer+1,w
  2738  0166  300C               	movlw	12
  2739  0167  1903               	skipnz
  2740  0168  027A               	subwf	_speed_stimer,w
  2741  0169  1C03               	skipc
  2742  016A  296C               	goto	u651
  2743  016B  296D               	goto	u650
  2744  016C                     u651:
  2745  016C  2977               	goto	l1571
  2746  016D                     u650:
  2747  016D                     l1565:
  2748                           
  2749                           ;motor.c: 107:             if(motor_dir == 1){
  2750  016D  037C               	decf	_motor_dir,w
  2751  016E  1D03               	btfss	3,2
  2752  016F  2971               	goto	u661
  2753  0170  2972               	goto	u660
  2754  0171                     u661:
  2755  0171  297F               	goto	l1577
  2756  0172                     u660:
  2757  0172                     l1567:
  2758                           
  2759                           ;motor.c: 108:                 motor_dir = 0;
  2760  0172  01FC               	clrf	_motor_dir
  2761  0173                     l1569:
  2762                           
  2763                           ;motor.c: 109:                 motor_init();
  2764  0173  3180  2049  3181   	fcall	_motor_init
  2765  0176  297F               	goto	l1577
  2766  0177                     l1571:
  2767                           
  2768                           ;motor.c: 113:             if(motor_dir == 0){
  2769  0177  087C               	movf	_motor_dir,w
  2770  0178  1D03               	btfss	3,2
  2771  0179  297B               	goto	u671
  2772  017A  297C               	goto	u670
  2773  017B                     u671:
  2774  017B  297F               	goto	l1577
  2775  017C                     u670:
  2776  017C                     l1573:
  2777                           
  2778                           ;motor.c: 114:                 motor_dir = 1;
  2779  017C  01FC               	clrf	_motor_dir
  2780  017D  0AFC               	incf	_motor_dir,f
  2781  017E  2973               	goto	l1569
  2782  017F                     l1577:
  2783                           
  2784                           ;motor.c: 118:         if(step_timer >= step_counts){
  2785  017F  0020               	movlb	0	; select bank0
  2786  0180  083B               	movf	_step_counts+1,w
  2787  0181  022A               	subwf	_step_timer+1,w
  2788  0182  1D03               	skipz
  2789  0183  2986               	goto	u685
  2790  0184  083A               	movf	_step_counts,w
  2791  0185  0229               	subwf	_step_timer,w
  2792  0186                     u685:
  2793  0186  1C03               	skipc
  2794  0187  2989               	goto	u681
  2795  0188  298A               	goto	u680
  2796  0189                     u681:
  2797  0189  2993               	goto	l298
  2798  018A                     u680:
  2799  018A                     l1579:
  2800                           
  2801                           ;motor.c: 119:             step_timer = 0U;
  2802  018A  01A9               	clrf	_step_timer
  2803  018B  01AA               	clrf	_step_timer+1
  2804  018C                     l1581:
  2805                           
  2806                           ;motor.c: 120:             speed_handler();
  2807  018C  3181  21D0  3181   	fcall	_speed_handler
  2808  018F                     l1583:
  2809                           
  2810                           ;motor.c: 121:             step_handler(motor_dir);
  2811  018F  087C               	movf	_motor_dir,w
  2812  0190  3180  20C0  3181   	fcall	_step_handler
  2813  0193                     l298:	
  2814                           ;motor.c: 122:         }
  2815                           
  2816  0193  0008               	return
  2817  0194                     __end_of_motor_handler:
  2818                           
  2819                           	psect	text2
  2820  01D0                     __ptext2:	
  2821 ;; *************** function _speed_handler *****************
  2822 ;; Defined at:
  2823 ;;		line 60 in file "motor.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  speed_error     2    0        unsigned short 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2837 ;;      Params:         0       0       0       0
  2838 ;;      Locals:         0       0       0       0
  2839 ;;      Temps:          1       0       0       0
  2840 ;;      Totals:         1       0       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 5
  2844 ;; This function calls:
  2845 ;;		___wmul
  2846 ;; This function is called by:
  2847 ;;		_motor_handler
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _speed_handler
  2853  01D0                     _speed_handler:
  2854  01D0                     l1469:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _speed_handler: [wreg+status,2+status,0+pclath+cstack]
  2857                           
  2858  01D0                     l1471:
  2859                           
  2860                           ;motor.c: 63:     if(speed_stimer > 10U){
  2861  01D0  3000               	movlw	0
  2862  01D1  027B               	subwf	_speed_stimer+1,w
  2863  01D2  300B               	movlw	11
  2864  01D3  1903               	skipnz
  2865  01D4  027A               	subwf	_speed_stimer,w
  2866  01D5  1C03               	skipc
  2867  01D6  29D8               	goto	u501
  2868  01D7  29D9               	goto	u500
  2869  01D8                     u501:
  2870  01D8  29F3               	goto	l1477
  2871  01D9                     u500:
  2872  01D9                     l1473:
  2873                           
  2874                           ;motor.c: 64:         speed_value = speed_stimer - 10U;
  2875  01D9  087A               	movf	_speed_stimer,w
  2876  01DA  3EF6               	addlw	246
  2877  01DB  0020               	movlb	0	; select bank0
  2878  01DC  00C2               	movwf	_speed_value
  2879  01DD  30FF               	movlw	255
  2880  01DE  3D7B               	addwfc	_speed_stimer+1,w
  2881  01DF  00C3               	movwf	_speed_value+1
  2882  01E0                     l1475:
  2883                           
  2884                           ;motor.c: 65:         speed_value = 2700U - (speed_value*200U);
  2885  01E0  0843               	movf	_speed_value+1,w
  2886  01E1  00F1               	movwf	___wmul@multiplier+1
  2887  01E2  0842               	movf	_speed_value,w
  2888  01E3  00F0               	movwf	___wmul@multiplier
  2889  01E4  3038               	movlw	56
  2890  01E5  00F2               	movwf	___wmul@multiplicand
  2891  01E6  30FF               	movlw	255
  2892  01E7  00F3               	movwf	___wmul@multiplicand+1
  2893  01E8  3182  2249  3181   	fcall	___wmul
  2894  01EB  0870               	movf	?___wmul,w
  2895  01EC  3E8C               	addlw	140
  2896  01ED  0020               	movlb	0	; select bank0
  2897  01EE  00C2               	movwf	_speed_value
  2898  01EF  300A               	movlw	10
  2899  01F0  3D71               	addwfc	?___wmul+1,w
  2900  01F1  00C3               	movwf	_speed_value+1
  2901                           
  2902                           ;motor.c: 66:     }
  2903  01F2  29FE               	goto	l1481
  2904  01F3                     l1477:
  2905                           
  2906                           ;motor.c: 68:         speed_value = 10U - speed_stimer;
  2907  01F3  300A               	movlw	10
  2908  01F4  00F6               	movwf	??_speed_handler
  2909  01F5  087A               	movf	_speed_stimer,w
  2910  01F6  0276               	subwf	??_speed_handler,w
  2911  01F7  0020               	movlb	0	; select bank0
  2912  01F8  00C2               	movwf	_speed_value
  2913  01F9  097B               	comf	_speed_stimer+1,w
  2914  01FA  1803               	skipnc
  2915  01FB  0A89               	incf	9,f
  2916  01FC  00C3               	movwf	_speed_value+1
  2917  01FD  29E0               	goto	l1475
  2918  01FE                     l1481:
  2919                           
  2920                           ;motor.c: 72:     step_counts = speed_value;
  2921  01FE  0843               	movf	_speed_value+1,w
  2922  01FF  00BB               	movwf	_step_counts+1
  2923  0200  0842               	movf	_speed_value,w
  2924  0201  00BA               	movwf	_step_counts
  2925  0202                     l287:
  2926  0202  0008               	return
  2927  0203                     __end_of_speed_handler:
  2928                           
  2929                           	psect	text3
  2930  0249                     __ptext3:	
  2931 ;; *************** function ___wmul *****************
  2932 ;; Defined at:
  2933 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  multiplier      2    0[COMMON] unsigned int 
  2936 ;;  multiplicand    2    2[COMMON] unsigned int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  product         2    4[COMMON] unsigned int 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2    0[COMMON] unsigned int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2948 ;;      Params:         4       0       0       0
  2949 ;;      Locals:         2       0       0       0
  2950 ;;      Temps:          0       0       0       0
  2951 ;;      Totals:         6       0       0       0
  2952 ;;Total ram usage:        6 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 4
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_speed_handler
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function ___wmul
  2964  0249                     ___wmul:
  2965  0249                     l1339:	
  2966                           ;incstack = 0
  2967                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2968                           
  2969  0249  01F4               	clrf	___wmul@product
  2970  024A  01F5               	clrf	___wmul@product+1
  2971  024B                     l1341:
  2972  024B  1C70               	btfss	___wmul@multiplier,0
  2973  024C  2A4E               	goto	u411
  2974  024D  2A4F               	goto	u410
  2975  024E                     u411:
  2976  024E  2A53               	goto	l485
  2977  024F                     u410:
  2978  024F                     l1343:
  2979  024F  0872               	movf	___wmul@multiplicand,w
  2980  0250  07F4               	addwf	___wmul@product,f
  2981  0251  0873               	movf	___wmul@multiplicand+1,w
  2982  0252  3DF5               	addwfc	___wmul@product+1,f
  2983  0253                     l485:
  2984  0253  3001               	movlw	1
  2985  0254                     u425:
  2986  0254  35F2               	lslf	___wmul@multiplicand,f
  2987  0255  0DF3               	rlf	___wmul@multiplicand+1,f
  2988  0256  0B89               	decfsz	9,f
  2989  0257  2A54               	goto	u425
  2990  0258                     l1345:
  2991  0258  3001               	movlw	1
  2992  0259                     u435:
  2993  0259  36F1               	lsrf	___wmul@multiplier+1,f
  2994  025A  0CF0               	rrf	___wmul@multiplier,f
  2995  025B  0B89               	decfsz	9,f
  2996  025C  2A59               	goto	u435
  2997  025D                     l1347:
  2998  025D  0870               	movf	___wmul@multiplier,w
  2999  025E  0471               	iorwf	___wmul@multiplier+1,w
  3000  025F  1D03               	btfss	3,2
  3001  0260  2A62               	goto	u441
  3002  0261  2A63               	goto	u440
  3003  0262                     u441:
  3004  0262  2A4B               	goto	l1341
  3005  0263                     u440:
  3006  0263                     l1349:
  3007  0263  0875               	movf	___wmul@product+1,w
  3008  0264  00F1               	movwf	?___wmul+1
  3009  0265  0874               	movf	___wmul@product,w
  3010  0266  00F0               	movwf	?___wmul
  3011  0267                     l487:
  3012  0267  0008               	return
  3013  0268                     __end_of___wmul:
  3014                           
  3015                           	psect	text4
  3016  0049                     __ptext4:	
  3017 ;; *************** function _motor_init *****************
  3018 ;; Defined at:
  3019 ;;		line 13 in file "motor.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  i               2    8[COMMON] unsigned short 
  3024 ;;  i               2    6[COMMON] unsigned short 
  3025 ;;  i               2    4[COMMON] unsigned short 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3035 ;;      Params:         0       0       0       0
  3036 ;;      Locals:         6       0       0       0
  3037 ;;      Temps:          2       0       0       0
  3038 ;;      Totals:         8       0       0       0
  3039 ;;Total ram usage:        8 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 5
  3042 ;; This function calls:
  3043 ;;		_step_handler
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;;		_motor_handler
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _motor_init
  3052  0049                     _motor_init:
  3053  0049                     l1407:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _motor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3056                           
  3057                           
  3058                           ;motor.c: 14:     step_timer = 0U;
  3059  0049  0020               	movlb	0	; select bank0
  3060  004A  01A9               	clrf	_step_timer
  3061  004B  01AA               	clrf	_step_timer+1
  3062  004C                     l1409:
  3063                           
  3064                           ;motor.c: 15:     step_counts = 2700U;
  3065  004C  308C               	movlw	140
  3066  004D  00BA               	movwf	_step_counts
  3067  004E  300A               	movlw	10
  3068  004F  00BB               	movwf	_step_counts+1
  3069  0050                     l1411:
  3070                           
  3071                           ;motor.c: 16:     speed_value = 2700U;
  3072  0050  308C               	movlw	140
  3073  0051  00C2               	movwf	_speed_value
  3074  0052  300A               	movlw	10
  3075  0053  00C3               	movwf	_speed_value+1
  3076  0054                     l1413:
  3077                           
  3078                           ;motor.c: 17:     hall_value = 2700U;
  3079  0054  308C               	movlw	140
  3080  0055  00BC               	movwf	_hall_value
  3081  0056  300A               	movlw	10
  3082  0057  00BD               	movwf	_hall_value+1
  3083  0058                     l1415:
  3084                           
  3085                           ;motor.c: 19:     TRISCbits.TRISC4 = 1;
  3086  0058  0021               	movlb	1	; select bank1
  3087  0059  160E               	bsf	14,4	;volatile
  3088  005A                     l1417:
  3089                           
  3090                           ;motor.c: 20:     ANSELCbits.ANSC4 = 0;
  3091  005A  0023               	movlb	3	; select bank3
  3092  005B  120E               	bcf	14,4	;volatile
  3093  005C                     l1419:
  3094                           
  3095                           ;motor.c: 22:     if(motor_dir == 0U){
  3096  005C  087C               	movf	_motor_dir,w
  3097  005D  1D03               	btfss	3,2
  3098  005E  2860               	goto	u461
  3099  005F  2861               	goto	u460
  3100  0060                     u461:
  3101  0060  28A7               	goto	l1453
  3102  0061                     u460:
  3103  0061                     l1421:
  3104                           
  3105                           ;motor.c: 23:         for(uint16_t i = 0U; i < 5000U; i++){
  3106  0061  01F4               	clrf	motor_init@i
  3107  0062  01F5               	clrf	motor_init@i+1
  3108  0063                     l1427:
  3109                           
  3110                           ;motor.c: 24:             _delay((unsigned long)((60)*(32000000/4000000.0)));
  3111  0063  30A0               	movlw	160
  3112  0064                     u757:
  3113  0064  0B89               	decfsz	9,f
  3114  0065  2864               	goto	u757
  3115  0066                     l1429:
  3116                           
  3117                           ;motor.c: 25:             step_handler(0);
  3118  0066  3000               	movlw	0
  3119  0067  3180  20C0  3180   	fcall	_step_handler
  3120  006A                     l1431:
  3121                           
  3122                           ;motor.c: 26:         }
  3123  006A  3001               	movlw	1
  3124  006B  07F4               	addwf	motor_init@i,f
  3125  006C  3000               	movlw	0
  3126  006D  3DF5               	addwfc	motor_init@i+1,f
  3127  006E                     l1433:
  3128  006E  3013               	movlw	19
  3129  006F  0275               	subwf	motor_init@i+1,w
  3130  0070  3088               	movlw	136
  3131  0071  1903               	skipnz
  3132  0072  0274               	subwf	motor_init@i,w
  3133  0073  1C03               	skipc
  3134  0074  2876               	goto	u471
  3135  0075  2877               	goto	u470
  3136  0076                     u471:
  3137  0076  2863               	goto	l1427
  3138  0077                     u470:
  3139  0077                     l1435:
  3140                           
  3141                           ;motor.c: 27:         _delay((unsigned long)((100)*(32000000/4000.0)));
  3142  0077  3005               	movlw	5
  3143  0078  00F3               	movwf	??_motor_init+1
  3144  0079  300F               	movlw	15
  3145  007A  00F2               	movwf	??_motor_init
  3146  007B  30F1               	movlw	241
  3147  007C                     u767:
  3148  007C  0B89               	decfsz	9,f
  3149  007D  287C               	goto	u767
  3150  007E  0BF2               	decfsz	??_motor_init,f
  3151  007F  287C               	goto	u767
  3152  0080  0BF3               	decfsz	??_motor_init+1,f
  3153  0081  287C               	goto	u767
  3154  0082  0000               	nop
  3155  0083                     l1437:
  3156                           
  3157                           ;motor.c: 28:         for(uint16_t i = 0U; i < 10000U; i++){
  3158  0083  01F6               	clrf	motor_init@i_422
  3159  0084  01F7               	clrf	motor_init@i_422+1
  3160  0085                     l1443:
  3161                           
  3162                           ;motor.c: 29:             _delay((unsigned long)((20)*(32000000/4000000.0)));
  3163  0085  3035               	movlw	53
  3164  0086                     u777:
  3165  0086  0B89               	decfsz	9,f
  3166  0087  2886               	goto	u777
  3167  0088  0000               	nop
  3168  0089                     l1445:
  3169                           
  3170                           ;motor.c: 30:             step_handler(1);
  3171  0089  3001               	movlw	1
  3172  008A  3180  20C0  3180   	fcall	_step_handler
  3173  008D                     l1447:
  3174                           
  3175                           ;motor.c: 31:         }
  3176  008D  3001               	movlw	1
  3177  008E  07F6               	addwf	motor_init@i_422,f
  3178  008F  3000               	movlw	0
  3179  0090  3DF7               	addwfc	motor_init@i_422+1,f
  3180  0091                     l1449:
  3181  0091  3027               	movlw	39
  3182  0092  0277               	subwf	motor_init@i_422+1,w
  3183  0093  3010               	movlw	16
  3184  0094  1903               	skipnz
  3185  0095  0276               	subwf	motor_init@i_422,w
  3186  0096  1C03               	skipc
  3187  0097  2899               	goto	u481
  3188  0098  289A               	goto	u480
  3189  0099                     u481:
  3190  0099  2885               	goto	l1443
  3191  009A                     u480:
  3192  009A                     l1451:
  3193                           
  3194                           ;motor.c: 32:         _delay((unsigned long)((100)*(32000000/4000.0)));
  3195  009A  3005               	movlw	5
  3196  009B  00F3               	movwf	??_motor_init+1
  3197  009C  300F               	movlw	15
  3198  009D  00F2               	movwf	??_motor_init
  3199  009E  30F1               	movlw	241
  3200  009F                     u787:
  3201  009F  0B89               	decfsz	9,f
  3202  00A0  289F               	goto	u787
  3203  00A1  0BF2               	decfsz	??_motor_init,f
  3204  00A2  289F               	goto	u787
  3205  00A3  0BF3               	decfsz	??_motor_init+1,f
  3206  00A4  289F               	goto	u787
  3207  00A5  0000               	nop
  3208                           
  3209                           ;motor.c: 33:     }
  3210  00A6  28BF               	goto	l273
  3211  00A7                     l1453:
  3212                           
  3213                           ;motor.c: 35:         for(uint16_t i = 0U; i < 4000U; i++){
  3214  00A7  01F8               	clrf	motor_init@i_423
  3215  00A8  01F9               	clrf	motor_init@i_423+1
  3216  00A9                     l1459:
  3217                           
  3218                           ;motor.c: 36:             _delay((unsigned long)((120)*(32000000/4000000.0)));
  3219  00A9  30C0               	movlw	192
  3220  00AA                     u797:
  3221  00AA  3200               	nop2
  3222  00AB  0B89               	decfsz	9,f
  3223  00AC  28AA               	goto	u797
  3224  00AD                     l1461:
  3225                           
  3226                           ;motor.c: 37:             step_handler(0);
  3227  00AD  3000               	movlw	0
  3228  00AE  3180  20C0  3180   	fcall	_step_handler
  3229  00B1                     l1463:
  3230                           
  3231                           ;motor.c: 38:         }
  3232  00B1  3001               	movlw	1
  3233  00B2  07F8               	addwf	motor_init@i_423,f
  3234  00B3  3000               	movlw	0
  3235  00B4  3DF9               	addwfc	motor_init@i_423+1,f
  3236  00B5                     l1465:
  3237  00B5  300F               	movlw	15
  3238  00B6  0279               	subwf	motor_init@i_423+1,w
  3239  00B7  30A0               	movlw	160
  3240  00B8  1903               	skipnz
  3241  00B9  0278               	subwf	motor_init@i_423,w
  3242  00BA  1C03               	skipc
  3243  00BB  28BD               	goto	u491
  3244  00BC  28BE               	goto	u490
  3245  00BD                     u491:
  3246  00BD  28A9               	goto	l1459
  3247  00BE                     u490:
  3248  00BE  289A               	goto	l1451
  3249  00BF                     l273:
  3250  00BF  0008               	return
  3251  00C0                     __end_of_motor_init:
  3252                           
  3253                           	psect	text5
  3254  00C0                     __ptext5:	
  3255 ;; *************** function _step_handler *****************
  3256 ;; Defined at:
  3257 ;;		line 129 in file "motor.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  direction       1    wreg     _Bool 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  direction       1    0[COMMON] _Bool 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3271 ;;      Params:         0       0       0       0
  3272 ;;      Locals:         0       0       0       0
  3273 ;;      Temps:          2       0       0       0
  3274 ;;      Totals:         2       0       0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 4
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_motor_init
  3282 ;;		_motor_handler
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _step_handler
  3288  00C0                     _step_handler:
  3289  00C0                     l1301:	
  3290                           ;incstack = 0
  3291                           ; Regs used in _step_handler: [wreg-fsr0h+status,2+status,0]
  3292                           
  3293  00C0  28CB               	goto	l1309
  3294  00C1                     l1305:
  3295                           
  3296                           ;motor.c: 133:             StepNum--;
  3297  00C1  3001               	movlw	1
  3298  00C2  0020               	movlb	0	; select bank0
  3299  00C3  02C4               	subwf	_StepNum,f
  3300                           
  3301                           ;motor.c: 134:         }
  3302  00C4  2913               	goto	l1333
  3303  00C5                     l1307:
  3304                           
  3305                           ;motor.c: 136:             StepNum++;
  3306  00C5  3001               	movlw	1
  3307  00C6  00F0               	movwf	??_step_handler
  3308  00C7  0870               	movf	??_step_handler,w
  3309  00C8  0020               	movlb	0	; select bank0
  3310  00C9  07C4               	addwf	_StepNum,f
  3311  00CA  2913               	goto	l1333
  3312  00CB                     l1309:
  3313                           
  3314                           ;motor.c: 140:         if(motor_dir == 0){
  3315  00CB  087C               	movf	_motor_dir,w
  3316  00CC  1D03               	btfss	3,2
  3317  00CD  28CF               	goto	u381
  3318  00CE  28D0               	goto	u380
  3319  00CF                     u381:
  3320  00CF  28C1               	goto	l1305
  3321  00D0                     u380:
  3322  00D0  28C5               	goto	l1307
  3323  00D1                     l310:	
  3324                           ;motor.c: 149:         case 1:
  3325                           
  3326                           
  3327                           ;motor.c: 151:             LATCbits.LATC1 = 0;
  3328  00D1  0022               	movlb	2	; select bank2
  3329  00D2  108E               	bcf	14,1	;volatile
  3330                           
  3331                           ;motor.c: 152:             LATCbits.LATC0 = 0;
  3332  00D3  100E               	bcf	14,0	;volatile
  3333                           
  3334                           ;motor.c: 153:             LATCbits.LATC3 = 0;
  3335  00D4  118E               	bcf	14,3	;volatile
  3336                           
  3337                           ;motor.c: 154:             LATAbits.LATA4 = 0;
  3338  00D5  120C               	bcf	12,4	;volatile
  3339                           
  3340                           ;motor.c: 155:             LATAbits.LATA5 = 1;
  3341  00D6  168C               	bsf	12,5	;volatile
  3342                           
  3343                           ;motor.c: 157:             if(((4U == 1U)||(4U == 3U))&&(motor_dir == 0)){
  3344  00D7  150E               	bsf	14,2	;volatile
  3345  00D8                     l1319:
  3346  00D8  037C               	decf	_motor_dir,w
  3347  00D9  1D03               	btfss	3,2
  3348  00DA  28DC               	goto	u391
  3349  00DB  28DD               	goto	u390
  3350  00DC                     u391:
  3351  00DC  28E3               	goto	l314
  3352  00DD                     u390:
  3353  00DD                     l1321:
  3354                           
  3355                           ;motor.c: 161:                  StepNum = 7;
  3356  00DD  3007               	movlw	7
  3357  00DE  00F0               	movwf	??_step_handler
  3358  00DF  0870               	movf	??_step_handler,w
  3359  00E0  0020               	movlb	0	; select bank0
  3360  00E1  00C4               	movwf	_StepNum
  3361                           
  3362                           ;motor.c: 162:             }
  3363  00E2  292F               	goto	l333
  3364  00E3                     l314:
  3365                           
  3366                           ;motor.c: 166:             break;
  3367  00E3  292F               	goto	l333
  3368  00E4                     l320:	
  3369                           ;motor.c: 168:         case 2:
  3370                           
  3371                           
  3372                           ;motor.c: 170:             LATCbits.LATC1 = 0;
  3373  00E4  0022               	movlb	2	; select bank2
  3374  00E5  108E               	bcf	14,1	;volatile
  3375                           
  3376                           ;motor.c: 171:             LATCbits.LATC0 = 0;
  3377  00E6  100E               	bcf	14,0	;volatile
  3378                           
  3379                           ;motor.c: 172:             LATAbits.LATA4 = 0;
  3380  00E7  120C               	bcf	12,4	;volatile
  3381                           
  3382                           ;motor.c: 173:             LATAbits.LATA5 = 0;
  3383  00E8  128C               	bcf	12,5	;volatile
  3384                           
  3385                           ;motor.c: 174:             LATCbits.LATC3 = 1;
  3386  00E9  158E               	bsf	14,3	;volatile
  3387                           
  3388                           ;motor.c: 175:             LATCbits.LATC2 = 1;
  3389  00EA  150E               	bsf	14,2	;volatile
  3390                           
  3391                           ;motor.c: 176:             break;
  3392  00EB  292F               	goto	l333
  3393  00EC                     l321:	
  3394                           ;motor.c: 178:         case 3:
  3395                           
  3396                           
  3397                           ;motor.c: 180:             LATCbits.LATC1 = 0;
  3398  00EC  0022               	movlb	2	; select bank2
  3399  00ED  108E               	bcf	14,1	;volatile
  3400                           
  3401                           ;motor.c: 181:             LATAbits.LATA4 = 0;
  3402  00EE  120C               	bcf	12,4	;volatile
  3403                           
  3404                           ;motor.c: 182:             LATAbits.LATA5 = 0;
  3405  00EF  128C               	bcf	12,5	;volatile
  3406                           
  3407                           ;motor.c: 183:             LATCbits.LATC2 = 0;
  3408  00F0  110E               	bcf	14,2	;volatile
  3409                           
  3410                           ;motor.c: 184:             LATCbits.LATC3 = 1;
  3411  00F1  158E               	bsf	14,3	;volatile
  3412                           
  3413                           ;motor.c: 185:             LATCbits.LATC0 = 1;
  3414  00F2  140E               	bsf	14,0	;volatile
  3415                           
  3416                           ;motor.c: 186:             break;
  3417  00F3  292F               	goto	l333
  3418  00F4                     l322:	
  3419                           ;motor.c: 188:         case 4:
  3420                           
  3421                           
  3422                           ;motor.c: 190:             LATAbits.LATA4 = 0;
  3423  00F4  0022               	movlb	2	; select bank2
  3424  00F5  120C               	bcf	12,4	;volatile
  3425                           
  3426                           ;motor.c: 191:             LATAbits.LATA5 = 0;
  3427  00F6  128C               	bcf	12,5	;volatile
  3428                           
  3429                           ;motor.c: 192:             LATCbits.LATC2 = 0;
  3430  00F7  110E               	bcf	14,2	;volatile
  3431                           
  3432                           ;motor.c: 193:             LATCbits.LATC3 = 0;
  3433  00F8  118E               	bcf	14,3	;volatile
  3434                           
  3435                           ;motor.c: 194:             LATCbits.LATC1 = 1;
  3436  00F9  148E               	bsf	14,1	;volatile
  3437                           
  3438                           ;motor.c: 195:             LATCbits.LATC0 = 1;
  3439  00FA  140E               	bsf	14,0	;volatile
  3440                           
  3441                           ;motor.c: 196:             break;
  3442  00FB  292F               	goto	l333
  3443  00FC                     l323:	
  3444                           ;motor.c: 198:         case 5:
  3445                           
  3446                           
  3447                           ;motor.c: 200:             LATCbits.LATC3 = 0;
  3448  00FC  0022               	movlb	2	; select bank2
  3449  00FD  118E               	bcf	14,3	;volatile
  3450                           
  3451                           ;motor.c: 201:             LATAbits.LATA5 = 0;
  3452  00FE  128C               	bcf	12,5	;volatile
  3453                           
  3454                           ;motor.c: 202:             LATCbits.LATC2 = 0;
  3455  00FF  110E               	bcf	14,2	;volatile
  3456                           
  3457                           ;motor.c: 203:             LATCbits.LATC0 = 0;
  3458  0100  100E               	bcf	14,0	;volatile
  3459                           
  3460                           ;motor.c: 204:             LATCbits.LATC1 = 1;
  3461  0101  148E               	bsf	14,1	;volatile
  3462                           
  3463                           ;motor.c: 205:             LATAbits.LATA4 = 1;
  3464  0102  160C               	bsf	12,4	;volatile
  3465                           
  3466                           ;motor.c: 206:             break;
  3467  0103  292F               	goto	l333
  3468  0104                     l324:	
  3469                           ;motor.c: 208:         case 6:
  3470                           
  3471                           
  3472                           ;motor.c: 210:             LATCbits.LATC0 = 0;
  3473  0104  0022               	movlb	2	; select bank2
  3474  0105  100E               	bcf	14,0	;volatile
  3475                           
  3476                           ;motor.c: 211:             LATCbits.LATC3 = 0;
  3477  0106  118E               	bcf	14,3	;volatile
  3478                           
  3479                           ;motor.c: 212:             LATCbits.LATC2 = 0;
  3480  0107  110E               	bcf	14,2	;volatile
  3481                           
  3482                           ;motor.c: 213:             LATCbits.LATC1 = 0;
  3483  0108  108E               	bcf	14,1	;volatile
  3484                           
  3485                           ;motor.c: 214:             LATAbits.LATA5 = 1;
  3486  0109  168C               	bsf	12,5	;volatile
  3487                           
  3488                           ;motor.c: 217:             if(((4U == 1U)||(4U == 3U))&&(motor_dir == 1)){
  3489  010A  160C               	bsf	12,4	;volatile
  3490  010B                     l1327:
  3491  010B  087C               	movf	_motor_dir,w
  3492  010C  1D03               	btfss	3,2
  3493  010D  290F               	goto	u401
  3494  010E  2910               	goto	u400
  3495  010F                     u401:
  3496  010F  292F               	goto	l333
  3497  0110                     u400:
  3498  0110                     l1329:
  3499                           
  3500                           ;motor.c: 221:                  StepNum = 0;
  3501  0110  0020               	movlb	0	; select bank0
  3502  0111  01C4               	clrf	_StepNum
  3503                           
  3504                           ;motor.c: 222:             }
  3505  0112  292F               	goto	l333
  3506  0113                     l1333:
  3507  0113  0844               	movf	_StepNum,w
  3508  0114  00F0               	movwf	??_step_handler
  3509  0115  01F1               	clrf	??_step_handler+1
  3510                           
  3511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3512                           ; Switch size 1, requested type "simple"
  3513                           ; Number of cases is 1, Range of values is 0 to 0
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte            4     3 (average)
  3517                           ; direct_byte            8     6 (fixed)
  3518                           ; jumptable            260     6 (fixed)
  3519                           ;	Chosen strategy is simple_byte
  3520  0116  0871               	movf	??_step_handler+1,w
  3521  0117  3A00               	xorlw	0	; case 0
  3522  0118  1903               	skipnz
  3523  0119  291B               	goto	l1639
  3524  011A  292F               	goto	l333
  3525  011B                     l1639:
  3526                           
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 6, Range of values is 1 to 6
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte           19    10 (average)
  3532                           ; direct_byte           21     9 (fixed)
  3533                           ; jumptable            263     9 (fixed)
  3534                           ;	Chosen strategy is simple_byte
  3535  011B  0870               	movf	??_step_handler,w
  3536  011C  3A01               	xorlw	1	; case 1
  3537  011D  1903               	skipnz
  3538  011E  28D1               	goto	l310
  3539  011F  3A03               	xorlw	3	; case 2
  3540  0120  1903               	skipnz
  3541  0121  28E4               	goto	l320
  3542  0122  3A01               	xorlw	1	; case 3
  3543  0123  1903               	skipnz
  3544  0124  28EC               	goto	l321
  3545  0125  3A07               	xorlw	7	; case 4
  3546  0126  1903               	skipnz
  3547  0127  28F4               	goto	l322
  3548  0128  3A01               	xorlw	1	; case 5
  3549  0129  1903               	skipnz
  3550  012A  28FC               	goto	l323
  3551  012B  3A03               	xorlw	3	; case 6
  3552  012C  1903               	skipnz
  3553  012D  2904               	goto	l324
  3554  012E  292F               	goto	l333
  3555  012F                     l333:
  3556  012F  0008               	return
  3557  0130                     __end_of_step_handler:
  3558                           
  3559                           	psect	text6
  3560  0286                     __ptext6:	
  3561 ;; *************** function _hall_handler *****************
  3562 ;; Defined at:
  3563 ;;		line 43 in file "motor.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3577 ;;      Params:         0       0       0       0
  3578 ;;      Locals:         0       0       0       0
  3579 ;;      Temps:          0       0       0       0
  3580 ;;      Totals:         0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 5
  3584 ;; This function calls:
  3585 ;;		___lwdiv
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _hall_handler
  3593  0286                     _hall_handler:
  3594  0286                     l1545:	
  3595                           ;incstack = 0
  3596                           ; Regs used in _hall_handler: [wreg+status,2+status,0+pclath+cstack]
  3597                           
  3598                           
  3599                           ;motor.c: 44:     hall_value = (hall_timer/3U);
  3600  0286  3003               	movlw	3
  3601  0287  00F0               	movwf	___lwdiv@divisor
  3602  0288  3000               	movlw	0
  3603  0289  00F1               	movwf	___lwdiv@divisor+1
  3604  028A  0020               	movlb	0	; select bank0
  3605  028B  082C               	movf	_hall_timer+1,w
  3606  028C  00F3               	movwf	___lwdiv@dividend+1
  3607  028D  082B               	movf	_hall_timer,w
  3608  028E  00F2               	movwf	___lwdiv@dividend
  3609  028F  3181  2194  3182   	fcall	___lwdiv
  3610  0292  0871               	movf	?___lwdiv+1,w
  3611  0293  0020               	movlb	0	; select bank0
  3612  0294  00BD               	movwf	_hall_value+1
  3613  0295  0870               	movf	?___lwdiv,w
  3614  0296  00BC               	movwf	_hall_value
  3615  0297                     l1547:
  3616                           
  3617                           ;motor.c: 45:     hall_timer = 0U;
  3618  0297  01AB               	clrf	_hall_timer
  3619  0298  01AC               	clrf	_hall_timer+1
  3620  0299                     l276:
  3621  0299  0008               	return
  3622  029A                     __end_of_hall_handler:
  3623                           
  3624                           	psect	text7
  3625  0194                     __ptext7:	
  3626 ;; *************** function ___lwdiv *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  divisor         2    0[COMMON] unsigned int 
  3631 ;;  dividend        2    2[COMMON] unsigned int 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  quotient        2    5[COMMON] unsigned int 
  3634 ;;  counter         1    7[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  2    0[COMMON] unsigned int 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3644 ;;      Params:         4       0       0       0
  3645 ;;      Locals:         3       0       0       0
  3646 ;;      Temps:          1       0       0       0
  3647 ;;      Totals:         8       0       0       0
  3648 ;;Total ram usage:        8 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_hall_handler
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function ___lwdiv
  3660  0194                     ___lwdiv:
  3661  0194                     l1483:	
  3662                           ;incstack = 0
  3663                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3664                           
  3665  0194  01F5               	clrf	___lwdiv@quotient
  3666  0195  01F6               	clrf	___lwdiv@quotient+1
  3667  0196                     l1485:
  3668  0196  0870               	movf	___lwdiv@divisor,w
  3669  0197  0471               	iorwf	___lwdiv@divisor+1,w
  3670  0198  1903               	btfsc	3,2
  3671  0199  299B               	goto	u511
  3672  019A  299C               	goto	u510
  3673  019B                     u511:
  3674  019B  29CB               	goto	l1505
  3675  019C                     u510:
  3676  019C                     l1487:
  3677  019C  01F7               	clrf	___lwdiv@counter
  3678  019D  0AF7               	incf	___lwdiv@counter,f
  3679  019E  29A8               	goto	l1493
  3680  019F                     l1489:
  3681  019F  3001               	movlw	1
  3682  01A0                     u525:
  3683  01A0  35F0               	lslf	___lwdiv@divisor,f
  3684  01A1  0DF1               	rlf	___lwdiv@divisor+1,f
  3685  01A2  0B89               	decfsz	9,f
  3686  01A3  29A0               	goto	u525
  3687  01A4                     l1491:
  3688  01A4  3001               	movlw	1
  3689  01A5  00F4               	movwf	??___lwdiv
  3690  01A6  0874               	movf	??___lwdiv,w
  3691  01A7  07F7               	addwf	___lwdiv@counter,f
  3692  01A8                     l1493:
  3693  01A8  1FF1               	btfss	___lwdiv@divisor+1,7
  3694  01A9  29AB               	goto	u531
  3695  01AA  29AC               	goto	u530
  3696  01AB                     u531:
  3697  01AB  299F               	goto	l1489
  3698  01AC                     u530:
  3699  01AC                     l1495:
  3700  01AC  3001               	movlw	1
  3701  01AD                     u545:
  3702  01AD  35F5               	lslf	___lwdiv@quotient,f
  3703  01AE  0DF6               	rlf	___lwdiv@quotient+1,f
  3704  01AF  0B89               	decfsz	9,f
  3705  01B0  29AD               	goto	u545
  3706  01B1  0871               	movf	___lwdiv@divisor+1,w
  3707  01B2  0273               	subwf	___lwdiv@dividend+1,w
  3708  01B3  1D03               	skipz
  3709  01B4  29B7               	goto	u555
  3710  01B5  0870               	movf	___lwdiv@divisor,w
  3711  01B6  0272               	subwf	___lwdiv@dividend,w
  3712  01B7                     u555:
  3713  01B7  1C03               	skipc
  3714  01B8  29BA               	goto	u551
  3715  01B9  29BB               	goto	u550
  3716  01BA                     u551:
  3717  01BA  29C0               	goto	l1501
  3718  01BB                     u550:
  3719  01BB                     l1497:
  3720  01BB  0870               	movf	___lwdiv@divisor,w
  3721  01BC  02F2               	subwf	___lwdiv@dividend,f
  3722  01BD  0871               	movf	___lwdiv@divisor+1,w
  3723  01BE  3BF3               	subwfb	___lwdiv@dividend+1,f
  3724  01BF                     l1499:
  3725  01BF  1475               	bsf	___lwdiv@quotient,0
  3726  01C0                     l1501:
  3727  01C0  3001               	movlw	1
  3728  01C1                     u565:
  3729  01C1  36F1               	lsrf	___lwdiv@divisor+1,f
  3730  01C2  0CF0               	rrf	___lwdiv@divisor,f
  3731  01C3  0B89               	decfsz	9,f
  3732  01C4  29C1               	goto	u565
  3733  01C5                     l1503:
  3734  01C5  3001               	movlw	1
  3735  01C6  02F7               	subwf	___lwdiv@counter,f
  3736  01C7  1D03               	btfss	3,2
  3737  01C8  29CA               	goto	u571
  3738  01C9  29CB               	goto	u570
  3739  01CA                     u571:
  3740  01CA  29AC               	goto	l1495
  3741  01CB                     u570:
  3742  01CB                     l1505:
  3743  01CB  0876               	movf	___lwdiv@quotient+1,w
  3744  01CC  00F1               	movwf	?___lwdiv+1
  3745  01CD  0875               	movf	___lwdiv@quotient,w
  3746  01CE  00F0               	movwf	?___lwdiv
  3747  01CF                     l765:
  3748  01CF  0008               	return
  3749  01D0                     __end_of___lwdiv:
  3750                           
  3751                           	psect	text8
  3752  02AE                     __ptext8:	
  3753 ;; *************** function _SYSTEM_Initialize *****************
  3754 ;; Defined at:
  3755 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3769 ;;      Params:         0       0       0       0
  3770 ;;      Locals:         0       0       0       0
  3771 ;;      Temps:          0       0       0       0
  3772 ;;      Totals:         0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 6
  3776 ;; This function calls:
  3777 ;;		_EXT_INT_Initialize
  3778 ;;		_OSCILLATOR_Initialize
  3779 ;;		_PIN_MANAGER_Initialize
  3780 ;;		_PMD_Initialize
  3781 ;;		_TMR0_Initialize
  3782 ;;		_WDT_Initialize
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _SYSTEM_Initialize
  3790  02AE                     _SYSTEM_Initialize:
  3791  02AE                     l1509:	
  3792                           ;incstack = 0
  3793                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3794                           
  3795                           
  3796                           ;mcc_generated_files/mcc.c: 51:     PMD_Initialize();
  3797  02AE  3182  22E9  3182   	fcall	_PMD_Initialize
  3798  02B1                     l1511:
  3799                           
  3800                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  3801  02B1  3182  2227  3182   	fcall	_PIN_MANAGER_Initialize
  3802  02B4                     l1513:
  3803                           
  3804                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  3805  02B4  3182  22F1  3182   	fcall	_OSCILLATOR_Initialize
  3806  02B7                     l1515:
  3807                           
  3808                           ;mcc_generated_files/mcc.c: 54:     WDT_Initialize();
  3809  02B7  3183  2311  3182   	fcall	_WDT_Initialize
  3810  02BA                     l1517:
  3811                           
  3812                           ;mcc_generated_files/mcc.c: 55:     EXT_INT_Initialize();
  3813  02BA  3182  22CF  3182   	fcall	_EXT_INT_Initialize
  3814  02BD                     l1519:
  3815                           
  3816                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  3817  02BD  3182  229A  3182   	fcall	_TMR0_Initialize
  3818  02C0                     l39:
  3819  02C0  0008               	return
  3820  02C1                     __end_of_SYSTEM_Initialize:
  3821                           
  3822                           	psect	text9
  3823  0311                     __ptext9:	
  3824 ;; *************** function _WDT_Initialize *****************
  3825 ;; Defined at:
  3826 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3840 ;;      Params:         0       0       0       0
  3841 ;;      Locals:         0       0       0       0
  3842 ;;      Temps:          0       0       0       0
  3843 ;;      Totals:         0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 4
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_SYSTEM_Initialize
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _WDT_Initialize
  3856  0311                     _WDT_Initialize:
  3857  0311                     l1383:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _WDT_Initialize: [wreg]
  3860                           
  3861                           
  3862                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x18;
  3863  0311  3018               	movlw	24
  3864  0312  0021               	movlb	1	; select bank1
  3865  0313  0097               	movwf	23	;volatile
  3866  0314                     l45:
  3867  0314  0008               	return
  3868  0315                     __end_of_WDT_Initialize:
  3869                           
  3870                           	psect	text10
  3871  029A                     __ptext10:	
  3872 ;; *************** function _TMR0_Initialize *****************
  3873 ;; Defined at:
  3874 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3888 ;;      Params:         0       0       0       0
  3889 ;;      Locals:         0       0       0       0
  3890 ;;      Temps:          0       0       0       0
  3891 ;;      Totals:         0       0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 5
  3895 ;; This function calls:
  3896 ;;		_TMR0_SetInterruptHandler
  3897 ;; This function is called by:
  3898 ;;		_SYSTEM_Initialize
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _TMR0_Initialize
  3904  029A                     _TMR0_Initialize:
  3905  029A                     l1391:	
  3906                           ;incstack = 0
  3907                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3908                           
  3909                           
  3910                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x62;
  3911  029A  3062               	movlw	98
  3912  029B  0020               	movlb	0	; select bank0
  3913  029C  0098               	movwf	24	;volatile
  3914                           
  3915                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x4F;
  3916  029D  304F               	movlw	79
  3917  029E  0096               	movwf	22	;volatile
  3918  029F                     l1393:
  3919                           
  3920                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  3921  029F  0195               	clrf	21	;volatile
  3922  02A0                     l1395:
  3923                           
  3924                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  3925  02A0  1290               	bcf	16,5	;volatile
  3926  02A1                     l1397:
  3927                           
  3928                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  3929  02A1  0021               	movlb	1	; select bank1
  3930  02A2  1690               	bsf	16,5	;volatile
  3931  02A3                     l1399:
  3932                           
  3933                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3934  02A3  3018               	movlw	low _TMR0_DefaultInterruptHandler
  3935  02A4  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3936  02A5  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3937  02A6  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3938  02A7  3182  22FF  3182   	fcall	_TMR0_SetInterruptHandler
  3939  02AA                     l1401:
  3940                           
  3941                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x84;
  3942  02AA  3084               	movlw	132
  3943  02AB  0020               	movlb	0	; select bank0
  3944  02AC  0097               	movwf	23	;volatile
  3945  02AD                     l107:
  3946  02AD  0008               	return
  3947  02AE                     __end_of_TMR0_Initialize:
  3948                           
  3949                           	psect	text11
  3950  02FF                     __ptext11:	
  3951 ;; *************** function _TMR0_SetInterruptHandler *****************
  3952 ;; Defined at:
  3953 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3956 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3968 ;;      Params:         2       0       0       0
  3969 ;;      Locals:         0       0       0       0
  3970 ;;      Temps:          0       0       0       0
  3971 ;;      Totals:         2       0       0       0
  3972 ;;Total ram usage:        2 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 4
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_TMR0_Initialize
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function _TMR0_SetInterruptHandler
  3984  02FF                     _TMR0_SetInterruptHandler:
  3985  02FF                     l1297:	
  3986                           ;incstack = 0
  3987                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3988                           
  3989                           
  3990                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  3991  02FF  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3992  0300  0020               	movlb	0	; select bank0
  3993  0301  00C1               	movwf	_TMR0_InterruptHandler+1
  3994  0302  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3995  0303  00C0               	movwf	_TMR0_InterruptHandler
  3996  0304                     l129:
  3997  0304  0008               	return
  3998  0305                     __end_of_TMR0_SetInterruptHandler:
  3999                           
  4000                           	psect	text12
  4001  02E9                     __ptext12:	
  4002 ;; *************** function _PMD_Initialize *****************
  4003 ;; Defined at:
  4004 ;;		line 79 in file "mcc_generated_files/mcc.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		status,2
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4018 ;;      Params:         0       0       0       0
  4019 ;;      Locals:         0       0       0       0
  4020 ;;      Temps:          0       0       0       0
  4021 ;;      Totals:         0       0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 4
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_SYSTEM_Initialize
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _PMD_Initialize
  4034  02E9                     _PMD_Initialize:
  4035  02E9                     l1353:	
  4036                           ;incstack = 0
  4037                           ; Regs used in _PMD_Initialize: [status,2]
  4038                           
  4039                           
  4040                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  4041  02E9  0032               	movlb	18	; select bank18
  4042  02EA  0191               	clrf	17	;volatile
  4043                           
  4044                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  4045  02EB  0192               	clrf	18	;volatile
  4046                           
  4047                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  4048  02EC  0193               	clrf	19	;volatile
  4049                           
  4050                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  4051  02ED  0194               	clrf	20	;volatile
  4052                           
  4053                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  4054  02EE  0195               	clrf	21	;volatile
  4055                           
  4056                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  4057  02EF  0196               	clrf	22	;volatile
  4058  02F0                     l48:
  4059  02F0  0008               	return
  4060  02F1                     __end_of_PMD_Initialize:
  4061                           
  4062                           	psect	text13
  4063  0227                     __ptext13:	
  4064 ;; *************** function _PIN_MANAGER_Initialize *****************
  4065 ;; Defined at:
  4066 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4080 ;;      Params:         0       0       0       0
  4081 ;;      Locals:         0       0       0       0
  4082 ;;      Temps:          0       0       0       0
  4083 ;;      Totals:         0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 4
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_SYSTEM_Initialize
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _PIN_MANAGER_Initialize
  4096  0227                     _PIN_MANAGER_Initialize:
  4097  0227                     l1355:	
  4098                           ;incstack = 0
  4099                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4100                           
  4101                           
  4102                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4103  0227  0022               	movlb	2	; select bank2
  4104  0228  018C               	clrf	12	;volatile
  4105                           
  4106                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  4107  0229  018E               	clrf	14	;volatile
  4108  022A                     l1357:
  4109                           
  4110                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x05;
  4111  022A  3005               	movlw	5
  4112  022B  0021               	movlb	1	; select bank1
  4113  022C  008C               	movwf	12	;volatile
  4114  022D                     l1359:
  4115                           
  4116                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x30;
  4117  022D  3030               	movlw	48
  4118  022E  008E               	movwf	14	;volatile
  4119                           
  4120                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  4121  022F  0023               	movlb	3	; select bank3
  4122  0230  018E               	clrf	14	;volatile
  4123  0231                     l1361:
  4124                           
  4125                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x10;
  4126  0231  3010               	movlw	16
  4127  0232  008C               	movwf	12	;volatile
  4128  0233                     l1363:
  4129                           
  4130                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  4131  0233  0024               	movlb	4	; select bank4
  4132  0234  018C               	clrf	12	;volatile
  4133                           
  4134                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x01;
  4135  0235  3001               	movlw	1
  4136  0236  008E               	movwf	14	;volatile
  4137                           
  4138                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x01;
  4139  0237  3001               	movlw	1
  4140  0238  0025               	movlb	5	; select bank5
  4141  0239  008C               	movwf	12	;volatile
  4142  023A                     l1365:
  4143                           
  4144                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  4145  023A  018E               	clrf	14	;volatile
  4146  023B                     l1367:
  4147                           
  4148                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  4149  023B  3037               	movlw	55
  4150  023C  0026               	movlb	6	; select bank6
  4151  023D  008C               	movwf	12	;volatile
  4152  023E                     l1369:
  4153                           
  4154                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  4155  023E  303F               	movlw	63
  4156  023F  008E               	movwf	14	;volatile
  4157  0240                     l1371:
  4158                           
  4159                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  4160  0240  303F               	movlw	63
  4161  0241  0027               	movlb	7	; select bank7
  4162  0242  008C               	movwf	12	;volatile
  4163  0243                     l1373:
  4164                           
  4165                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  4166  0243  303F               	movlw	63
  4167  0244  008E               	movwf	14	;volatile
  4168  0245                     l1375:
  4169                           
  4170                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  4171  0245  3002               	movlw	2
  4172  0246  003C               	movlb	28	; select bank28
  4173  0247  0090               	movwf	16	;volatile
  4174  0248                     l81:
  4175  0248  0008               	return
  4176  0249                     __end_of_PIN_MANAGER_Initialize:
  4177                           
  4178                           	psect	text14
  4179  02F1                     __ptext14:	
  4180 ;; *************** function _OSCILLATOR_Initialize *****************
  4181 ;; Defined at:
  4182 ;;		line 59 in file "mcc_generated_files/mcc.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4196 ;;      Params:         0       0       0       0
  4197 ;;      Locals:         0       0       0       0
  4198 ;;      Temps:          0       0       0       0
  4199 ;;      Totals:         0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 4
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_SYSTEM_Initialize
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _OSCILLATOR_Initialize
  4212  02F1                     _OSCILLATOR_Initialize:
  4213  02F1                     l1377:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4216                           
  4217                           
  4218                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x00;
  4219  02F1  0032               	movlb	18	; select bank18
  4220  02F2  0199               	clrf	25	;volatile
  4221                           
  4222                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  4223  02F3  019B               	clrf	27	;volatile
  4224                           
  4225                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  4226  02F4  019D               	clrf	29	;volatile
  4227  02F5                     l1379:
  4228                           
  4229                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x07;
  4230  02F5  3007               	movlw	7
  4231  02F6  009F               	movwf	31	;volatile
  4232  02F7                     l1381:
  4233                           
  4234                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  4235  02F7  019E               	clrf	30	;volatile
  4236  02F8                     l42:
  4237  02F8  0008               	return
  4238  02F9                     __end_of_OSCILLATOR_Initialize:
  4239                           
  4240                           	psect	text15
  4241  02CF                     __ptext15:	
  4242 ;; *************** function _EXT_INT_Initialize *****************
  4243 ;; Defined at:
  4244 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, pclath, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4258 ;;      Params:         0       0       0       0
  4259 ;;      Locals:         0       0       0       0
  4260 ;;      Temps:          0       0       0       0
  4261 ;;      Totals:         0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 5
  4265 ;; This function calls:
  4266 ;;		_INT_SetInterruptHandler
  4267 ;; This function is called by:
  4268 ;;		_SYSTEM_Initialize
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           
  4273                           ;psect for function _EXT_INT_Initialize
  4274  02CF                     _EXT_INT_Initialize:
  4275  02CF                     l1385:	
  4276                           ;incstack = 0
  4277                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4278                           
  4279                           
  4280                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
  4281  02CF  0020               	movlb	0	; select bank0
  4282  02D0  1010               	bcf	16,0	;volatile
  4283                           
  4284                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
  4285  02D1  140B               	bsf	11,0	;volatile
  4286  02D2                     l1387:
  4287                           
  4288                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  4289  02D2  3019               	movlw	low _INT_DefaultInterruptHandler
  4290  02D3  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  4291  02D4  3003               	movlw	high _INT_DefaultInterruptHandler
  4292  02D5  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  4293  02D6  3183  2305  3182   	fcall	_INT_SetInterruptHandler
  4294  02D9                     l1389:
  4295                           
  4296                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
  4297  02D9  0021               	movlb	1	; select bank1
  4298  02DA  1410               	bsf	16,0	;volatile
  4299  02DB                     l184:
  4300  02DB  0008               	return
  4301  02DC                     __end_of_EXT_INT_Initialize:
  4302                           
  4303                           	psect	text16
  4304  0305                     __ptext16:	
  4305 ;; *************** function _INT_SetInterruptHandler *****************
  4306 ;; Defined at:
  4307 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  4310 ;;		 -> INT_DefaultInterruptHandler(1), 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4322 ;;      Params:         2       0       0       0
  4323 ;;      Locals:         0       0       0       0
  4324 ;;      Temps:          0       0       0       0
  4325 ;;      Totals:         2       0       0       0
  4326 ;;Total ram usage:        2 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 4
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_EXT_INT_Initialize
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _INT_SetInterruptHandler
  4338  0305                     _INT_SetInterruptHandler:
  4339  0305                     l1299:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  4342                           
  4343                           
  4344                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
  4345  0305  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  4346  0306  0020               	movlb	0	; select bank0
  4347  0307  00BF               	movwf	_INT_InterruptHandler+1
  4348  0308  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  4349  0309  00BE               	movwf	_INT_InterruptHandler
  4350  030A                     l178:
  4351  030A  0008               	return
  4352  030B                     __end_of_INT_SetInterruptHandler:
  4353                           
  4354                           	psect	intentry
  4355  0004                     __pintentry:	
  4356 ;; *************** function _INTERRUPT_InterruptManager *****************
  4357 ;; Defined at:
  4358 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4372 ;;      Params:         0       0       0       0
  4373 ;;      Locals:         0       0       0       0
  4374 ;;      Temps:          0       0       0       0
  4375 ;;      Totals:         0       0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 3
  4379 ;; This function calls:
  4380 ;;		_INT_ISR
  4381 ;;		_TMR0_ISR
  4382 ;;		_signal_handler
  4383 ;; This function is called by:
  4384 ;;		Interrupt level 1
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388  0004                     _INTERRUPT_InterruptManager:
  4389                           
  4390                           ;incstack = 0
  4391  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4392                           
  4393                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4394  0005  3180               	pagesel	$
  4395  0006                     i1l1585:
  4396                           
  4397                           ;mcc_generated_files/interrupt_manager.c: 57:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1){
  4398  0006  0021               	movlb	1	; select bank1
  4399  0007  1E90               	btfss	16,5	;volatile
  4400  0008  280A               	goto	u69_21
  4401  0009  280B               	goto	u69_20
  4402  000A                     u69_21:
  4403  000A  2819               	goto	i1l151
  4404  000B                     u69_20:
  4405  000B                     i1l1587:
  4406  000B  0020               	movlb	0	; select bank0
  4407  000C  1E90               	btfss	16,5	;volatile
  4408  000D  280F               	goto	u70_21
  4409  000E  2810               	goto	u70_20
  4410  000F                     u70_21:
  4411  000F  2819               	goto	i1l151
  4412  0010                     u70_20:
  4413  0010                     i1l1589:
  4414                           
  4415                           ;mcc_generated_files/interrupt_manager.c: 58:         TMR0_ISR();
  4416  0010  3182  22C1  3180   	fcall	_TMR0_ISR
  4417                           
  4418                           ;mcc_generated_files/interrupt_manager.c: 59:         signal_handler();
  4419  0013  3182  2203  3180   	fcall	_signal_handler
  4420  0016                     i1l1591:
  4421                           
  4422                           ;mcc_generated_files/interrupt_manager.c: 60:         timer_flag = 1;
  4423  0016  01FD               	clrf	_timer_flag
  4424  0017  0AFD               	incf	_timer_flag,f
  4425                           
  4426                           ;mcc_generated_files/interrupt_manager.c: 61:     }
  4427  0018  282B               	goto	i1l158
  4428  0019                     i1l151:	
  4429                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1){
  4430                           
  4431  0019  0021               	movlb	1	; select bank1
  4432  001A  1C10               	btfss	16,0	;volatile
  4433  001B  281D               	goto	u71_21
  4434  001C  281E               	goto	u71_20
  4435  001D                     u71_21:
  4436  001D  282A               	goto	i1l155
  4437  001E                     u71_20:
  4438  001E                     i1l1593:
  4439  001E  0020               	movlb	0	; select bank0
  4440  001F  1C10               	btfss	16,0	;volatile
  4441  0020  2822               	goto	u72_21
  4442  0021  2823               	goto	u72_20
  4443  0022                     u72_21:
  4444  0022  282A               	goto	i1l155
  4445  0023                     u72_20:
  4446  0023                     i1l1595:
  4447                           
  4448                           ;mcc_generated_files/interrupt_manager.c: 64:         INT_ISR();
  4449  0023  3183  230B  3180   	fcall	_INT_ISR
  4450  0026                     i1l1597:
  4451                           
  4452                           ;mcc_generated_files/interrupt_manager.c: 65:         hall_flag = 1;
  4453  0026  0020               	movlb	0	; select bank0
  4454  0027  01B9               	clrf	_hall_flag
  4455  0028  0AB9               	incf	_hall_flag,f
  4456                           
  4457                           ;mcc_generated_files/interrupt_manager.c: 66:     }
  4458  0029  282B               	goto	i1l158
  4459  002A                     i1l155:	
  4460                           ;mcc_generated_files/interrupt_manager.c: 68:         while(1){}
  4461                           
  4462  002A  282A               	goto	i1l155
  4463  002B                     i1l158:
  4464  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4465  002C  0009               	retfie
  4466  002D                     __end_of_INTERRUPT_InterruptManager:
  4467                           
  4468                           	psect	text18
  4469  0203                     __ptext18:	
  4470 ;; *************** function _signal_handler *****************
  4471 ;; Defined at:
  4472 ;;		line 48 in file "motor.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4486 ;;      Params:         0       0       0       0
  4487 ;;      Locals:         0       0       0       0
  4488 ;;      Temps:          0       0       0       0
  4489 ;;      Totals:         0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_INTERRUPT_InterruptManager
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _signal_handler
  4501  0203                     _signal_handler:
  4502  0203                     i1l1527:	
  4503                           ;incstack = 0
  4504                           ; Regs used in _signal_handler: [wreg+status,2+status,0]
  4505                           
  4506                           
  4507                           ;motor.c: 49:     if((PORTCbits.RC4 == 1)&&(speed_high<20U)){
  4508  0203  0020               	movlb	0	; select bank0
  4509  0204  1E0E               	btfss	14,4	;volatile
  4510  0205  2A07               	goto	u59_21
  4511  0206  2A08               	goto	u59_20
  4512  0207                     u59_21:
  4513  0207  2A16               	goto	i1l1533
  4514  0208                     u59_20:
  4515  0208                     i1l1529:
  4516  0208  3000               	movlw	0
  4517  0209  0234               	subwf	_speed_high+1,w
  4518  020A  3014               	movlw	20
  4519  020B  1903               	skipnz
  4520  020C  0233               	subwf	_speed_high,w
  4521  020D  1803               	skipnc
  4522  020E  2A10               	goto	u60_21
  4523  020F  2A11               	goto	u60_20
  4524  0210                     u60_21:
  4525  0210  2A16               	goto	i1l1533
  4526  0211                     u60_20:
  4527  0211                     i1l1531:
  4528                           
  4529                           ;motor.c: 50:         speed_high++;
  4530  0211  3001               	movlw	1
  4531  0212  07B3               	addwf	_speed_high,f
  4532  0213  3000               	movlw	0
  4533  0214  3DB4               	addwfc	_speed_high+1,f
  4534                           
  4535                           ;motor.c: 51:     }
  4536  0215  2A26               	goto	i1l282
  4537  0216                     i1l1533:
  4538                           
  4539                           ;motor.c: 53:         if((speed_high != 0)&&(PORTCbits.RC4 == 0)){
  4540  0216  0833               	movf	_speed_high,w
  4541  0217  0434               	iorwf	_speed_high+1,w
  4542  0218  1903               	btfsc	3,2
  4543  0219  2A1B               	goto	u61_21
  4544  021A  2A1C               	goto	u61_20
  4545  021B                     u61_21:
  4546  021B  2A26               	goto	i1l282
  4547  021C                     u61_20:
  4548  021C                     i1l1535:
  4549  021C  1A0E               	btfsc	14,4	;volatile
  4550  021D  2A1F               	goto	u62_21
  4551  021E  2A20               	goto	u62_20
  4552  021F                     u62_21:
  4553  021F  2A26               	goto	i1l282
  4554  0220                     u62_20:
  4555  0220                     i1l1537:
  4556                           
  4557                           ;motor.c: 54:             speed_stimer = speed_high;
  4558  0220  0834               	movf	_speed_high+1,w
  4559  0221  00FB               	movwf	_speed_stimer+1
  4560  0222  0833               	movf	_speed_high,w
  4561  0223  00FA               	movwf	_speed_stimer
  4562  0224                     i1l1539:
  4563                           
  4564                           ;motor.c: 55:             speed_high = 0U;
  4565  0224  01B3               	clrf	_speed_high
  4566  0225  01B4               	clrf	_speed_high+1
  4567  0226                     i1l282:
  4568  0226  0008               	return
  4569  0227                     __end_of_signal_handler:
  4570                           
  4571                           	psect	text19
  4572  02C1                     __ptext19:	
  4573 ;; *************** function _TMR0_ISR *****************
  4574 ;; Defined at:
  4575 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, pclath, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4589 ;;      Params:         0       0       0       0
  4590 ;;      Locals:         0       0       0       0
  4591 ;;      Temps:          0       0       0       0
  4592 ;;      Totals:         0       0       0       0
  4593 ;;Total ram usage:        0 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 1
  4596 ;; This function calls:
  4597 ;;		Absolute function
  4598 ;;		_TMR0_DefaultInterruptHandler
  4599 ;; This function is called by:
  4600 ;;		_INTERRUPT_InterruptManager
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _TMR0_ISR
  4606  02C1                     _TMR0_ISR:
  4607  02C1                     i1l1521:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4610                           
  4611                           
  4612                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  4613  02C1  0020               	movlb	0	; select bank0
  4614  02C2  1290               	bcf	16,5	;volatile
  4615  02C3                     i1l1523:
  4616                           
  4617                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  4618  02C3  0840               	movf	_TMR0_InterruptHandler,w
  4619  02C4  0441               	iorwf	_TMR0_InterruptHandler+1,w
  4620  02C5  1903               	btfsc	3,2
  4621  02C6  2AC8               	goto	u58_21
  4622  02C7  2AC9               	goto	u58_20
  4623  02C8                     u58_21:
  4624  02C8  2ACE               	goto	i1l126
  4625  02C9                     u58_20:
  4626  02C9                     i1l1525:
  4627                           
  4628                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  4629  02C9  0841               	movf	_TMR0_InterruptHandler+1,w
  4630  02CA  008A               	movwf	10
  4631  02CB  0840               	movf	_TMR0_InterruptHandler,w
  4632  02CC  000A               	callw
  4633  02CD  3182               	pagesel	$
  4634  02CE                     i1l126:
  4635  02CE  0008               	return
  4636  02CF                     __end_of_TMR0_ISR:
  4637                           
  4638                           	psect	text20
  4639  0318                     __ptext20:	
  4640 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4641 ;; Defined at:
  4642 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		None
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4656 ;;      Params:         0       0       0       0
  4657 ;;      Locals:         0       0       0       0
  4658 ;;      Temps:          0       0       0       0
  4659 ;;      Totals:         0       0       0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_TMR0_Initialize
  4666 ;;		_TMR0_ISR
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function _TMR0_DefaultInterruptHandler
  4672  0318                     _TMR0_DefaultInterruptHandler:
  4673  0318                     i1l132:	
  4674                           ;incstack = 0
  4675                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4676                           
  4677  0318  0008               	return
  4678  0319                     __end_of_TMR0_DefaultInterruptHandler:
  4679                           
  4680                           	psect	text21
  4681  030B                     __ptext21:	
  4682 ;; *************** function _INT_ISR *****************
  4683 ;; Defined at:
  4684 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, pclath, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4698 ;;      Params:         0       0       0       0
  4699 ;;      Locals:         0       0       0       0
  4700 ;;      Temps:          0       0       0       0
  4701 ;;      Totals:         0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 2
  4705 ;; This function calls:
  4706 ;;		_INT_CallBack
  4707 ;; This function is called by:
  4708 ;;		_INTERRUPT_InterruptManager
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _INT_ISR
  4714  030B                     _INT_ISR:
  4715  030B                     i1l1541:	
  4716                           ;incstack = 0
  4717                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  4718                           
  4719                           
  4720                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
  4721  030B  0020               	movlb	0	; select bank0
  4722  030C  1010               	bcf	16,0	;volatile
  4723  030D                     i1l1543:
  4724                           
  4725                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
  4726  030D  3182  22DC  3183   	fcall	_INT_CallBack
  4727  0310                     i1l171:
  4728  0310  0008               	return
  4729  0311                     __end_of_INT_ISR:
  4730                           
  4731                           	psect	text22
  4732  02DC                     __ptext22:	
  4733 ;; *************** function _INT_CallBack *****************
  4734 ;; Defined at:
  4735 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4749 ;;      Params:         0       0       0       0
  4750 ;;      Locals:         0       0       0       0
  4751 ;;      Temps:          0       0       0       0
  4752 ;;      Totals:         0       0       0       0
  4753 ;;Total ram usage:        0 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 1
  4756 ;; This function calls:
  4757 ;;		Absolute function
  4758 ;;		_INT_DefaultInterruptHandler
  4759 ;; This function is called by:
  4760 ;;		_INT_ISR
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _INT_CallBack
  4766  02DC                     _INT_CallBack:
  4767  02DC                     i1l1403:	
  4768                           ;incstack = 0
  4769                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4770                           
  4771                           
  4772                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
  4773  02DC  0020               	movlb	0	; select bank0
  4774  02DD  083E               	movf	_INT_InterruptHandler,w
  4775  02DE  043F               	iorwf	_INT_InterruptHandler+1,w
  4776  02DF  1903               	btfsc	3,2
  4777  02E0  2AE2               	goto	u45_21
  4778  02E1  2AE3               	goto	u45_20
  4779  02E2                     u45_21:
  4780  02E2  2AE8               	goto	i1l175
  4781  02E3                     u45_20:
  4782  02E3                     i1l1405:
  4783                           
  4784                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
  4785  02E3  083F               	movf	_INT_InterruptHandler+1,w
  4786  02E4  008A               	movwf	10
  4787  02E5  083E               	movf	_INT_InterruptHandler,w
  4788  02E6  000A               	callw
  4789  02E7  3182               	pagesel	$
  4790  02E8                     i1l175:
  4791  02E8  0008               	return
  4792  02E9                     __end_of_INT_CallBack:
  4793                           
  4794                           	psect	text23
  4795  0319                     __ptext23:	
  4796 ;; *************** function _INT_DefaultInterruptHandler *****************
  4797 ;; Defined at:
  4798 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		None
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4812 ;;      Params:         0       0       0       0
  4813 ;;      Locals:         0       0       0       0
  4814 ;;      Temps:          0       0       0       0
  4815 ;;      Totals:         0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_EXT_INT_Initialize
  4822 ;;		_INT_CallBack
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _INT_DefaultInterruptHandler
  4828  0319                     _INT_DefaultInterruptHandler:
  4829  0319                     i1l181:	
  4830                           ;incstack = 0
  4831                           ; Regs used in _INT_DefaultInterruptHandler: []
  4832                           
  4833  0319  0008               	return
  4834  031A                     __end_of_INT_DefaultInterruptHandler:
  4835  007E                     btemp	set	126	;btemp
  4836  007E                     int$flags	set	126
  4837  007E                     wtemp0	set	126
  4838                           
  4839                           	psect	config
  4840                           
  4841                           ;Config register CONFIG1 @ 0x8007
  4842                           ;	FEXTOSC External Oscillator mode Selection bits
  4843                           ;	FEXTOSC = OFF, Oscillator not enabled
  4844                           ;	Power-up default value for COSC bits
  4845                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  4846                           ;	Clock Out Enable bit
  4847                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  4848                           ;	Clock Switch Enable bit
  4849                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4850                           ;	Fail-Safe Clock Monitor Enable
  4851                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4852  8007                     	org	32775
  4853  8007  3F8C               	dw	16268
  4854                           
  4855                           ;Config register CONFIG2 @ 0x8008
  4856                           ;	Master Clear Enable bit
  4857                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  4858                           ;	Power-up Timer Enable bit
  4859                           ;	PWRTE = OFF, PWRT disabled
  4860                           ;	Watchdog Timer Enable bits
  4861                           ;	WDTE = SLEEP, WDT enabled while running and disabled in SLEEP/IDLE; SWDTEN is ignored
  4862                           ;	Low-power BOR enable bit
  4863                           ;	LPBOREN = OFF, ULPBOR disabled
  4864                           ;	Brown-out Reset Enable bits
  4865                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  4866                           ;	Brown-out Reset Voltage selection bit
  4867                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  4868                           ;	PPSLOCK bit One-Way Set Enable bit
  4869                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  4870                           ;	Stack Overflow/Underflow Reset Enable bit
  4871                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4872                           ;	Debugger enable bit
  4873                           ;	DEBUG = OFF, Background debugger disabled
  4874  8008                     	org	32776
  4875  8008  3FFB               	dw	16379
  4876                           
  4877                           ;Config register CONFIG3 @ 0x8009
  4878                           ;	User NVM self-write protection bits
  4879                           ;	WRT = OFF, Write protection off
  4880                           ;	Low Voltage Programming Enable bit
  4881                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  4882  8009                     	org	32777
  4883  8009  3FFF               	dw	16383
  4884                           
  4885                           ;Config register CONFIG4 @ 0x800A
  4886                           ;	User NVM Program Memory Code Protection bit
  4887                           ;	CP = OFF, User NVM code protection disabled
  4888                           ;	Data NVM Memory Code Protection bit
  4889                           ;	CPD = OFF, Data NVM code protection disabled
  4890  800A                     	org	32778
  4891  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         30
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_motor_init
    _motor_handler->_motor_init
    _speed_handler->___wmul
    _motor_init->_step_handler
    _hall_handler->___lwdiv
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1183
                  _SYSTEM_Initialize
                       _hall_handler
                      _motor_handler
                         _motor_init
 ---------------------------------------------------------------------------------
 (1) _motor_handler                                        0     0      0     535
                         _motor_init
                      _speed_handler
                       _step_handler
 ---------------------------------------------------------------------------------
 (2) _speed_handler                                        3     3      0     397
                                              6 COMMON     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           8     8      0     138
                                              2 COMMON     8     8      0
                       _step_handler
 ---------------------------------------------------------------------------------
 (2) _step_handler                                         3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _hall_handler                                         0     0      0     314
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
                     _signal_handler
 ---------------------------------------------------------------------------------
 (5) _signal_handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _hall_handler
     ___lwdiv
   _motor_handler
     _motor_init
       _step_handler
     _speed_handler
       ___wmul
     _step_handler
   _motor_init

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _signal_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      25       6       46.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      33      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 10 13:54:41 2023

                                      l42 02F8                                        l45 0314  
                                      l39 02C0                                        l48 02F0  
                                      l81 0248                       ___wmul@multiplicand 0072  
                             _step_counts 003A                                       l107 02AD  
                                     l310 00D1                                       l320 00E4  
                                     l129 0304                                       l321 00EC  
                                     l322 00F4                                       l314 00E3  
                                     l323 00FC                                       l324 0104  
                                     l333 012F                                       l184 02DB  
                                     l273 00BF                                       l178 030A  
                                     l276 0299                                       l287 0202  
                                     l298 0193                                       l485 0253  
                                     l487 0267                                       l765 01CF  
                                     u400 0110                                       u401 010F  
                                     u410 024F                                       u411 024E  
                                     u500 01D9                                       u501 01D8  
                                     u510 019C                                       u511 019B  
                                     u440 0263                                       u441 0262  
                                     u425 0254                                       u530 01AC  
                                     u531 01AB                                       u435 0259  
                                     u380 00D0                                       u460 0061  
                                     u525 01A0                                       u381 00CF  
                                     u461 0060                                       u550 01BB  
                                     u390 00DD                                       u470 0077  
                                     u630 0142                                       u551 01BA  
                                     u391 00DC                                       u471 0076  
                                     u631 0141                                       u480 009A  
                                     u640 014B                                       u545 01AD  
                                     u481 0099                                       u641 014A  
                                     u570 01CB                                       u490 00BE  
                                     u650 016D                                       u730 0276  
                                     u571 01CA                                       u555 01B7  
                                     u491 00BD                                       u651 016C  
                                     u731 0275                                       u660 0172  
                                     u740 027F                                       u565 01C1  
                                     u661 0171                                       u741 027E  
                                     u670 017C                                       u671 017B  
                                     u680 018A                                       u681 0189  
                                     u757 0064                                       u685 0186  
                                     u767 007C                                       u777 0086  
                                     u787 009F                                       u797 00AA  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                            _step_handler 00C0                           ??_speed_handler 0076  
                                    l1301 00C0                                      l1401 02AA  
                                    l1321 00DD                                      l1305 00C1  
                                    l1307 00C5                                      l1411 0050  
                                    l1501 01C0                                      l1333 0113  
                                    l1309 00CB                                      l1421 0061  
                                    l1413 0054                                      l1341 024B  
                                    l1511 02B1                                      l1503 01C5  
                                    l1327 010B                                      l1319 00D8  
                                    l1431 006A                                      l1415 0058  
                                    l1407 0049                                      l1343 024F  
                                    l1361 0231                                      l1353 02E9  
                                    l1513 02B4                                      l1505 01CB  
                                    l1329 0110                                      l1433 006E  
                                    l1417 005A                                      l1409 004C  
                                    l1345 0258                                      l1601 026B  
                                    l1371 0240                                      l1363 0233  
                                    l1355 0227                                      l1515 02B7  
                                    l1451 009A                                      l1443 0085  
                                    l1435 0077                                      l1427 0063  
                                    l1419 005C                                      l1347 025D  
                                    l1339 0249                                      l1611 0277  
                                    l1603 026C                                      l1381 02F7  
                                    l1373 0243                                      l1365 023A  
                                    l1357 022A                                      l1517 02BA  
                                    l1509 02AE                                      l1461 00AD  
                                    l1445 0089                                      l1437 0083  
                                    l1429 0066                                      l1453 00A7  
                                    l1349 0263                                      l1613 027A  
                                    l1605 026D                                      l1375 0245  
                                    l1367 023B                                      l1359 022D  
                                    l1391 029A                                      l1383 0311  
                                    l1519 02BD                                      l1463 00B1  
                                    l1447 008D                                      l1471 01D0  
                                    l1551 0142                                      l1615 027F  
                                    l1607 0270                                      l1385 02CF  
                                    l1377 02F1                                      l1369 023E  
                                    l1297 02FF                                      l1393 029F  
                                    l1545 0286                                      l1465 00B5  
                                    l1449 0091                                      l1481 01FE  
                                    l1473 01D9                                      l1561 015F  
                                    l1553 014B                                      l1617 0280  
                                    l1609 0276                                      l1299 0305  
                                    l1387 02D2                                      l1379 02F5  
                                    l1395 02A0                                      l1491 01A4  
                                    l1483 0194                                      l1547 0297  
                                    l1459 00A9                                      l1475 01E0  
                                    l1571 0177                                      l1555 0152  
                                    l1563 0164                                      l1389 02D9  
                                    l1397 02A1                                      l1493 01A8  
                                    l1485 0196                                      l1477 01F3  
                                    l1469 01D0                                      l1581 018C  
                                    l1573 017C                                      l1565 016D  
                                    l1557 0157                                      l1549 0130  
                                    l1399 02A3                                      l1495 01AC  
                                    l1487 019C                                      l1639 011B  
                                    l1583 018F                                      l1567 0172  
                                    l1559 015B                                      l1497 01BB  
                                    l1489 019F                                      l1569 0173  
                                    l1577 017F                                      l1499 01BF  
                                    l1579 018A                                      l1599 0268  
                                    _LATA 010C                           __end_of_INT_ISR 0311  
                                    _LATC 010E                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      _PMD4 0915  
                                    _PMD5 0916                                      _WPUA 020C  
                                    _WPUC 020E                                      _main 0268  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 031A               _INT_DefaultInterruptHandler 0319  
                                    start 002D           __end_of_INT_SetInterruptHandler 030B  
                 __end_of_TMR0_Initialize 02AE            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0008             __end_of_OSCILLATOR_Initialize 02F9  
                                   ?_main 0070                           __end_of___lwdiv 01D0  
                                   i1l132 0318                                     i1l126 02CE  
                                   i1l151 0019                                     i1l171 0310  
                                   i1l155 002A                                     i1l181 0319  
                                   i1l158 002B                                     i1l175 02E8  
                                   i1l282 0226                                     _OSCEN 091D  
                                   _TMR0H 0016                                     _TMR0L 0015  
                                   u60_20 0211                                     u60_21 0210  
                                   u45_20 02E3                                     u61_20 021C  
                                   u45_21 02E2                                     u61_21 021B  
                                   u62_20 0220                                     u70_20 0010  
                                   u62_21 021F                                     u70_21 000F  
                                   u71_20 001E                                     u71_21 001D  
                                   u72_20 0023                                     u72_21 0022  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u58_20 02C9                                     u58_21 02C8  
                                   u59_20 0208                                     u59_21 0207  
                                   u69_20 000B                                     u69_21 000A  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0070  
                        __end_of_TMR0_ISR 02CF                            _WDT_Initialize 0311  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 002E  
                            __end_of_main 0286               ?_INTERRUPT_InterruptManager 0070  
                    __end_of_hall_handler 029A                                    ??_main 007A  
                  __end_of_WDT_Initialize 0315                                 ??_INT_ISR 0070  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _T0CON0 0017                                    _T0CON1 0018  
                                  i1l1403 02DC                                    i1l1405 02E3  
                                  i1l1521 02C1                                    _ODCONA 028C  
                                  i1l1523 02C3                                    i1l1531 0211  
                                  _ODCONC 028E                                    i1l1541 030B  
                                  i1l1525 02C9                                    i1l1533 0216  
                                  i1l1543 030D                                    i1l1535 021C  
                                  i1l1527 0203                                    i1l1537 0220  
                                  i1l1529 0208                                    i1l1539 0224  
                                  i1l1591 0016                                    i1l1593 001E  
                                  i1l1585 0006                                    i1l1595 0023  
                                  i1l1587 000B                                    i1l1597 0026  
                                  i1l1589 0010                                    _INLVLA 038C  
                                  _INLVLC 038E                                    _INTPPS 0E10  
                          _step_errorlast 0025                                    _OSCFRQ 091F  
                                  _WDTCON 0097                                    ___wmul 0249  
                               ??___lwdiv 0074                          ?_TMR0_Initialize 0070  
                           ?_INT_CallBack 0070                            _PMD_Initialize 02E9  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
 INT_SetInterruptHandler@InterruptHandler 0070  TMR0_SetInterruptHandler@InterruptHandler 0070  
                       _SYSTEM_Initialize 02AE                   __end_of__initialization 0046  
                      ?_SYSTEM_Initialize 0070                   __size_of_signal_handler 0024  
                          __pcstackCOMMON 0070                              __pidataBANK0 0315  
                     ??_SYSTEM_Initialize 0072                                 ?_TMR0_ISR 0070  
                          ??_INT_CallBack 0070                    __end_of_PMD_Initialize 02F1  
             __size_of_EXT_INT_Initialize 000D                 __end_of_SYSTEM_Initialize 02C1  
                              __pbssBANK0 0020                                __pmaintext 0268  
                   __size_of_hall_handler 0014                     __end_of_motor_handler 0194  
        __end_of_TMR0_SetInterruptHandler 0305                                   ?___wmul 0070  
                              ??_TMR0_ISR 0070                                __pintentry 0004  
                              _hall_value 003C                                _hall_timer 002B  
                         ?_PMD_Initialize 0070                                   _INT_ISR 030B  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _OSCTUNE 091E                                   _SLRCONA 030C  
                                 _SLRCONC 030E                     __end_of_speed_handler 0203  
                            _hall_handler 0286                                   _StepNum 0044  
                         __size_of___wmul 001F                                   ___lwdiv 0194  
                                 __ptext1 0130                                   __ptext2 01D0  
                                 __ptext3 0249                                   __ptext4 0049  
                                 __ptext5 00C0                                   __ptext6 0286  
                                 __ptext7 0194                                   __ptext8 02AE  
                                 __ptext9 0311                     _OSCILLATOR_Initialize 02F1  
                ??_PIN_MANAGER_Initialize 0070                   _INT_SetInterruptHandler 0305  
              __size_of_SYSTEM_Initialize 0013                                   clrloop0 02FA  
                    end_of_initialization 0046                      __end_of_INT_CallBack 02E9  
                          _signal_handler 0203                               motor_init@i 0074  
                              _motor_init 0049                                _speed_high 0033  
                              _speed_plow 002D                                _speed_prev 0037  
                        ??_WDT_Initialize 0070                                _timer_flag 007D  
                _TMR0_SetInterruptHandler 02FF                                 _PORTCbits 000E  
                               _TRISCbits 008E                                _step_error 0027  
                              _step_timer 0029                                _rx_pointer 0036  
                  __end_of_signal_handler 0227                            __end_of___wmul 0268  
                       __size_of_TMR0_ISR 000E                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 0072                       start_initialization 002E  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0022  
                           ?_step_handler 0070                           motor_init@i_422 0076  
                         motor_init@i_423 0078                           ?_signal_handler 0070  
            ?_INT_DefaultInterruptHandler 0070                          ??_PMD_Initialize 0070  
                                ??___wmul 0074                               ?_motor_init 0070  
                             __pdataBANK0 0042                __end_of_EXT_INT_Initialize 02DC  
                             __pbssCOMMON 007A                                 ___latbits 0000  
                          ??_step_handler 0070                                  ?_INT_ISR 0070  
                   __size_of_INT_CallBack 000D                     _TMR0_InterruptHandler 0040  
                               __pnvBANK0 003A                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0227             ??_INT_DefaultInterruptHandler 0070  
                               _hall_flag 0039                                  ?___lwdiv 0070  
                   step_handler@direction 0070              ??_INTERRUPT_InterruptManager 0070  
                            _INT_CallBack 02DC                          ___lwdiv@quotient 0075  
                  __size_of_motor_handler 0064                       __size_of_motor_init 0077  
                       ??_TMR0_Initialize 0072                            ___wmul@product 0074  
                                _LATAbits 010C                                  _LATCbits 010E  
                               clear_ram0 02F9                                  _PIE0bits 0090  
     __size_of_INTERRUPT_InterruptManager 0029                ??_TMR0_SetInterruptHandler 0072  
                                _PIR0bits 0010                                 _rev_timer 0035  
                               _motor_dir 007C                                  _TMR0_ISR 02C1  
                               _speed_low 0031                    __size_of_speed_handler 0033  
                       ___wmul@multiplier 0070      __size_of_INT_DefaultInterruptHandler 0001  
                        __size_of_INT_ISR 0006                      __end_of_step_handler 0130  
                           _motor_handler 0130                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___lwdiv 003C                                _ANSELCbits 018E  
                              _T0CON0bits 0017                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                          ??_signal_handler 0070  
                                __ptext10 029A                                  __ptext11 02FF  
                                __ptext20 0318                                  __ptext12 02E9  
                                __ptext21 030B                                  __ptext13 0227  
                                __ptext22 02DC                                  __ptext14 02F1  
                                __ptext23 0319                                  __ptext15 02CF  
                                __ptext16 0305                                  __ptext18 0203  
                                __ptext19 02C1                             _speed_handler 01D0  
                           __size_of_main 001E      __end_of_TMR0_DefaultInterruptHandler 0319  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0318  
                          ?_motor_handler 0070                                  int$flags 007E  
                            ??_motor_init 0072                                  _rx_array 0020  
      __end_of_INTERRUPT_InterruptManager 002D                _INTERRUPT_InterruptManager 0004  
                                _stringer 0038                                _INTCONbits 000B  
                    _INT_InterruptHandler 003E                        _EXT_INT_Initialize 02CF  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                          ?_speed_handler 0070                             ?_hall_handler 0070  
                      __end_of_motor_init 00C0                   ?_PIN_MANAGER_Initialize 0070  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                            _speed_stimer 007A                  ?_INT_SetInterruptHandler 0070  
                    ??_EXT_INT_Initialize 0072                           _TMR0_Initialize 029A  
                             _speed_phigh 002F                               _speed_value 0042  
                          ??_hall_handler 0078            __end_of_PIN_MANAGER_Initialize 0249  
                   __size_of_step_handler 0070                           ??_motor_handler 007A  
